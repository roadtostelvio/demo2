/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var Bis;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/CdsServiceClient.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/CdsServiceClient.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=CdsServiceClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvZGF0YXZlcnNlLWlmeS9DZHNTZXJ2aWNlQ2xpZW50L0Nkc1NlcnZpY2VDbGllbnQuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi9kYXRhdmVyc2UtaWZ5L0Nkc1NlcnZpY2VDbGllbnQvQ2RzU2VydmljZUNsaWVudC5qcz8zZjJiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNkc1NlcnZpY2VDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/CdsServiceClient.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/XrmContextServiceClient.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/XrmContextServiceClient.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.XrmContextCdsServiceClient = void 0;\r\nconst EntityCollection_1 = __webpack_require__(/*! ../../types/EntityCollection */ \"./node_modules/dataverse-ify/lib/types/EntityCollection.js\");\r\nconst EntityReference_1 = __webpack_require__(/*! ../../types/EntityReference */ \"./node_modules/dataverse-ify/lib/types/EntityReference.js\");\r\nconst odataify_1 = __webpack_require__(/*! ../odataify/odataify */ \"./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataify.js\");\r\nconst __1 = __webpack_require__(/*! .. */ \"./node_modules/dataverse-ify/lib/dataverse-ify/index.js\");\r\nconst MetadataCache_1 = __webpack_require__(/*! ../../metadata/MetadataCache */ \"./node_modules/dataverse-ify/lib/metadata/MetadataCache.js\");\r\nclass XrmContextCdsServiceClient {\r\n    constructor(webApi) {\r\n        this._webApi = webApi;\r\n    }\r\n    create(entity) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const record = yield odataify_1.odataify(\"Create\", entity);\r\n            const response = yield this._webApi.createRecord(entity.logicalName, record);\r\n            return response.id;\r\n        });\r\n    }\r\n    update(entity) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // Get the primary key attribute\r\n            const entityMetadata = MetadataCache_1.getMetadataByLogicalName(entity.logicalName);\r\n            // Convert null lookups to EntityReferences with null guid so we can run a delete association\r\n            for (const attribute in entity) {\r\n                const navigation = entityMetadata.navigation && entityMetadata.navigation[attribute];\r\n                if (navigation && entity[attribute] === null) {\r\n                    // We don't support just nulling a pollymorphic lookup because we don't know which relationship\r\n                    // to null.\r\n                    entity[attribute] = new EntityReference_1.EntityReference(navigation[0].replace(\"mscrm.\", \"\"), null);\r\n                }\r\n            }\r\n            const record = yield odataify_1.odataify(\"Update\", entity);\r\n            let id = entity[entityMetadata.primaryIdAttribute];\r\n            // If there is no primary id attribute set, but the id is set then use that\r\n            if (!id && entity.id) {\r\n                id = entity.id;\r\n            }\r\n            else if (!id) {\r\n                throw new Error(\"Either id or the primary id attribute must be set to update the record\");\r\n            }\r\n            // Delete the lookups with null\r\n            // Support for updating related entities separately like we do in the node implementation\r\n            // otherwise we get \"CRM do not support direct update of Entity Reference properties, Use Navigation properties instead.\"\r\n            for (const attribute in record) {\r\n                if (attribute.endsWith(\"@odata.bind\") && record[attribute] && record[attribute].endsWith(\"(null)\")) {\r\n                    const dissassociateRequest = new (class {\r\n                        constructor() {\r\n                            this.target = {\r\n                                id: id,\r\n                                entityType: entity.logicalName,\r\n                            };\r\n                            this.relationship = attribute.substr(0, attribute.length - \"@odata.bind\".length);\r\n                        }\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        getMetadata() {\r\n                            return {\r\n                                parameterTypes: {},\r\n                                operationType: 2,\r\n                                operationName: \"Disassociate\",\r\n                            };\r\n                        }\r\n                    })();\r\n                    yield Xrm.WebApi.online.execute(dissassociateRequest);\r\n                    delete record[attribute];\r\n                }\r\n            }\r\n            try {\r\n                yield this._webApi.updateRecord(entity.logicalName, id, record);\r\n            }\r\n            catch (ex) {\r\n                throw new Error(\"Error during update:\" + ex.message);\r\n            }\r\n        });\r\n    }\r\n    delete(entity, id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (typeof entity === \"string\") {\r\n                yield this._webApi.deleteRecord(entity, id);\r\n            }\r\n            else {\r\n                const entityValue = entity;\r\n                yield this._webApi.deleteRecord(entityValue.logicalName, entityValue.id);\r\n            }\r\n        });\r\n    }\r\n    retrieve(entityName, id, columnSet) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let query = \"\";\r\n            const entityMetadata = MetadataCache_1.getMetadataByLogicalName(entityName);\r\n            const cols = [];\r\n            // When retreiving the activity parties - we simulate the SDK by making virtual fields\r\n            // for sender, to, cc, bcc, required, optional, organizer\r\n            const activitypartyAttributes = [\"to\", \"from\", \"cc\", \"bcc\", \"required\", \"optional\", \"organizer\"];\r\n            let hasActivityPartyExpand = false;\r\n            // Construct the select based on the columns requested\r\n            // true means we return all the attributes\r\n            if (columnSet && columnSet !== true) {\r\n                for (const attribute of columnSet) {\r\n                    if (activitypartyAttributes.indexOf(attribute) > -1) {\r\n                        hasActivityPartyExpand = true;\r\n                    }\r\n                    else {\r\n                        let correctedAttribute = attribute;\r\n                        // If the attribute is a navigation property then format it correctly\r\n                        if (entityMetadata.navigation) {\r\n                            const navigation = MetadataCache_1.caseInsensitiveSearch(attribute, entityMetadata.navigation);\r\n                            if (navigation) {\r\n                                correctedAttribute = \"_\" + attribute + \"_value\";\r\n                            }\r\n                        }\r\n                        cols.push(correctedAttribute);\r\n                    }\r\n                }\r\n                query = `?$select=${cols.join(\",\")}`;\r\n                if (hasActivityPartyExpand) {\r\n                    query += `&$expand=${entityName}_activity_parties($select=activitypartyid,_partyid_value,participationtypemask)`;\r\n                }\r\n            }\r\n            const response = yield this._webApi.retrieveRecord(entityName, id, query);\r\n            const sdkified = (yield __1.sdkify(response, entityName));\r\n            return sdkified;\r\n        });\r\n    }\r\n    getEntityLogicalNameFromFetch(fetch) {\r\n        let entityLogicalName = undefined;\r\n        if (typeof DOMParser != \"undefined\") {\r\n            const domParser = new DOMParser();\r\n            const parsedFetch = domParser.parseFromString(fetch, \"text/html\");\r\n            const entityNameNode = parsedFetch\r\n                .getElementsByTagName(\"fetch\")[0]\r\n                .getElementsByTagName(\"entity\")[0]\r\n                .getAttributeNode(\"name\");\r\n            entityLogicalName = entityNameNode ? entityNameNode.value : \"\";\r\n        }\r\n        else {\r\n            // Fall back to regex for when we are running inside a pure node test environment\r\n            const regex = /name=[\"']?([\\w]+)[\"']?/gm;\r\n            const match = regex.exec(fetch);\r\n            entityLogicalName = match && match.length > 0 ? match[1] : \"\";\r\n        }\r\n        if (entityLogicalName)\r\n            return entityLogicalName;\r\n        else\r\n            throw new Error(`Cannot find entityLogicalName from fetchxml ${fetch}`);\r\n    }\r\n    retrieveMultiple(fetchxml) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const logicalName = this.getEntityLogicalNameFromFetch(fetchxml);\r\n            const results = yield this._webApi.retrieveMultipleRecords(logicalName, \"?fetchXml=\" + encodeURIComponent(fetchxml));\r\n            const output = [];\r\n            for (const record of results.entities) {\r\n                const sdkified = (yield __1.sdkify(record, logicalName));\r\n                output.push(sdkified);\r\n            }\r\n            const entities = new EntityCollection_1.EntityCollection(output);\r\n            return entities;\r\n        });\r\n    }\r\n    associate(_entityName, _entityId, _relationship, _relatedEntities) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            throw new Error(\"Method not implemented.\");\r\n        });\r\n    }\r\n    disassociate(_entityName, _entityId, _relationship, _relatedEntities) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            throw new Error(\"Method not implemented.\");\r\n        });\r\n    }\r\n    execute(request) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const requestWebApi = yield odataify_1.odataify(\"Action\", request);\r\n            const response = yield this._webApi.online.execute(requestWebApi);\r\n            const responseText = yield response.text();\r\n            if (responseText && responseText.length > 0) {\r\n                return JSON.parse(responseText);\r\n            }\r\n            return undefined;\r\n        });\r\n    }\r\n}\r\nexports.XrmContextCdsServiceClient = XrmContextCdsServiceClient;\r\n//# sourceMappingURL=XrmContextServiceClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/XrmContextServiceClient.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/index.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./CdsServiceClient */ \"./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/CdsServiceClient.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./XrmContextServiceClient */ \"./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/XrmContextServiceClient.js\"), exports);\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvZGF0YXZlcnNlLWlmeS9DZHNTZXJ2aWNlQ2xpZW50L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLG1DQUFtQyxvQ0FBb0MsZ0JBQWdCO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsK0dBQW9CO0FBQ3pDLGFBQWEsbUJBQU8sQ0FBQyw2SEFBMkI7QUFDaEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi9kYXRhdmVyc2UtaWZ5L0Nkc1NlcnZpY2VDbGllbnQvaW5kZXguanM/NjgzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xyXG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcclxufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcclxuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XHJcbiAgICBvW2syXSA9IG1ba107XHJcbn0pKTtcclxudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XHJcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xyXG59O1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9DZHNTZXJ2aWNlQ2xpZW50XCIpLCBleHBvcnRzKTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1hybUNvbnRleHRTZXJ2aWNlQ2xpZW50XCIpLCBleHBvcnRzKTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/index.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/dataverse-ify/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/dataverse-ify/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./sdkify/sdkify */ \"./node_modules/dataverse-ify/lib/dataverse-ify/sdkify/sdkify.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./odataify/odataify */ \"./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataify.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./CdsServiceClient */ \"./node_modules/dataverse-ify/lib/dataverse-ify/CdsServiceClient/index.js\"), exports);\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvZGF0YXZlcnNlLWlmeS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSxtQ0FBbUMsb0NBQW9DLGdCQUFnQjtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLHdGQUFpQjtBQUN0QyxhQUFhLG1CQUFPLENBQUMsZ0dBQXFCO0FBQzFDLGFBQWEsbUJBQU8sQ0FBQyxvR0FBb0I7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi9kYXRhdmVyc2UtaWZ5L2luZGV4LmpzP2ZhOGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcclxuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XHJcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XHJcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xyXG4gICAgb1trMl0gPSBtW2tdO1xyXG59KSk7XHJcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xyXG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcclxufTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2RraWZ5L3Nka2lmeVwiKSwgZXhwb3J0cyk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9vZGF0YWlmeS9vZGF0YWlmeVwiKSwgZXhwb3J0cyk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9DZHNTZXJ2aWNlQ2xpZW50XCIpLCBleHBvcnRzKTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/dataverse-ify/index.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataify.js":
/*!***************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataify.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.odataify = void 0;\r\nconst MetadataCache_1 = __webpack_require__(/*! ../../metadata/MetadataCache */ \"./node_modules/dataverse-ify/lib/metadata/MetadataCache.js\");\r\nconst StructuralProperty_1 = __webpack_require__(/*! ../../types/StructuralProperty */ \"./node_modules/dataverse-ify/lib/types/StructuralProperty.js\");\r\nconst odataifyFields_1 = __webpack_require__(/*! ./odataifyFields */ \"./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataifyFields.js\");\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfunction odataify(action, value) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const metadataCache = MetadataCache_1.getMetadataCache();\r\n        // Is the value an array or Entitycollection?\r\n        if (value.constructor.name === \"Array\") {\r\n            const odataRecords = [];\r\n            for (const record of value) {\r\n                const value = yield odataify(action, record);\r\n                odataRecords.push(value);\r\n            }\r\n            return odataRecords;\r\n        }\r\n        // EntityCollection\r\n        else if (value.entities !== undefined) {\r\n            const odataValue = yield odataify(action, value.entities);\r\n            return odataValue;\r\n        }\r\n        const logicalName = value.logicalName;\r\n        if (!logicalName) {\r\n            throw new Error(\"logicalName property not found on object. This is needed to odataify the object.\");\r\n        }\r\n        let valueSet = false;\r\n        const metadata = metadataCache.entities && metadataCache.entities[logicalName];\r\n        if (metadata != null) {\r\n            valueSet = true;\r\n            // Entity\r\n            const entityMetadata = metadata;\r\n            const entityValue = value;\r\n            const output = Object.assign({}, entityValue);\r\n            // Add the metadata type\r\n            output[\"@odata.type\"] = \"Microsoft.Dynamics.CRM.\" + logicalName;\r\n            // Remove attributes that are not needed in the OData payload\r\n            delete output.id;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            delete output.logicalName;\r\n            delete output.formattedValues;\r\n            // Change the types for the odata payload\r\n            yield odataifyFields_1.odataifyFields(action, output, entityValue, entityMetadata);\r\n            // Format the Odata ID\r\n            switch (action) {\r\n                case \"Update\":\r\n                    // Remove the primary key\r\n                    delete output[entityMetadata.primaryIdAttribute];\r\n                    break;\r\n                case \"Action\":\r\n                    // The primary key must be odatified\r\n                    if (entityValue.id && entityValue.id) {\r\n                        output[`${entityMetadata.primaryIdAttribute}@odata.bind`] = `/${entityMetadata.collectionName}(${entityValue.id.toString()})`;\r\n                    }\r\n                    break;\r\n            }\r\n            return output;\r\n        }\r\n        // Action or Function\r\n        const webApiMetdata = metadataCache.actions && metadataCache.actions[logicalName];\r\n        if (webApiMetdata) {\r\n            valueSet = true;\r\n            // This is a web api action request\r\n            const request = value;\r\n            const webApiRequest = new (class {\r\n                getMetadata() {\r\n                    return webApiMetdata;\r\n                }\r\n            })();\r\n            const requestOdata = Object.assign(webApiRequest, request);\r\n            // Get the parameters\r\n            for (const field of Object.keys(requestOdata)) {\r\n                if (field === \"getMetadata\" || field === \"logicalName\")\r\n                    continue;\r\n                // odataify each field if it is an entity\r\n                const fieldValue = requestOdata[field];\r\n                // Get the type from the metadata\r\n                const parameterMetadata = webApiMetdata.parameterTypes[field];\r\n                if (parameterMetadata) {\r\n                    // If Taret - then change to EntityType\r\n                    if (field === \"Target\" && parameterMetadata.structuralProperty === StructuralProperty_1.StructuralProperty.ComplexType) {\r\n                        parameterMetadata.structuralProperty = StructuralProperty_1.StructuralProperty.EntityType;\r\n                    }\r\n                    switch (parameterMetadata.structuralProperty) {\r\n                        case StructuralProperty_1.StructuralProperty.EnumerationType:\r\n                        case StructuralProperty_1.StructuralProperty.PrimitiveType:\r\n                            requestOdata[field] = fieldValue;\r\n                            break;\r\n                        case StructuralProperty_1.StructuralProperty.Collection:\r\n                            const collection = fieldValue;\r\n                            if (collection && collection.length > 0) {\r\n                                requestOdata[field] = yield odataify(\"Create\", fieldValue);\r\n                            }\r\n                            break;\r\n                        case StructuralProperty_1.StructuralProperty.EntityType:\r\n                            // This is an entity record pointer\r\n                            const fieldValueAsEntityReference = fieldValue;\r\n                            const fieldValueAsEntity = fieldValue;\r\n                            if (fieldValueAsEntityReference.entityType && fieldValueAsEntityReference.id) {\r\n                                // See https://docs.microsoft.com/en-us/dynamics365/customer-engagement/developer/webapi/use-web-api-functions#pass-reference-to-an-entity-to-a-function\r\n                                requestOdata[field] = fieldValueAsEntityReference; //{'@odata.id':Entity.odatifyEntityReference(collectionName,fieldValueAsEntityReference.id)};\r\n                            }\r\n                            else if (fieldValueAsEntity.logicalName) {\r\n                                requestOdata[field] = yield odataify(\"Action\", fieldValue);\r\n                            }\r\n                            break;\r\n                        case StructuralProperty_1.StructuralProperty.Unknown:\r\n                        default:\r\n                            throw new Error(\"Unknown parameter type on action.\");\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error(`Unexpected parameter ${field} on execute Request`);\r\n                }\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            delete requestOdata.logicalName;\r\n            return requestOdata;\r\n        }\r\n        if (!valueSet) {\r\n            throw new Error(`Cannot odataify - no metadata found for ${logicalName}`);\r\n        }\r\n    });\r\n}\r\nexports.odataify = odataify;\r\n//# sourceMappingURL=odataify.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataify.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataifyFields.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataifyFields.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.odataifyFields = void 0;\r\nconst Entity_1 = __webpack_require__(/*! ../../types/Entity */ \"./node_modules/dataverse-ify/lib/types/Entity.js\");\r\nconst IEntityReference_1 = __webpack_require__(/*! ../../types/IEntityReference */ \"./node_modules/dataverse-ify/lib/types/IEntityReference.js\");\r\nconst odataify_1 = __webpack_require__(/*! ./odataify */ \"./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataify.js\");\r\nconst MetadataCache_1 = __webpack_require__(/*! ../../metadata/MetadataCache */ \"./node_modules/dataverse-ify/lib/metadata/MetadataCache.js\");\r\nfunction odataifyFields(action, output, value, metadata) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        for (const field of Object.keys(output)) {\r\n            const fieldType = Object.prototype.toString.call(output[field]);\r\n            const fieldValue = output[field];\r\n            const fieldAttributeType = metadata.attributeTypes[field];\r\n            // Convert primitive types\r\n            switch (fieldAttributeType) {\r\n                case \"Integer\" /* Integer */:\r\n                    output[field] = fieldValue && parseInt(fieldValue);\r\n                    break;\r\n            }\r\n            switch (fieldType) {\r\n                case \"[object Undefined]\":\r\n                    // When setting a value to undefined it must be null when sent to the WebApi\r\n                    output[field] = null;\r\n                    break;\r\n                case \"[object Array]\":\r\n                    // Array of Activity Parties or enums\r\n                    // TODO: Add unit test for empty arrays\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    const itemArray = fieldValue;\r\n                    if (itemArray.length > 0) {\r\n                        // What is the type of the items\r\n                        const arrayType = itemArray[0].constructor.name;\r\n                        switch (arrayType) {\r\n                            case \"Number\":\r\n                                output[field] = itemArray.join(\",\");\r\n                                break;\r\n                            case \"Object\":\r\n                                // Is this an array of activity parties?\r\n                                const party = itemArray[0];\r\n                                if (party.partyid != null) {\r\n                                    const activityPartiesField = `${metadata.logicalName}_activity_parties`;\r\n                                    let activityParties = [];\r\n                                    // Does the activity parties array already exist?\r\n                                    if (!output[activityPartiesField]) {\r\n                                        output[activityPartiesField] = activityParties;\r\n                                    }\r\n                                    else {\r\n                                        activityParties = output[activityPartiesField];\r\n                                    }\r\n                                    for (const item of itemArray) {\r\n                                        const webapiParty = (yield odataify_1.odataify(\"Create\", item));\r\n                                        // Map to the participation type mask\r\n                                        let participationTypeMask;\r\n                                        switch (field) {\r\n                                            case \"bcc\":\r\n                                                participationTypeMask = 4 /* BCC_Recipient */;\r\n                                                break;\r\n                                            case \"cc\":\r\n                                                participationTypeMask = 3 /* CC_Recipient */;\r\n                                                break;\r\n                                            case \"optional\":\r\n                                                participationTypeMask = 6 /* Optional_attendee */;\r\n                                                break;\r\n                                            case \"requiredattendees\":\r\n                                                participationTypeMask = 5 /* Required_attendee */;\r\n                                                break;\r\n                                            case \"from\":\r\n                                                participationTypeMask = 1 /* Sender */;\r\n                                                break;\r\n                                            case \"to\":\r\n                                                participationTypeMask = 2 /* To_Recipient */;\r\n                                                break;\r\n                                            default:\r\n                                                throw new Error(`Cannot map participation type mask for field ${field}`);\r\n                                        }\r\n                                        webapiParty.participationtypemask = participationTypeMask;\r\n                                        activityParties.push(webapiParty);\r\n                                    }\r\n                                    // Remove the to/from/bcc/regarding field etc.\r\n                                    delete output[field];\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                    else\r\n                        output[field] = null;\r\n                    break;\r\n                case \"[object Object]\":\r\n                    // Check if it's an EntityCollection\r\n                    if (Entity_1.Entity.containsFields(fieldValue, [\"entities\"])) {\r\n                        output[field] = yield odataify_1.odataify(action, fieldValue.entities);\r\n                    }\r\n                    // Create navigation properties for each entity reference\r\n                    // Check for entity reference\r\n                    else if (Entity_1.Entity.containsFields(fieldValue, [\"id\", \"entityType\"])) {\r\n                        const entityRef = fieldValue;\r\n                        let targetField = field;\r\n                        // If there are multiple navigation types, then convert to the correct field name by adding _<logicalname>\r\n                        const navigation = MetadataCache_1.caseInsensitiveSearch(field, metadata.navigation);\r\n                        if (navigation != null) {\r\n                            targetField = navigation.key;\r\n                            if (navigation.value.length > 1) {\r\n                                // This is a customer style field that has more than one target type\r\n                                targetField = targetField + \"_\" + entityRef.entityType;\r\n                            }\r\n                        }\r\n                        // Convert into odata navigation properties\r\n                        output[`${targetField}@odata.bind`] = yield IEntityReference_1.getNavigationPathForEntityReference(value, field);\r\n                        delete output[field];\r\n                    }\r\n                    break;\r\n                case \"[object Date]\":\r\n                    // If the time element is set for Date Time fields - format accordingly\r\n                    const dateValue = fieldValue;\r\n                    let dateString = dateValue.toJSON();\r\n                    // If the date field is DateOnly:DateOnly then trim the value to have no time\r\n                    if (dateString && metadata.attributeTypes[field] === \"DateOnly:DateOnly\") {\r\n                        dateString = dateString.substring(0, 10);\r\n                    }\r\n                    output[field] = dateString;\r\n                    break;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n}\r\nexports.odataifyFields = odataifyFields;\r\n//# sourceMappingURL=odataifyFields.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/dataverse-ify/odataify/odataifyFields.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/dataverse-ify/sdkify/dateReviver.js":
/*!****************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/dataverse-ify/sdkify/dateReviver.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.dateReviver = void 0;\r\nfunction dateReviver(_key, value) {\r\n    if (typeof value === \"string\") {\r\n        const a = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\r\n        if (a) {\r\n            return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4], +a[5], +a[6]));\r\n        }\r\n    }\r\n    return value;\r\n}\r\nexports.dateReviver = dateReviver;\r\n//# sourceMappingURL=dateReviver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvZGF0YXZlcnNlLWlmeS9zZGtpZnkvZGF0ZVJldml2ZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQSx3QkFBd0IsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL0Jpcy5Db21tb24uQ1JNLy4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL2RhdGF2ZXJzZS1pZnkvc2RraWZ5L2RhdGVSZXZpdmVyLmpzPzMzNTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuZXhwb3J0cy5kYXRlUmV2aXZlciA9IHZvaWQgMDtcclxuZnVuY3Rpb24gZGF0ZVJldml2ZXIoX2tleSwgdmFsdWUpIHtcclxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcclxuICAgICAgICBjb25zdCBhID0gL14oXFxkezR9KS0oXFxkezJ9KS0oXFxkezJ9KVQoXFxkezJ9KTooXFxkezJ9KTooXFxkezJ9KD86XFwuXFxkKik/KVokLy5leGVjKHZhbHVlKTtcclxuICAgICAgICBpZiAoYSkge1xyXG4gICAgICAgICAgICByZXR1cm4gbmV3IERhdGUoRGF0ZS5VVEMoK2FbMV0sICthWzJdIC0gMSwgK2FbM10sICthWzRdLCArYVs1XSwgK2FbNl0pKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdmFsdWU7XHJcbn1cclxuZXhwb3J0cy5kYXRlUmV2aXZlciA9IGRhdGVSZXZpdmVyO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRlUmV2aXZlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/dataverse-ify/sdkify/dateReviver.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/dataverse-ify/sdkify/sdkify.js":
/*!***********************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/dataverse-ify/sdkify/sdkify.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.sdkify = void 0;\r\n/* eslint-disable camelcase */\r\n/* eslint-disable @typescript-eslint/camelcase */\r\nconst EntityReference_1 = __webpack_require__(/*! ../../types/EntityReference */ \"./node_modules/dataverse-ify/lib/types/EntityReference.js\");\r\nconst AttributeTypes_1 = __webpack_require__(/*! ../../types/AttributeTypes */ \"./node_modules/dataverse-ify/lib/types/AttributeTypes.js\");\r\nconst EntityCollection_1 = __webpack_require__(/*! ../../types/EntityCollection */ \"./node_modules/dataverse-ify/lib/types/EntityCollection.js\");\r\nconst dateReviver_1 = __webpack_require__(/*! ./dateReviver */ \"./node_modules/dataverse-ify/lib/dataverse-ify/sdkify/dateReviver.js\");\r\nconst getEntityMetadataFromRecord_1 = __webpack_require__(/*! ../../metadata/getEntityMetadataFromRecord */ \"./node_modules/dataverse-ify/lib/metadata/getEntityMetadataFromRecord.js\");\r\nconst NullOrUndefined_1 = __webpack_require__(/*! ../../webapi/utils/NullOrUndefined */ \"./node_modules/dataverse-ify/lib/webapi/utils/NullOrUndefined.js\");\r\n// Remove the fields not needed (@ and _ fields)\r\nfunction removeNonSdkFields(entityRecord) {\r\n    for (const field of Object.keys(entityRecord)) {\r\n        if (field.startsWith(\"_\") || field.indexOf(\"@\") > -1) {\r\n            delete entityRecord[field];\r\n        }\r\n    }\r\n}\r\n// Expand out the activity party relationship array into to,from,bcc etc\r\nfunction expandActivityPartiesToFields(entityRecord, activityPartiesField) {\r\n    // In the UCI the expand navigation property returns a promise!\r\n    const parties = entityRecord[activityPartiesField];\r\n    let entities = [];\r\n    if (parties.entities) {\r\n        entities = parties.entities;\r\n    }\r\n    else {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        entities = parties;\r\n    }\r\n    for (const a of entities) {\r\n        let partyField = null;\r\n        // Determine which field to add to\r\n        switch (a.participationtypemask) {\r\n            case 4 /* BCC_Recipient */:\r\n                partyField = \"bcc\";\r\n                break;\r\n            case 3 /* CC_Recipient */:\r\n                partyField = \"cc\";\r\n                break;\r\n            case 6 /* Optional_attendee */:\r\n                partyField = \"optional\";\r\n                break;\r\n            case 5 /* Required_attendee */:\r\n                partyField = \"requiredattendees\";\r\n                break;\r\n            case 1 /* Sender */:\r\n                partyField = \"from\";\r\n                break;\r\n            case 2 /* To_Recipient */:\r\n                partyField = \"to\";\r\n                break;\r\n        }\r\n        if (partyField != null) {\r\n            let partyList = entityRecord[partyField];\r\n            if (NullOrUndefined_1.isNullOrUndefined(partyList)) {\r\n                partyList = [];\r\n                entityRecord[partyField] = partyList;\r\n            }\r\n            partyList.push(a);\r\n        }\r\n    }\r\n}\r\nfunction sdkifyArray(value, logicalName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const cdsRecords = [];\r\n        for (const record of value) {\r\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n            cdsRecords.push((yield sdkify(record, logicalName)));\r\n        }\r\n        return new EntityCollection_1.EntityCollection(cdsRecords);\r\n    });\r\n}\r\nfunction sdkifyEntityCollection(value, logicalName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const response = value;\r\n        const records = (yield sdkifyArray(response.entities, logicalName));\r\n        records.pagingCooking = response.nextLink;\r\n        return records;\r\n    });\r\n}\r\nfunction sdkifyEntity(entityRecord, logicalName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const entityMetadata = getEntityMetadataFromRecord_1.getEntityMetadataFromRecord(entityRecord, logicalName);\r\n        if (entityMetadata != null) {\r\n            // Formatted values hold the text labels\r\n            entityRecord.formattedValues = entityRecord.formattedValues || {};\r\n            let activityPartiesField;\r\n            // Turn each complex type property into the sdk fields\r\n            for (const field of Object.keys(entityRecord)) {\r\n                const posAt = field.lastIndexOf(\"@\");\r\n                const containsAt = posAt > -1;\r\n                const navigationProperty = field.endsWith(\"@Microsoft.Dynamics.CRM.lookuplogicalname\");\r\n                const underscore = field.startsWith(\"_\");\r\n                if ((!containsAt && !underscore) || navigationProperty) {\r\n                    let attributeValue = null;\r\n                    let attributeType = AttributeTypes_1.AttributeTypes.Unknown;\r\n                    let attributeLogicalName = field;\r\n                    const attributeNameWithoutAt = field.substr(0, posAt);\r\n                    /*\r\n                    We need to determine which type the field is here\r\n                    ---Dates---\r\n                    Dates we use the 'DateReviver' pattern\r\n                    however this is very inefficient since it runs the regex on every field value\r\n            \r\n                    ---EntityReference---\r\n                    Entity reference we can infer from the presence of the Microsoft.Dynamics.CRM.lookuplogicalname\r\n                    and Microsoft.Dynamics.CRM.associatednavigationproperty\r\n                    _parentcustomerid_value@Microsoft.Dynamics.CRM.associatednavigationproperty=parentcustomerid_account\r\n                    _parentcustomerid_value@Microsoft.Dynamics.CRM.lookuplogicalname=account\r\n                    _parentcustomerid_value@OData.Community.Display.V1.FormattedValue=xyz\r\n                                        \r\n                    _primarycontactid_value@Microsoft.Dynamics.CRM.associatednavigationproperty=primarycontactid\r\n                    _primarycontactid_value@Microsoft.Dynamics.CRM.lookuplogicalname=contact\r\n                    _primarycontactid_value@OData.Community.Display.V1.FormattedValue=xyz\r\n                    */\r\n                    if (navigationProperty) {\r\n                        attributeLogicalName = attributeNameWithoutAt;\r\n                    }\r\n                    const navigationPropertyName = attributeNameWithoutAt + \"@Microsoft.Dynamics.CRM.associatednavigationproperty\";\r\n                    const lookupLogicalName = attributeNameWithoutAt + \"@Microsoft.Dynamics.CRM.lookuplogicalname\";\r\n                    const formattedValueName = attributeLogicalName + \"@OData.Community.Display.V1.FormattedValue\";\r\n                    if (attributeLogicalName.endsWith(\"_activity_parties\")) {\r\n                        attributeType = AttributeTypes_1.AttributeTypes.EntityCollection;\r\n                    }\r\n                    else if (navigationProperty && entityRecord[lookupLogicalName] != null) {\r\n                        attributeType = AttributeTypes_1.AttributeTypes.EntityReference;\r\n                    }\r\n                    else {\r\n                        let metadataType = entityMetadata.attributeTypes[field];\r\n                        // For DateTimes, trim off the second part\r\n                        metadataType = metadataType != null ? metadataType.split(\":\")[0] : \"\";\r\n                        // TODO: Match strings to the optionset names?\r\n                        switch (metadataType) {\r\n                            case \"Optionset\":\r\n                                attributeType = AttributeTypes_1.AttributeTypes.OptionSetValue;\r\n                                break;\r\n                            case \"MultiSelect\":\r\n                                attributeType = AttributeTypes_1.AttributeTypes.MultiSelectOptionSetValue;\r\n                                break;\r\n                            case \"Money\":\r\n                                attributeType = AttributeTypes_1.AttributeTypes.Money;\r\n                                break;\r\n                            case \"DateOnly\":\r\n                            case \"DateAndTime\":\r\n                                attributeType = AttributeTypes_1.AttributeTypes.DateTime;\r\n                                break;\r\n                            /*---Aliased Value---\r\n                            There doesn't seem to be any way of determining of a returned field value is an aliased value\r\n                            This means that there is no way of determining the type from querying metadata.\r\n                            */\r\n                        }\r\n                    }\r\n                    // Add the formatted value if there is one\r\n                    if (entityRecord[formattedValueName] != null)\r\n                        entityRecord.formattedValues[attributeLogicalName] = entityRecord[formattedValueName];\r\n                    switch (attributeType) {\r\n                        case AttributeTypes_1.AttributeTypes.EntityReference:\r\n                            const entityType = entityRecord[lookupLogicalName];\r\n                            attributeValue = new EntityReference_1.EntityReference(entityType, entityRecord[attributeLogicalName], entityRecord[formattedValueName]);\r\n                            // Get the attribute logical name\r\n                            const lookupAttributeName = entityRecord[navigationPropertyName];\r\n                            if (attributeLogicalName.endsWith(\"_value\") && attributeLogicalName.startsWith(\"_\")) {\r\n                                attributeLogicalName = attributeLogicalName.substr(1, attributeLogicalName.length - \"_value\".length - 1);\r\n                            }\r\n                            else if (lookupAttributeName != null) {\r\n                                // Get the actual logical name of the attribute\r\n                                if (lookupAttributeName.endsWith(\"_\" + entityType)) {\r\n                                    const typePos = lookupAttributeName.lastIndexOf(\"_\" + entityType);\r\n                                    attributeLogicalName = lookupAttributeName.substr(0, typePos);\r\n                                }\r\n                                else {\r\n                                    attributeLogicalName = lookupAttributeName;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case AttributeTypes_1.AttributeTypes.Money:\r\n                            attributeValue = entityRecord[attributeLogicalName];\r\n                            break;\r\n                        case AttributeTypes_1.AttributeTypes.MultiSelectOptionSetValue:\r\n                            attributeValue = entityRecord[attributeLogicalName];\r\n                            if (attributeValue != null) {\r\n                                const valueStrings = attributeValue.split(\",\");\r\n                                const valueInts = [];\r\n                                for (const v of valueStrings.reverse()) {\r\n                                    valueInts.push(Number.parseInt(v));\r\n                                }\r\n                                attributeValue = valueInts;\r\n                            }\r\n                            if (entityRecord[formattedValueName] != null) {\r\n                                entityRecord.formattedValues[attributeLogicalName] = entityRecord[formattedValueName];\r\n                            }\r\n                            break;\r\n                        case AttributeTypes_1.AttributeTypes.OptionSetValue:\r\n                            attributeValue = entityRecord[attributeLogicalName];\r\n                            break;\r\n                        case AttributeTypes_1.AttributeTypes.EntityCollection:\r\n                            // Do we have the logical name of the relationship?\r\n                            let navigationLogicalName = \"\";\r\n                            if (field.endsWith(\"_activity_parties\")) {\r\n                                navigationLogicalName = \"activityparty\";\r\n                                activityPartiesField = field;\r\n                            }\r\n                            else if (entityMetadata.navigation[field] != null) {\r\n                                navigationLogicalName = entityMetadata.navigation[field][0];\r\n                            }\r\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n                            attributeValue = yield sdkify(entityRecord[attributeLogicalName], navigationLogicalName);\r\n                            break;\r\n                        case AttributeTypes_1.AttributeTypes.DateTime:\r\n                            attributeValue = new Date(Date.parse(entityRecord[attributeLogicalName]));\r\n                            break;\r\n                        default:\r\n                            // Default - set primitive type value\r\n                            attributeValue = entityRecord[attributeLogicalName];\r\n                            break;\r\n                    }\r\n                    entityRecord[attributeLogicalName] = attributeValue;\r\n                }\r\n            }\r\n            removeNonSdkFields(entityRecord);\r\n            // If this is an activity party then populate the correct 'virtual field'\r\n            if (activityPartiesField) {\r\n                expandActivityPartiesToFields(entityRecord, activityPartiesField);\r\n            }\r\n        }\r\n        entityRecord.logicalName = logicalName;\r\n        return entityRecord;\r\n    });\r\n}\r\nfunction sdkify(\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nvalue, logicalName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (value.json) {\r\n            // This is a UCI response object and we need to await the json converstion\r\n            value = yield value.json();\r\n        }\r\n        if (value.responseText) {\r\n            // This is a raw execute response\r\n            value = JSON.parse(value.responseText, dateReviver_1.dateReviver);\r\n        }\r\n        if (value.entities !== undefined) {\r\n            return sdkifyEntityCollection(value, logicalName);\r\n        }\r\n        else if (value.constructor.name === \"Array\") {\r\n            return sdkifyArray(value, logicalName);\r\n        }\r\n        else {\r\n            return sdkifyEntity(value, logicalName);\r\n        }\r\n    });\r\n}\r\nexports.sdkify = sdkify;\r\n//# sourceMappingURL=sdkify.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvZGF0YXZlcnNlLWlmeS9zZGtpZnkvc2RraWZ5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBLDBCQUEwQixtQkFBTyxDQUFDLDhGQUE2QjtBQUMvRCx5QkFBeUIsbUJBQU8sQ0FBQyw0RkFBNEI7QUFDN0QsMkJBQTJCLG1CQUFPLENBQUMsZ0dBQThCO0FBQ2pFLHNCQUFzQixtQkFBTyxDQUFDLDJGQUFlO0FBQzdDLHNDQUFzQyxtQkFBTyxDQUFDLDRIQUE0QztBQUMxRiwwQkFBMEIsbUJBQU8sQ0FBQyw0R0FBb0M7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxjQUFjO0FBQ2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi9kYXRhdmVyc2UtaWZ5L3Nka2lmeS9zZGtpZnkuanM/ODlmYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XHJcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cclxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxyXG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcclxuICAgIH0pO1xyXG59O1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuc2RraWZ5ID0gdm9pZCAwO1xyXG4vKiBlc2xpbnQtZGlzYWJsZSBjYW1lbGNhc2UgKi9cclxuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L2NhbWVsY2FzZSAqL1xyXG5jb25zdCBFbnRpdHlSZWZlcmVuY2VfMSA9IHJlcXVpcmUoXCIuLi8uLi90eXBlcy9FbnRpdHlSZWZlcmVuY2VcIik7XHJcbmNvbnN0IEF0dHJpYnV0ZVR5cGVzXzEgPSByZXF1aXJlKFwiLi4vLi4vdHlwZXMvQXR0cmlidXRlVHlwZXNcIik7XHJcbmNvbnN0IEVudGl0eUNvbGxlY3Rpb25fMSA9IHJlcXVpcmUoXCIuLi8uLi90eXBlcy9FbnRpdHlDb2xsZWN0aW9uXCIpO1xyXG5jb25zdCBkYXRlUmV2aXZlcl8xID0gcmVxdWlyZShcIi4vZGF0ZVJldml2ZXJcIik7XHJcbmNvbnN0IGdldEVudGl0eU1ldGFkYXRhRnJvbVJlY29yZF8xID0gcmVxdWlyZShcIi4uLy4uL21ldGFkYXRhL2dldEVudGl0eU1ldGFkYXRhRnJvbVJlY29yZFwiKTtcclxuY29uc3QgTnVsbE9yVW5kZWZpbmVkXzEgPSByZXF1aXJlKFwiLi4vLi4vd2ViYXBpL3V0aWxzL051bGxPclVuZGVmaW5lZFwiKTtcclxuLy8gUmVtb3ZlIHRoZSBmaWVsZHMgbm90IG5lZWRlZCAoQCBhbmQgXyBmaWVsZHMpXHJcbmZ1bmN0aW9uIHJlbW92ZU5vblNka0ZpZWxkcyhlbnRpdHlSZWNvcmQpIHtcclxuICAgIGZvciAoY29uc3QgZmllbGQgb2YgT2JqZWN0LmtleXMoZW50aXR5UmVjb3JkKSkge1xyXG4gICAgICAgIGlmIChmaWVsZC5zdGFydHNXaXRoKFwiX1wiKSB8fCBmaWVsZC5pbmRleE9mKFwiQFwiKSA+IC0xKSB7XHJcbiAgICAgICAgICAgIGRlbGV0ZSBlbnRpdHlSZWNvcmRbZmllbGRdO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4vLyBFeHBhbmQgb3V0IHRoZSBhY3Rpdml0eSBwYXJ0eSByZWxhdGlvbnNoaXAgYXJyYXkgaW50byB0byxmcm9tLGJjYyBldGNcclxuZnVuY3Rpb24gZXhwYW5kQWN0aXZpdHlQYXJ0aWVzVG9GaWVsZHMoZW50aXR5UmVjb3JkLCBhY3Rpdml0eVBhcnRpZXNGaWVsZCkge1xyXG4gICAgLy8gSW4gdGhlIFVDSSB0aGUgZXhwYW5kIG5hdmlnYXRpb24gcHJvcGVydHkgcmV0dXJucyBhIHByb21pc2UhXHJcbiAgICBjb25zdCBwYXJ0aWVzID0gZW50aXR5UmVjb3JkW2FjdGl2aXR5UGFydGllc0ZpZWxkXTtcclxuICAgIGxldCBlbnRpdGllcyA9IFtdO1xyXG4gICAgaWYgKHBhcnRpZXMuZW50aXRpZXMpIHtcclxuICAgICAgICBlbnRpdGllcyA9IHBhcnRpZXMuZW50aXRpZXM7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxyXG4gICAgICAgIGVudGl0aWVzID0gcGFydGllcztcclxuICAgIH1cclxuICAgIGZvciAoY29uc3QgYSBvZiBlbnRpdGllcykge1xyXG4gICAgICAgIGxldCBwYXJ0eUZpZWxkID0gbnVsbDtcclxuICAgICAgICAvLyBEZXRlcm1pbmUgd2hpY2ggZmllbGQgdG8gYWRkIHRvXHJcbiAgICAgICAgc3dpdGNoIChhLnBhcnRpY2lwYXRpb250eXBlbWFzaykge1xyXG4gICAgICAgICAgICBjYXNlIDQgLyogQkNDX1JlY2lwaWVudCAqLzpcclxuICAgICAgICAgICAgICAgIHBhcnR5RmllbGQgPSBcImJjY1wiO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMyAvKiBDQ19SZWNpcGllbnQgKi86XHJcbiAgICAgICAgICAgICAgICBwYXJ0eUZpZWxkID0gXCJjY1wiO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgNiAvKiBPcHRpb25hbF9hdHRlbmRlZSAqLzpcclxuICAgICAgICAgICAgICAgIHBhcnR5RmllbGQgPSBcIm9wdGlvbmFsXCI7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSA1IC8qIFJlcXVpcmVkX2F0dGVuZGVlICovOlxyXG4gICAgICAgICAgICAgICAgcGFydHlGaWVsZCA9IFwicmVxdWlyZWRhdHRlbmRlZXNcIjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDEgLyogU2VuZGVyICovOlxyXG4gICAgICAgICAgICAgICAgcGFydHlGaWVsZCA9IFwiZnJvbVwiO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMiAvKiBUb19SZWNpcGllbnQgKi86XHJcbiAgICAgICAgICAgICAgICBwYXJ0eUZpZWxkID0gXCJ0b1wiO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChwYXJ0eUZpZWxkICE9IG51bGwpIHtcclxuICAgICAgICAgICAgbGV0IHBhcnR5TGlzdCA9IGVudGl0eVJlY29yZFtwYXJ0eUZpZWxkXTtcclxuICAgICAgICAgICAgaWYgKE51bGxPclVuZGVmaW5lZF8xLmlzTnVsbE9yVW5kZWZpbmVkKHBhcnR5TGlzdCkpIHtcclxuICAgICAgICAgICAgICAgIHBhcnR5TGlzdCA9IFtdO1xyXG4gICAgICAgICAgICAgICAgZW50aXR5UmVjb3JkW3BhcnR5RmllbGRdID0gcGFydHlMaXN0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHBhcnR5TGlzdC5wdXNoKGEpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5mdW5jdGlvbiBzZGtpZnlBcnJheSh2YWx1ZSwgbG9naWNhbE5hbWUpIHtcclxuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgY29uc3QgY2RzUmVjb3JkcyA9IFtdO1xyXG4gICAgICAgIGZvciAoY29uc3QgcmVjb3JkIG9mIHZhbHVlKSB7XHJcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlLWJlZm9yZS1kZWZpbmVcclxuICAgICAgICAgICAgY2RzUmVjb3Jkcy5wdXNoKCh5aWVsZCBzZGtpZnkocmVjb3JkLCBsb2dpY2FsTmFtZSkpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG5ldyBFbnRpdHlDb2xsZWN0aW9uXzEuRW50aXR5Q29sbGVjdGlvbihjZHNSZWNvcmRzKTtcclxuICAgIH0pO1xyXG59XHJcbmZ1bmN0aW9uIHNka2lmeUVudGl0eUNvbGxlY3Rpb24odmFsdWUsIGxvZ2ljYWxOYW1lKSB7XHJcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gdmFsdWU7XHJcbiAgICAgICAgY29uc3QgcmVjb3JkcyA9ICh5aWVsZCBzZGtpZnlBcnJheShyZXNwb25zZS5lbnRpdGllcywgbG9naWNhbE5hbWUpKTtcclxuICAgICAgICByZWNvcmRzLnBhZ2luZ0Nvb2tpbmcgPSByZXNwb25zZS5uZXh0TGluaztcclxuICAgICAgICByZXR1cm4gcmVjb3JkcztcclxuICAgIH0pO1xyXG59XHJcbmZ1bmN0aW9uIHNka2lmeUVudGl0eShlbnRpdHlSZWNvcmQsIGxvZ2ljYWxOYW1lKSB7XHJcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgIGNvbnN0IGVudGl0eU1ldGFkYXRhID0gZ2V0RW50aXR5TWV0YWRhdGFGcm9tUmVjb3JkXzEuZ2V0RW50aXR5TWV0YWRhdGFGcm9tUmVjb3JkKGVudGl0eVJlY29yZCwgbG9naWNhbE5hbWUpO1xyXG4gICAgICAgIGlmIChlbnRpdHlNZXRhZGF0YSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIC8vIEZvcm1hdHRlZCB2YWx1ZXMgaG9sZCB0aGUgdGV4dCBsYWJlbHNcclxuICAgICAgICAgICAgZW50aXR5UmVjb3JkLmZvcm1hdHRlZFZhbHVlcyA9IGVudGl0eVJlY29yZC5mb3JtYXR0ZWRWYWx1ZXMgfHwge307XHJcbiAgICAgICAgICAgIGxldCBhY3Rpdml0eVBhcnRpZXNGaWVsZDtcclxuICAgICAgICAgICAgLy8gVHVybiBlYWNoIGNvbXBsZXggdHlwZSBwcm9wZXJ0eSBpbnRvIHRoZSBzZGsgZmllbGRzXHJcbiAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGQgb2YgT2JqZWN0LmtleXMoZW50aXR5UmVjb3JkKSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcG9zQXQgPSBmaWVsZC5sYXN0SW5kZXhPZihcIkBcIik7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjb250YWluc0F0ID0gcG9zQXQgPiAtMTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG5hdmlnYXRpb25Qcm9wZXJ0eSA9IGZpZWxkLmVuZHNXaXRoKFwiQE1pY3Jvc29mdC5EeW5hbWljcy5DUk0ubG9va3VwbG9naWNhbG5hbWVcIik7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB1bmRlcnNjb3JlID0gZmllbGQuc3RhcnRzV2l0aChcIl9cIik7XHJcbiAgICAgICAgICAgICAgICBpZiAoKCFjb250YWluc0F0ICYmICF1bmRlcnNjb3JlKSB8fCBuYXZpZ2F0aW9uUHJvcGVydHkpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgYXR0cmlidXRlVmFsdWUgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBhdHRyaWJ1dGVUeXBlID0gQXR0cmlidXRlVHlwZXNfMS5BdHRyaWJ1dGVUeXBlcy5Vbmtub3duO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBhdHRyaWJ1dGVMb2dpY2FsTmFtZSA9IGZpZWxkO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGF0dHJpYnV0ZU5hbWVXaXRob3V0QXQgPSBmaWVsZC5zdWJzdHIoMCwgcG9zQXQpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8qXHJcbiAgICAgICAgICAgICAgICAgICAgV2UgbmVlZCB0byBkZXRlcm1pbmUgd2hpY2ggdHlwZSB0aGUgZmllbGQgaXMgaGVyZVxyXG4gICAgICAgICAgICAgICAgICAgIC0tLURhdGVzLS0tXHJcbiAgICAgICAgICAgICAgICAgICAgRGF0ZXMgd2UgdXNlIHRoZSAnRGF0ZVJldml2ZXInIHBhdHRlcm5cclxuICAgICAgICAgICAgICAgICAgICBob3dldmVyIHRoaXMgaXMgdmVyeSBpbmVmZmljaWVudCBzaW5jZSBpdCBydW5zIHRoZSByZWdleCBvbiBldmVyeSBmaWVsZCB2YWx1ZVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAtLS1FbnRpdHlSZWZlcmVuY2UtLS1cclxuICAgICAgICAgICAgICAgICAgICBFbnRpdHkgcmVmZXJlbmNlIHdlIGNhbiBpbmZlciBmcm9tIHRoZSBwcmVzZW5jZSBvZiB0aGUgTWljcm9zb2Z0LkR5bmFtaWNzLkNSTS5sb29rdXBsb2dpY2FsbmFtZVxyXG4gICAgICAgICAgICAgICAgICAgIGFuZCBNaWNyb3NvZnQuRHluYW1pY3MuQ1JNLmFzc29jaWF0ZWRuYXZpZ2F0aW9ucHJvcGVydHlcclxuICAgICAgICAgICAgICAgICAgICBfcGFyZW50Y3VzdG9tZXJpZF92YWx1ZUBNaWNyb3NvZnQuRHluYW1pY3MuQ1JNLmFzc29jaWF0ZWRuYXZpZ2F0aW9ucHJvcGVydHk9cGFyZW50Y3VzdG9tZXJpZF9hY2NvdW50XHJcbiAgICAgICAgICAgICAgICAgICAgX3BhcmVudGN1c3RvbWVyaWRfdmFsdWVATWljcm9zb2Z0LkR5bmFtaWNzLkNSTS5sb29rdXBsb2dpY2FsbmFtZT1hY2NvdW50XHJcbiAgICAgICAgICAgICAgICAgICAgX3BhcmVudGN1c3RvbWVyaWRfdmFsdWVAT0RhdGEuQ29tbXVuaXR5LkRpc3BsYXkuVjEuRm9ybWF0dGVkVmFsdWU9eHl6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBfcHJpbWFyeWNvbnRhY3RpZF92YWx1ZUBNaWNyb3NvZnQuRHluYW1pY3MuQ1JNLmFzc29jaWF0ZWRuYXZpZ2F0aW9ucHJvcGVydHk9cHJpbWFyeWNvbnRhY3RpZFxyXG4gICAgICAgICAgICAgICAgICAgIF9wcmltYXJ5Y29udGFjdGlkX3ZhbHVlQE1pY3Jvc29mdC5EeW5hbWljcy5DUk0ubG9va3VwbG9naWNhbG5hbWU9Y29udGFjdFxyXG4gICAgICAgICAgICAgICAgICAgIF9wcmltYXJ5Y29udGFjdGlkX3ZhbHVlQE9EYXRhLkNvbW11bml0eS5EaXNwbGF5LlYxLkZvcm1hdHRlZFZhbHVlPXh5elxyXG4gICAgICAgICAgICAgICAgICAgICovXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5hdmlnYXRpb25Qcm9wZXJ0eSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVMb2dpY2FsTmFtZSA9IGF0dHJpYnV0ZU5hbWVXaXRob3V0QXQ7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5hdmlnYXRpb25Qcm9wZXJ0eU5hbWUgPSBhdHRyaWJ1dGVOYW1lV2l0aG91dEF0ICsgXCJATWljcm9zb2Z0LkR5bmFtaWNzLkNSTS5hc3NvY2lhdGVkbmF2aWdhdGlvbnByb3BlcnR5XCI7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbG9va3VwTG9naWNhbE5hbWUgPSBhdHRyaWJ1dGVOYW1lV2l0aG91dEF0ICsgXCJATWljcm9zb2Z0LkR5bmFtaWNzLkNSTS5sb29rdXBsb2dpY2FsbmFtZVwiO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZvcm1hdHRlZFZhbHVlTmFtZSA9IGF0dHJpYnV0ZUxvZ2ljYWxOYW1lICsgXCJAT0RhdGEuQ29tbXVuaXR5LkRpc3BsYXkuVjEuRm9ybWF0dGVkVmFsdWVcIjtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoYXR0cmlidXRlTG9naWNhbE5hbWUuZW5kc1dpdGgoXCJfYWN0aXZpdHlfcGFydGllc1wiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVUeXBlID0gQXR0cmlidXRlVHlwZXNfMS5BdHRyaWJ1dGVUeXBlcy5FbnRpdHlDb2xsZWN0aW9uO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChuYXZpZ2F0aW9uUHJvcGVydHkgJiYgZW50aXR5UmVjb3JkW2xvb2t1cExvZ2ljYWxOYW1lXSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZVR5cGUgPSBBdHRyaWJ1dGVUeXBlc18xLkF0dHJpYnV0ZVR5cGVzLkVudGl0eVJlZmVyZW5jZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBtZXRhZGF0YVR5cGUgPSBlbnRpdHlNZXRhZGF0YS5hdHRyaWJ1dGVUeXBlc1tmaWVsZF07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIEZvciBEYXRlVGltZXMsIHRyaW0gb2ZmIHRoZSBzZWNvbmQgcGFydFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXRhZGF0YVR5cGUgPSBtZXRhZGF0YVR5cGUgIT0gbnVsbCA/IG1ldGFkYXRhVHlwZS5zcGxpdChcIjpcIilbMF0gOiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBUT0RPOiBNYXRjaCBzdHJpbmdzIHRvIHRoZSBvcHRpb25zZXQgbmFtZXM/XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAobWV0YWRhdGFUeXBlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiT3B0aW9uc2V0XCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlVHlwZSA9IEF0dHJpYnV0ZVR5cGVzXzEuQXR0cmlidXRlVHlwZXMuT3B0aW9uU2V0VmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiTXVsdGlTZWxlY3RcIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVUeXBlID0gQXR0cmlidXRlVHlwZXNfMS5BdHRyaWJ1dGVUeXBlcy5NdWx0aVNlbGVjdE9wdGlvblNldFZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcIk1vbmV5XCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlVHlwZSA9IEF0dHJpYnV0ZVR5cGVzXzEuQXR0cmlidXRlVHlwZXMuTW9uZXk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiRGF0ZU9ubHlcIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJEYXRlQW5kVGltZVwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZVR5cGUgPSBBdHRyaWJ1dGVUeXBlc18xLkF0dHJpYnV0ZVR5cGVzLkRhdGVUaW1lO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLyotLS1BbGlhc2VkIFZhbHVlLS0tXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaGVyZSBkb2Vzbid0IHNlZW0gdG8gYmUgYW55IHdheSBvZiBkZXRlcm1pbmluZyBvZiBhIHJldHVybmVkIGZpZWxkIHZhbHVlIGlzIGFuIGFsaWFzZWQgdmFsdWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoaXMgbWVhbnMgdGhhdCB0aGVyZSBpcyBubyB3YXkgb2YgZGV0ZXJtaW5pbmcgdGhlIHR5cGUgZnJvbSBxdWVyeWluZyBtZXRhZGF0YS5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gQWRkIHRoZSBmb3JtYXR0ZWQgdmFsdWUgaWYgdGhlcmUgaXMgb25lXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVudGl0eVJlY29yZFtmb3JtYXR0ZWRWYWx1ZU5hbWVdICE9IG51bGwpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVudGl0eVJlY29yZC5mb3JtYXR0ZWRWYWx1ZXNbYXR0cmlidXRlTG9naWNhbE5hbWVdID0gZW50aXR5UmVjb3JkW2Zvcm1hdHRlZFZhbHVlTmFtZV07XHJcbiAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChhdHRyaWJ1dGVUeXBlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgQXR0cmlidXRlVHlwZXNfMS5BdHRyaWJ1dGVUeXBlcy5FbnRpdHlSZWZlcmVuY2U6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBlbnRpdHlUeXBlID0gZW50aXR5UmVjb3JkW2xvb2t1cExvZ2ljYWxOYW1lXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZVZhbHVlID0gbmV3IEVudGl0eVJlZmVyZW5jZV8xLkVudGl0eVJlZmVyZW5jZShlbnRpdHlUeXBlLCBlbnRpdHlSZWNvcmRbYXR0cmlidXRlTG9naWNhbE5hbWVdLCBlbnRpdHlSZWNvcmRbZm9ybWF0dGVkVmFsdWVOYW1lXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBHZXQgdGhlIGF0dHJpYnV0ZSBsb2dpY2FsIG5hbWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGxvb2t1cEF0dHJpYnV0ZU5hbWUgPSBlbnRpdHlSZWNvcmRbbmF2aWdhdGlvblByb3BlcnR5TmFtZV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXR0cmlidXRlTG9naWNhbE5hbWUuZW5kc1dpdGgoXCJfdmFsdWVcIikgJiYgYXR0cmlidXRlTG9naWNhbE5hbWUuc3RhcnRzV2l0aChcIl9cIikpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVMb2dpY2FsTmFtZSA9IGF0dHJpYnV0ZUxvZ2ljYWxOYW1lLnN1YnN0cigxLCBhdHRyaWJ1dGVMb2dpY2FsTmFtZS5sZW5ndGggLSBcIl92YWx1ZVwiLmxlbmd0aCAtIDEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAobG9va3VwQXR0cmlidXRlTmFtZSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gR2V0IHRoZSBhY3R1YWwgbG9naWNhbCBuYW1lIG9mIHRoZSBhdHRyaWJ1dGVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobG9va3VwQXR0cmlidXRlTmFtZS5lbmRzV2l0aChcIl9cIiArIGVudGl0eVR5cGUpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHR5cGVQb3MgPSBsb29rdXBBdHRyaWJ1dGVOYW1lLmxhc3RJbmRleE9mKFwiX1wiICsgZW50aXR5VHlwZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZUxvZ2ljYWxOYW1lID0gbG9va3VwQXR0cmlidXRlTmFtZS5zdWJzdHIoMCwgdHlwZVBvcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVMb2dpY2FsTmFtZSA9IGxvb2t1cEF0dHJpYnV0ZU5hbWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgQXR0cmlidXRlVHlwZXNfMS5BdHRyaWJ1dGVUeXBlcy5Nb25leTpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZVZhbHVlID0gZW50aXR5UmVjb3JkW2F0dHJpYnV0ZUxvZ2ljYWxOYW1lXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIEF0dHJpYnV0ZVR5cGVzXzEuQXR0cmlidXRlVHlwZXMuTXVsdGlTZWxlY3RPcHRpb25TZXRWYWx1ZTpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZVZhbHVlID0gZW50aXR5UmVjb3JkW2F0dHJpYnV0ZUxvZ2ljYWxOYW1lXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhdHRyaWJ1dGVWYWx1ZSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdmFsdWVTdHJpbmdzID0gYXR0cmlidXRlVmFsdWUuc3BsaXQoXCIsXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlSW50cyA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgdiBvZiB2YWx1ZVN0cmluZ3MucmV2ZXJzZSgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlSW50cy5wdXNoKE51bWJlci5wYXJzZUludCh2KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZVZhbHVlID0gdmFsdWVJbnRzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVudGl0eVJlY29yZFtmb3JtYXR0ZWRWYWx1ZU5hbWVdICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbnRpdHlSZWNvcmQuZm9ybWF0dGVkVmFsdWVzW2F0dHJpYnV0ZUxvZ2ljYWxOYW1lXSA9IGVudGl0eVJlY29yZFtmb3JtYXR0ZWRWYWx1ZU5hbWVdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgQXR0cmlidXRlVHlwZXNfMS5BdHRyaWJ1dGVUeXBlcy5PcHRpb25TZXRWYWx1ZTpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZVZhbHVlID0gZW50aXR5UmVjb3JkW2F0dHJpYnV0ZUxvZ2ljYWxOYW1lXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIEF0dHJpYnV0ZVR5cGVzXzEuQXR0cmlidXRlVHlwZXMuRW50aXR5Q29sbGVjdGlvbjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIERvIHdlIGhhdmUgdGhlIGxvZ2ljYWwgbmFtZSBvZiB0aGUgcmVsYXRpb25zaGlwP1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5hdmlnYXRpb25Mb2dpY2FsTmFtZSA9IFwiXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmllbGQuZW5kc1dpdGgoXCJfYWN0aXZpdHlfcGFydGllc1wiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hdmlnYXRpb25Mb2dpY2FsTmFtZSA9IFwiYWN0aXZpdHlwYXJ0eVwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2aXR5UGFydGllc0ZpZWxkID0gZmllbGQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChlbnRpdHlNZXRhZGF0YS5uYXZpZ2F0aW9uW2ZpZWxkXSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF2aWdhdGlvbkxvZ2ljYWxOYW1lID0gZW50aXR5TWV0YWRhdGEubmF2aWdhdGlvbltmaWVsZF1bMF07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVzZS1iZWZvcmUtZGVmaW5lXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVWYWx1ZSA9IHlpZWxkIHNka2lmeShlbnRpdHlSZWNvcmRbYXR0cmlidXRlTG9naWNhbE5hbWVdLCBuYXZpZ2F0aW9uTG9naWNhbE5hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgQXR0cmlidXRlVHlwZXNfMS5BdHRyaWJ1dGVUeXBlcy5EYXRlVGltZTpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZVZhbHVlID0gbmV3IERhdGUoRGF0ZS5wYXJzZShlbnRpdHlSZWNvcmRbYXR0cmlidXRlTG9naWNhbE5hbWVdKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIERlZmF1bHQgLSBzZXQgcHJpbWl0aXZlIHR5cGUgdmFsdWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZVZhbHVlID0gZW50aXR5UmVjb3JkW2F0dHJpYnV0ZUxvZ2ljYWxOYW1lXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbnRpdHlSZWNvcmRbYXR0cmlidXRlTG9naWNhbE5hbWVdID0gYXR0cmlidXRlVmFsdWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmVtb3ZlTm9uU2RrRmllbGRzKGVudGl0eVJlY29yZCk7XHJcbiAgICAgICAgICAgIC8vIElmIHRoaXMgaXMgYW4gYWN0aXZpdHkgcGFydHkgdGhlbiBwb3B1bGF0ZSB0aGUgY29ycmVjdCAndmlydHVhbCBmaWVsZCdcclxuICAgICAgICAgICAgaWYgKGFjdGl2aXR5UGFydGllc0ZpZWxkKSB7XHJcbiAgICAgICAgICAgICAgICBleHBhbmRBY3Rpdml0eVBhcnRpZXNUb0ZpZWxkcyhlbnRpdHlSZWNvcmQsIGFjdGl2aXR5UGFydGllc0ZpZWxkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbnRpdHlSZWNvcmQubG9naWNhbE5hbWUgPSBsb2dpY2FsTmFtZTtcclxuICAgICAgICByZXR1cm4gZW50aXR5UmVjb3JkO1xyXG4gICAgfSk7XHJcbn1cclxuZnVuY3Rpb24gc2RraWZ5KFxyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxyXG52YWx1ZSwgbG9naWNhbE5hbWUpIHtcclxuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgaWYgKHZhbHVlLmpzb24pIHtcclxuICAgICAgICAgICAgLy8gVGhpcyBpcyBhIFVDSSByZXNwb25zZSBvYmplY3QgYW5kIHdlIG5lZWQgdG8gYXdhaXQgdGhlIGpzb24gY29udmVyc3Rpb25cclxuICAgICAgICAgICAgdmFsdWUgPSB5aWVsZCB2YWx1ZS5qc29uKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh2YWx1ZS5yZXNwb25zZVRleHQpIHtcclxuICAgICAgICAgICAgLy8gVGhpcyBpcyBhIHJhdyBleGVjdXRlIHJlc3BvbnNlXHJcbiAgICAgICAgICAgIHZhbHVlID0gSlNPTi5wYXJzZSh2YWx1ZS5yZXNwb25zZVRleHQsIGRhdGVSZXZpdmVyXzEuZGF0ZVJldml2ZXIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodmFsdWUuZW50aXRpZXMgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICByZXR1cm4gc2RraWZ5RW50aXR5Q29sbGVjdGlvbih2YWx1ZSwgbG9naWNhbE5hbWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh2YWx1ZS5jb25zdHJ1Y3Rvci5uYW1lID09PSBcIkFycmF5XCIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHNka2lmeUFycmF5KHZhbHVlLCBsb2dpY2FsTmFtZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gc2RraWZ5RW50aXR5KHZhbHVlLCBsb2dpY2FsTmFtZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn1cclxuZXhwb3J0cy5zZGtpZnkgPSBzZGtpZnk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNka2lmeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/dataverse-ify/sdkify/sdkify.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n// Default exports for dataverse-ify\r\n// Excludes the xrm.webapi implementation - this must be imported explicitly\r\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/dataverse-ify/lib/types/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./metadata */ \"./node_modules/dataverse-ify/lib/metadata/index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./dataverse-ify */ \"./node_modules/dataverse-ify/lib/dataverse-ify/index.js\"), exports);\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsbUNBQW1DLG9DQUFvQyxnQkFBZ0I7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsZ0VBQVM7QUFDOUIsYUFBYSxtQkFBTyxDQUFDLHNFQUFZO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQyxnRkFBaUI7QUFDdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi9pbmRleC5qcz82YThjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XHJcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xyXG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xyXG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcclxuICAgIG9bazJdID0gbVtrXTtcclxufSkpO1xyXG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcclxuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XHJcbn07XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuLy8gRGVmYXVsdCBleHBvcnRzIGZvciBkYXRhdmVyc2UtaWZ5XHJcbi8vIEV4Y2x1ZGVzIHRoZSB4cm0ud2ViYXBpIGltcGxlbWVudGF0aW9uIC0gdGhpcyBtdXN0IGJlIGltcG9ydGVkIGV4cGxpY2l0bHlcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL21ldGFkYXRhXCIpLCBleHBvcnRzKTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2RhdGF2ZXJzZS1pZnlcIiksIGV4cG9ydHMpO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/index.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/metadata/MetadataCache.js":
/*!******************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/metadata/MetadataCache.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.caseInsensitiveSearch = exports.getMetadata = exports.getEntitySetName = exports.getMetadataFromEntitySet = exports.getMetadataByLogicalName = exports.getMetadataCache = exports.setMetadataCache = exports._metadataCache = void 0;\r\nconst NullOrUndefined_1 = __webpack_require__(/*! ../webapi/utils/NullOrUndefined */ \"./node_modules/dataverse-ify/lib/webapi/utils/NullOrUndefined.js\");\r\nexports._metadataCache = { entities: {}, entitySetNames: {}, actions: {} };\r\nfunction setMetadataCache(metadataCache) {\r\n    exports._metadataCache = Object.assign(Object.assign({}, exports._metadataCache), metadataCache);\r\n    // Add any EntitySetNames\r\n    exports._metadataCache.entitySetNames = exports._metadataCache.entitySetNames || {};\r\n    for (const logicalName in metadataCache.entities) {\r\n        exports._metadataCache.entitySetNames[logicalName] = metadataCache.entities[logicalName].collectionName;\r\n    }\r\n}\r\nexports.setMetadataCache = setMetadataCache;\r\nfunction getMetadataCache() {\r\n    if (NullOrUndefined_1.isNullOrUndefined(exports._metadataCache)) {\r\n        throw new Error(\"Metadata cache is not initialised. Ensure that setMetadata is called\");\r\n    }\r\n    return exports._metadataCache;\r\n}\r\nexports.getMetadataCache = getMetadataCache;\r\nfunction getMetadataByLogicalName(logicalName) {\r\n    const metadataCache = getMetadataCache();\r\n    const metadata = metadataCache.entities && metadataCache.entities[logicalName];\r\n    if (!metadata)\r\n        throw new Error(`Metadata not found for ${logicalName}. Please create the early bound types.`);\r\n    return metadata;\r\n}\r\nexports.getMetadataByLogicalName = getMetadataByLogicalName;\r\nconst entitySetNames = {};\r\nfunction getMetadataFromEntitySet(entitySetName) {\r\n    const metadataCache = getMetadataCache();\r\n    if (metadataCache.entities) {\r\n        // Check the metadata\r\n        for (const logicalName of Object.keys(metadataCache.entities)) {\r\n            // Check logical name\r\n            const metadata = metadataCache.entities[logicalName];\r\n            if (metadata.collectionName === entitySetName)\r\n                return metadata;\r\n        }\r\n    }\r\n    throw new Error(`Cannot find entity metadata for ${entitySetName}. Please generate early bound types`);\r\n}\r\nexports.getMetadataFromEntitySet = getMetadataFromEntitySet;\r\nfunction getEntitySetName(entityLogicalName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const metadataCache = getMetadataCache();\r\n        if (metadataCache.entitySetNames) {\r\n            // Check the generated metadata\r\n            const metadata = metadataCache.entitySetNames[entityLogicalName];\r\n            if (metadata !== undefined) {\r\n                return metadata;\r\n            }\r\n        }\r\n        // Check the cache\r\n        if (entitySetNames[entityLogicalName] !== undefined) {\r\n            return entitySetNames[entityLogicalName];\r\n        }\r\n        // Lookup the entity set name from the logical name\r\n        // We only lookup the entityset names automatically at the moment\r\n        try {\r\n            const entityMetadata = yield Xrm.Utility.getEntityMetadata(entityLogicalName, [\"EntitySetName\"]);\r\n            entitySetNames[entityLogicalName] = entityMetadata.EntitySetName;\r\n            return entityMetadata.EntitySetName;\r\n        }\r\n        catch (ex) {\r\n            throw new Error(`Just-In-Time retreival of EntitySetName for '${entityLogicalName}' failed: ${ex}\\nIdeally you should use setMetadataCache`);\r\n        }\r\n        //throw new Error(`Cannot find entity metadata for ${entityLogicalName}. Please generate early bound types`);\r\n    });\r\n}\r\nexports.getEntitySetName = getEntitySetName;\r\nfunction getMetadata(entity) {\r\n    const logicalName = entity.logicalName;\r\n    return getMetadataByLogicalName(logicalName);\r\n}\r\nexports.getMetadata = getMetadata;\r\nfunction caseInsensitiveSearch(key, values) {\r\n    key = key.toLowerCase();\r\n    for (const index in values) {\r\n        if (index.toLowerCase() === key) {\r\n            return {\r\n                key: index,\r\n                value: values[index],\r\n            };\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nexports.caseInsensitiveSearch = caseInsensitiveSearch;\r\n//# sourceMappingURL=MetadataCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/metadata/MetadataCache.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/metadata/getEntityMetadataFromRecord.js":
/*!********************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/metadata/getEntityMetadataFromRecord.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getEntityMetadataFromRecord = void 0;\r\nconst MetadataCache_1 = __webpack_require__(/*! ./MetadataCache */ \"./node_modules/dataverse-ify/lib/metadata/MetadataCache.js\");\r\nconst NullOrUndefined_1 = __webpack_require__(/*! ../webapi/utils/NullOrUndefined */ \"./node_modules/dataverse-ify/lib/webapi/utils/NullOrUndefined.js\");\r\nfunction getEntityMetadataFromRecord(entityRecord, logicalName) {\r\n    let entityMetadata;\r\n    const actionPrefix = \"Microsoft.Dynamics.CRM.\";\r\n    entityRecord.logicalName = entityRecord.logicalName || logicalName; // allow passing the logical name rather than using the @odata.context\r\n    if (NullOrUndefined_1.isNullOrUndefined(entityRecord.logicalName)) {\r\n        // Get the @data.context to get the logical name\r\n        // E.g. https://org.crm11.dynamics.com/api/data/v9.0/$metadata#accounts(name,parentaccountid)/$entity\r\n        const odatacontext = entityRecord[\"@odata.context\"];\r\n        const contextRegex = /\\$metadata#([\\w.]*)(\\([\\w()]*\\))?(\\/\\$entity)?/g;\r\n        const match = contextRegex.exec(odatacontext);\r\n        if (match != null && match.length > 1) {\r\n            const entitySetName = match[1];\r\n            if (entitySetName.startsWith(actionPrefix)) {\r\n                const actionName = entitySetName.substring(actionPrefix.length);\r\n                entityMetadata = MetadataCache_1.getMetadataByLogicalName(actionName);\r\n                if (entityMetadata != null) {\r\n                    entityRecord.logicalName = entityMetadata.logicalName;\r\n                }\r\n            }\r\n            else {\r\n                // Find the logical name from the entity set name\r\n                entityMetadata = MetadataCache_1.getMetadataFromEntitySet(entitySetName);\r\n                entityRecord.logicalName = entityMetadata.logicalName;\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"Cannot find the odata.context to get the logical name\");\r\n        }\r\n    }\r\n    else {\r\n        // Get metadata\r\n        entityMetadata = MetadataCache_1.getMetadataByLogicalName(entityRecord.logicalName);\r\n    }\r\n    return entityMetadata;\r\n}\r\nexports.getEntityMetadataFromRecord = getEntityMetadataFromRecord;\r\n//# sourceMappingURL=getEntityMetadataFromRecord.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvbWV0YWRhdGEvZ2V0RW50aXR5TWV0YWRhdGFGcm9tUmVjb3JkLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1DQUFtQztBQUNuQyx3QkFBd0IsbUJBQU8sQ0FBQyxtRkFBaUI7QUFDakQsMEJBQTBCLG1CQUFPLENBQUMseUdBQWlDO0FBQ25FO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL0Jpcy5Db21tb24uQ1JNLy4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL21ldGFkYXRhL2dldEVudGl0eU1ldGFkYXRhRnJvbVJlY29yZC5qcz8yZTM1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuZ2V0RW50aXR5TWV0YWRhdGFGcm9tUmVjb3JkID0gdm9pZCAwO1xyXG5jb25zdCBNZXRhZGF0YUNhY2hlXzEgPSByZXF1aXJlKFwiLi9NZXRhZGF0YUNhY2hlXCIpO1xyXG5jb25zdCBOdWxsT3JVbmRlZmluZWRfMSA9IHJlcXVpcmUoXCIuLi93ZWJhcGkvdXRpbHMvTnVsbE9yVW5kZWZpbmVkXCIpO1xyXG5mdW5jdGlvbiBnZXRFbnRpdHlNZXRhZGF0YUZyb21SZWNvcmQoZW50aXR5UmVjb3JkLCBsb2dpY2FsTmFtZSkge1xyXG4gICAgbGV0IGVudGl0eU1ldGFkYXRhO1xyXG4gICAgY29uc3QgYWN0aW9uUHJlZml4ID0gXCJNaWNyb3NvZnQuRHluYW1pY3MuQ1JNLlwiO1xyXG4gICAgZW50aXR5UmVjb3JkLmxvZ2ljYWxOYW1lID0gZW50aXR5UmVjb3JkLmxvZ2ljYWxOYW1lIHx8IGxvZ2ljYWxOYW1lOyAvLyBhbGxvdyBwYXNzaW5nIHRoZSBsb2dpY2FsIG5hbWUgcmF0aGVyIHRoYW4gdXNpbmcgdGhlIEBvZGF0YS5jb250ZXh0XHJcbiAgICBpZiAoTnVsbE9yVW5kZWZpbmVkXzEuaXNOdWxsT3JVbmRlZmluZWQoZW50aXR5UmVjb3JkLmxvZ2ljYWxOYW1lKSkge1xyXG4gICAgICAgIC8vIEdldCB0aGUgQGRhdGEuY29udGV4dCB0byBnZXQgdGhlIGxvZ2ljYWwgbmFtZVxyXG4gICAgICAgIC8vIEUuZy4gaHR0cHM6Ly9vcmcuY3JtMTEuZHluYW1pY3MuY29tL2FwaS9kYXRhL3Y5LjAvJG1ldGFkYXRhI2FjY291bnRzKG5hbWUscGFyZW50YWNjb3VudGlkKS8kZW50aXR5XHJcbiAgICAgICAgY29uc3Qgb2RhdGFjb250ZXh0ID0gZW50aXR5UmVjb3JkW1wiQG9kYXRhLmNvbnRleHRcIl07XHJcbiAgICAgICAgY29uc3QgY29udGV4dFJlZ2V4ID0gL1xcJG1ldGFkYXRhIyhbXFx3Ll0qKShcXChbXFx3KCldKlxcKSk/KFxcL1xcJGVudGl0eSk/L2c7XHJcbiAgICAgICAgY29uc3QgbWF0Y2ggPSBjb250ZXh0UmVnZXguZXhlYyhvZGF0YWNvbnRleHQpO1xyXG4gICAgICAgIGlmIChtYXRjaCAhPSBudWxsICYmIG1hdGNoLmxlbmd0aCA+IDEpIHtcclxuICAgICAgICAgICAgY29uc3QgZW50aXR5U2V0TmFtZSA9IG1hdGNoWzFdO1xyXG4gICAgICAgICAgICBpZiAoZW50aXR5U2V0TmFtZS5zdGFydHNXaXRoKGFjdGlvblByZWZpeCkpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGFjdGlvbk5hbWUgPSBlbnRpdHlTZXROYW1lLnN1YnN0cmluZyhhY3Rpb25QcmVmaXgubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgIGVudGl0eU1ldGFkYXRhID0gTWV0YWRhdGFDYWNoZV8xLmdldE1ldGFkYXRhQnlMb2dpY2FsTmFtZShhY3Rpb25OYW1lKTtcclxuICAgICAgICAgICAgICAgIGlmIChlbnRpdHlNZXRhZGF0YSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZW50aXR5UmVjb3JkLmxvZ2ljYWxOYW1lID0gZW50aXR5TWV0YWRhdGEubG9naWNhbE5hbWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAvLyBGaW5kIHRoZSBsb2dpY2FsIG5hbWUgZnJvbSB0aGUgZW50aXR5IHNldCBuYW1lXHJcbiAgICAgICAgICAgICAgICBlbnRpdHlNZXRhZGF0YSA9IE1ldGFkYXRhQ2FjaGVfMS5nZXRNZXRhZGF0YUZyb21FbnRpdHlTZXQoZW50aXR5U2V0TmFtZSk7XHJcbiAgICAgICAgICAgICAgICBlbnRpdHlSZWNvcmQubG9naWNhbE5hbWUgPSBlbnRpdHlNZXRhZGF0YS5sb2dpY2FsTmFtZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgdGhlIG9kYXRhLmNvbnRleHQgdG8gZ2V0IHRoZSBsb2dpY2FsIG5hbWVcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgLy8gR2V0IG1ldGFkYXRhXHJcbiAgICAgICAgZW50aXR5TWV0YWRhdGEgPSBNZXRhZGF0YUNhY2hlXzEuZ2V0TWV0YWRhdGFCeUxvZ2ljYWxOYW1lKGVudGl0eVJlY29yZC5sb2dpY2FsTmFtZSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZW50aXR5TWV0YWRhdGE7XHJcbn1cclxuZXhwb3J0cy5nZXRFbnRpdHlNZXRhZGF0YUZyb21SZWNvcmQgPSBnZXRFbnRpdHlNZXRhZGF0YUZyb21SZWNvcmQ7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEVudGl0eU1ldGFkYXRhRnJvbVJlY29yZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/metadata/getEntityMetadataFromRecord.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/metadata/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/metadata/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./MetadataCache */ \"./node_modules/dataverse-ify/lib/metadata/MetadataCache.js\"), exports);\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvbWV0YWRhdGEvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsbUNBQW1DLG9DQUFvQyxnQkFBZ0I7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQyxtRkFBaUI7QUFDdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi9tZXRhZGF0YS9pbmRleC5qcz85NTIyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XHJcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xyXG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xyXG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcclxuICAgIG9bazJdID0gbVtrXTtcclxufSkpO1xyXG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcclxuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XHJcbn07XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL01ldGFkYXRhQ2FjaGVcIiksIGV4cG9ydHMpO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/metadata/index.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/ActivityParty.js":
/*!***************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/ActivityParty.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.activitypartyMetadata = void 0;\r\nexports.activitypartyMetadata = {\r\n    typeName: \"mscrm.activityparty\",\r\n    logicalName: \"activityparty\",\r\n    collectionName: \"activityparties\",\r\n    primaryIdAttribute: \"activitypartyid\",\r\n    attributeTypes: {\r\n        // Numeric Types\r\n        addressusedemailcolumnnumber: \"Integer\",\r\n        effort: \"Double\",\r\n        versionnumber: \"BigInt\",\r\n        // Optionsets\r\n        instancetypecode: \"Optionset\",\r\n        participationtypemask: \"Optionset\",\r\n        // Date Formats\r\n        scheduledend: \"DateOnly:UserLocal\",\r\n        scheduledstart: \"DateOnly:UserLocal\",\r\n    },\r\n    navigation: {\r\n        activityid: [\"activitypointer\"],\r\n        partyid: [\"account\", \"contact\", \"knowledgearticle\", \"queue\", \"systemuser\"],\r\n    },\r\n};\r\n//# sourceMappingURL=ActivityParty.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvQWN0aXZpdHlQYXJ0eS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkI7QUFDN0IsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Jpcy5Db21tb24uQ1JNLy4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL0FjdGl2aXR5UGFydHkuanM/MDdkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLmFjdGl2aXR5cGFydHlNZXRhZGF0YSA9IHZvaWQgMDtcclxuZXhwb3J0cy5hY3Rpdml0eXBhcnR5TWV0YWRhdGEgPSB7XHJcbiAgICB0eXBlTmFtZTogXCJtc2NybS5hY3Rpdml0eXBhcnR5XCIsXHJcbiAgICBsb2dpY2FsTmFtZTogXCJhY3Rpdml0eXBhcnR5XCIsXHJcbiAgICBjb2xsZWN0aW9uTmFtZTogXCJhY3Rpdml0eXBhcnRpZXNcIixcclxuICAgIHByaW1hcnlJZEF0dHJpYnV0ZTogXCJhY3Rpdml0eXBhcnR5aWRcIixcclxuICAgIGF0dHJpYnV0ZVR5cGVzOiB7XHJcbiAgICAgICAgLy8gTnVtZXJpYyBUeXBlc1xyXG4gICAgICAgIGFkZHJlc3N1c2VkZW1haWxjb2x1bW5udW1iZXI6IFwiSW50ZWdlclwiLFxyXG4gICAgICAgIGVmZm9ydDogXCJEb3VibGVcIixcclxuICAgICAgICB2ZXJzaW9ubnVtYmVyOiBcIkJpZ0ludFwiLFxyXG4gICAgICAgIC8vIE9wdGlvbnNldHNcclxuICAgICAgICBpbnN0YW5jZXR5cGVjb2RlOiBcIk9wdGlvbnNldFwiLFxyXG4gICAgICAgIHBhcnRpY2lwYXRpb250eXBlbWFzazogXCJPcHRpb25zZXRcIixcclxuICAgICAgICAvLyBEYXRlIEZvcm1hdHNcclxuICAgICAgICBzY2hlZHVsZWRlbmQ6IFwiRGF0ZU9ubHk6VXNlckxvY2FsXCIsXHJcbiAgICAgICAgc2NoZWR1bGVkc3RhcnQ6IFwiRGF0ZU9ubHk6VXNlckxvY2FsXCIsXHJcbiAgICB9LFxyXG4gICAgbmF2aWdhdGlvbjoge1xyXG4gICAgICAgIGFjdGl2aXR5aWQ6IFtcImFjdGl2aXR5cG9pbnRlclwiXSxcclxuICAgICAgICBwYXJ0eWlkOiBbXCJhY2NvdW50XCIsIFwiY29udGFjdFwiLCBcImtub3dsZWRnZWFydGljbGVcIiwgXCJxdWV1ZVwiLCBcInN5c3RlbXVzZXJcIl0sXHJcbiAgICB9LFxyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1BY3Rpdml0eVBhcnR5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/ActivityParty.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/AttributeTypes.js":
/*!****************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/AttributeTypes.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AttributeTypes = void 0;\r\nvar AttributeTypes;\r\n(function (AttributeTypes) {\r\n    AttributeTypes[AttributeTypes[\"EntityCollection\"] = 0] = \"EntityCollection\";\r\n    AttributeTypes[AttributeTypes[\"EntityReference\"] = 1] = \"EntityReference\";\r\n    AttributeTypes[AttributeTypes[\"Money\"] = 2] = \"Money\";\r\n    AttributeTypes[AttributeTypes[\"OptionSetValue\"] = 3] = \"OptionSetValue\";\r\n    AttributeTypes[AttributeTypes[\"MultiSelectOptionSetValue\"] = 4] = \"MultiSelectOptionSetValue\";\r\n    AttributeTypes[AttributeTypes[\"Date\"] = 5] = \"Date\";\r\n    AttributeTypes[AttributeTypes[\"DateTime\"] = 6] = \"DateTime\";\r\n    AttributeTypes[AttributeTypes[\"Unknown\"] = 1000] = \"Unknown\";\r\n})(AttributeTypes = exports.AttributeTypes || (exports.AttributeTypes = {}));\r\n//# sourceMappingURL=AttributeTypes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvQXR0cmlidXRlVHlwZXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw4Q0FBOEMsc0JBQXNCLEtBQUs7QUFDMUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi90eXBlcy9BdHRyaWJ1dGVUeXBlcy5qcz9hODMwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuQXR0cmlidXRlVHlwZXMgPSB2b2lkIDA7XHJcbnZhciBBdHRyaWJ1dGVUeXBlcztcclxuKGZ1bmN0aW9uIChBdHRyaWJ1dGVUeXBlcykge1xyXG4gICAgQXR0cmlidXRlVHlwZXNbQXR0cmlidXRlVHlwZXNbXCJFbnRpdHlDb2xsZWN0aW9uXCJdID0gMF0gPSBcIkVudGl0eUNvbGxlY3Rpb25cIjtcclxuICAgIEF0dHJpYnV0ZVR5cGVzW0F0dHJpYnV0ZVR5cGVzW1wiRW50aXR5UmVmZXJlbmNlXCJdID0gMV0gPSBcIkVudGl0eVJlZmVyZW5jZVwiO1xyXG4gICAgQXR0cmlidXRlVHlwZXNbQXR0cmlidXRlVHlwZXNbXCJNb25leVwiXSA9IDJdID0gXCJNb25leVwiO1xyXG4gICAgQXR0cmlidXRlVHlwZXNbQXR0cmlidXRlVHlwZXNbXCJPcHRpb25TZXRWYWx1ZVwiXSA9IDNdID0gXCJPcHRpb25TZXRWYWx1ZVwiO1xyXG4gICAgQXR0cmlidXRlVHlwZXNbQXR0cmlidXRlVHlwZXNbXCJNdWx0aVNlbGVjdE9wdGlvblNldFZhbHVlXCJdID0gNF0gPSBcIk11bHRpU2VsZWN0T3B0aW9uU2V0VmFsdWVcIjtcclxuICAgIEF0dHJpYnV0ZVR5cGVzW0F0dHJpYnV0ZVR5cGVzW1wiRGF0ZVwiXSA9IDVdID0gXCJEYXRlXCI7XHJcbiAgICBBdHRyaWJ1dGVUeXBlc1tBdHRyaWJ1dGVUeXBlc1tcIkRhdGVUaW1lXCJdID0gNl0gPSBcIkRhdGVUaW1lXCI7XHJcbiAgICBBdHRyaWJ1dGVUeXBlc1tBdHRyaWJ1dGVUeXBlc1tcIlVua25vd25cIl0gPSAxMDAwXSA9IFwiVW5rbm93blwiO1xyXG59KShBdHRyaWJ1dGVUeXBlcyA9IGV4cG9ydHMuQXR0cmlidXRlVHlwZXMgfHwgKGV4cG9ydHMuQXR0cmlidXRlVHlwZXMgPSB7fSkpO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdHRyaWJ1dGVUeXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/AttributeTypes.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/Dictionary.js":
/*!************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/Dictionary.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=Dictionary.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvRGljdGlvbmFyeS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL0Jpcy5Db21tb24uQ1JNLy4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL0RpY3Rpb25hcnkuanM/ZGFlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1EaWN0aW9uYXJ5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/Dictionary.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/Entity.js":
/*!********************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/Entity.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Entity = void 0;\r\nconst MetadataCache_1 = __webpack_require__(/*! ../metadata/MetadataCache */ \"./node_modules/dataverse-ify/lib/metadata/MetadataCache.js\");\r\nconst EntityReference_1 = __webpack_require__(/*! ./EntityReference */ \"./node_modules/dataverse-ify/lib/types/EntityReference.js\");\r\nclass Entity {\r\n    static containsFields(instance, keys) {\r\n        let allOk = true;\r\n        for (const key of keys) {\r\n            allOk = allOk && instance.hasOwnProperty(key);\r\n            if (!allOk)\r\n                break;\r\n        }\r\n        return allOk;\r\n    }\r\n    static getCollectionNameForEntity(logicalName) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // Try using the simple collection name lookup\r\n            const collectionName = yield MetadataCache_1.getEntitySetName(logicalName);\r\n            return collectionName;\r\n        });\r\n    }\r\n    static toEntityReference(instance) {\r\n        return new EntityReference_1.EntityReference(instance.logicalName, instance.id);\r\n    }\r\n}\r\nexports.Entity = Entity;\r\n//# sourceMappingURL=Entity.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvRW50aXR5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Qsd0JBQXdCLG1CQUFPLENBQUMsNkZBQTJCO0FBQzNELDBCQUEwQixtQkFBTyxDQUFDLG9GQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCIsInNvdXJjZXMiOlsid2VicGFjazovL0Jpcy5Db21tb24uQ1JNLy4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL0VudGl0eS5qcz84M2RhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcclxuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxyXG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XHJcbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xyXG4gICAgfSk7XHJcbn07XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuZXhwb3J0cy5FbnRpdHkgPSB2b2lkIDA7XHJcbmNvbnN0IE1ldGFkYXRhQ2FjaGVfMSA9IHJlcXVpcmUoXCIuLi9tZXRhZGF0YS9NZXRhZGF0YUNhY2hlXCIpO1xyXG5jb25zdCBFbnRpdHlSZWZlcmVuY2VfMSA9IHJlcXVpcmUoXCIuL0VudGl0eVJlZmVyZW5jZVwiKTtcclxuY2xhc3MgRW50aXR5IHtcclxuICAgIHN0YXRpYyBjb250YWluc0ZpZWxkcyhpbnN0YW5jZSwga2V5cykge1xyXG4gICAgICAgIGxldCBhbGxPayA9IHRydWU7XHJcbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2Yga2V5cykge1xyXG4gICAgICAgICAgICBhbGxPayA9IGFsbE9rICYmIGluc3RhbmNlLmhhc093blByb3BlcnR5KGtleSk7XHJcbiAgICAgICAgICAgIGlmICghYWxsT2spXHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGFsbE9rO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIGdldENvbGxlY3Rpb25OYW1lRm9yRW50aXR5KGxvZ2ljYWxOYW1lKSB7XHJcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgICAgICAgICAgLy8gVHJ5IHVzaW5nIHRoZSBzaW1wbGUgY29sbGVjdGlvbiBuYW1lIGxvb2t1cFxyXG4gICAgICAgICAgICBjb25zdCBjb2xsZWN0aW9uTmFtZSA9IHlpZWxkIE1ldGFkYXRhQ2FjaGVfMS5nZXRFbnRpdHlTZXROYW1lKGxvZ2ljYWxOYW1lKTtcclxuICAgICAgICAgICAgcmV0dXJuIGNvbGxlY3Rpb25OYW1lO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIHRvRW50aXR5UmVmZXJlbmNlKGluc3RhbmNlKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBFbnRpdHlSZWZlcmVuY2VfMS5FbnRpdHlSZWZlcmVuY2UoaW5zdGFuY2UubG9naWNhbE5hbWUsIGluc3RhbmNlLmlkKTtcclxuICAgIH1cclxufVxyXG5leHBvcnRzLkVudGl0eSA9IEVudGl0eTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RW50aXR5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/Entity.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/EntityCollection.js":
/*!******************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/EntityCollection.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EntityCollection = void 0;\r\nclass EntityCollection {\r\n    constructor(entities) {\r\n        this.entities = [];\r\n        this.entities = entities;\r\n    }\r\n}\r\nexports.EntityCollection = EntityCollection;\r\n//# sourceMappingURL=EntityCollection.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvRW50aXR5Q29sbGVjdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQmlzLkNvbW1vbi5DUk0vLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvRW50aXR5Q29sbGVjdGlvbi5qcz84NmNiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuRW50aXR5Q29sbGVjdGlvbiA9IHZvaWQgMDtcclxuY2xhc3MgRW50aXR5Q29sbGVjdGlvbiB7XHJcbiAgICBjb25zdHJ1Y3RvcihlbnRpdGllcykge1xyXG4gICAgICAgIHRoaXMuZW50aXRpZXMgPSBbXTtcclxuICAgICAgICB0aGlzLmVudGl0aWVzID0gZW50aXRpZXM7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0cy5FbnRpdHlDb2xsZWN0aW9uID0gRW50aXR5Q29sbGVjdGlvbjtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RW50aXR5Q29sbGVjdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/EntityCollection.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/EntityReference.js":
/*!*****************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/EntityReference.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.fromEntityReference = exports.toEntityReference = exports.EntityReference = void 0;\r\nconst MetadataCache_1 = __webpack_require__(/*! ../metadata/MetadataCache */ \"./node_modules/dataverse-ify/lib/metadata/MetadataCache.js\");\r\nclass EntityReference {\r\n    constructor(logicalName, id, name) {\r\n        this.entityType = logicalName;\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n}\r\nexports.EntityReference = EntityReference;\r\nfunction toEntityReference(record) {\r\n    let id = record.id;\r\n    // Set the id field if not already\r\n    if (id === undefined || id === null) {\r\n        const metadata = MetadataCache_1.getMetadata(record);\r\n        id = record[metadata.primaryIdAttribute];\r\n    }\r\n    return {\r\n        id: id,\r\n        entityType: record.logicalName,\r\n    };\r\n}\r\nexports.toEntityReference = toEntityReference;\r\nfunction fromEntityReference(record, entityReference) {\r\n    if (record.logicalName !== entityReference.entityType)\r\n        throw new Error(`Cannot map ${entityReference.entityType} into ${record.logicalName}`);\r\n    record.id = entityReference.id;\r\n}\r\nexports.fromEntityReference = fromEntityReference;\r\n//# sourceMappingURL=EntityReference.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvRW50aXR5UmVmZXJlbmNlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQixHQUFHLHlCQUF5QixHQUFHLHVCQUF1QjtBQUNqRix3QkFBd0IsbUJBQU8sQ0FBQyw2RkFBMkI7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxzQ0FBc0MsNEJBQTRCLE9BQU8sbUJBQW1CO0FBQzVGO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi90eXBlcy9FbnRpdHlSZWZlcmVuY2UuanM/MTg5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLmZyb21FbnRpdHlSZWZlcmVuY2UgPSBleHBvcnRzLnRvRW50aXR5UmVmZXJlbmNlID0gZXhwb3J0cy5FbnRpdHlSZWZlcmVuY2UgPSB2b2lkIDA7XHJcbmNvbnN0IE1ldGFkYXRhQ2FjaGVfMSA9IHJlcXVpcmUoXCIuLi9tZXRhZGF0YS9NZXRhZGF0YUNhY2hlXCIpO1xyXG5jbGFzcyBFbnRpdHlSZWZlcmVuY2Uge1xyXG4gICAgY29uc3RydWN0b3IobG9naWNhbE5hbWUsIGlkLCBuYW1lKSB7XHJcbiAgICAgICAgdGhpcy5lbnRpdHlUeXBlID0gbG9naWNhbE5hbWU7XHJcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0cy5FbnRpdHlSZWZlcmVuY2UgPSBFbnRpdHlSZWZlcmVuY2U7XHJcbmZ1bmN0aW9uIHRvRW50aXR5UmVmZXJlbmNlKHJlY29yZCkge1xyXG4gICAgbGV0IGlkID0gcmVjb3JkLmlkO1xyXG4gICAgLy8gU2V0IHRoZSBpZCBmaWVsZCBpZiBub3QgYWxyZWFkeVxyXG4gICAgaWYgKGlkID09PSB1bmRlZmluZWQgfHwgaWQgPT09IG51bGwpIHtcclxuICAgICAgICBjb25zdCBtZXRhZGF0YSA9IE1ldGFkYXRhQ2FjaGVfMS5nZXRNZXRhZGF0YShyZWNvcmQpO1xyXG4gICAgICAgIGlkID0gcmVjb3JkW21ldGFkYXRhLnByaW1hcnlJZEF0dHJpYnV0ZV07XHJcbiAgICB9XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGlkOiBpZCxcclxuICAgICAgICBlbnRpdHlUeXBlOiByZWNvcmQubG9naWNhbE5hbWUsXHJcbiAgICB9O1xyXG59XHJcbmV4cG9ydHMudG9FbnRpdHlSZWZlcmVuY2UgPSB0b0VudGl0eVJlZmVyZW5jZTtcclxuZnVuY3Rpb24gZnJvbUVudGl0eVJlZmVyZW5jZShyZWNvcmQsIGVudGl0eVJlZmVyZW5jZSkge1xyXG4gICAgaWYgKHJlY29yZC5sb2dpY2FsTmFtZSAhPT0gZW50aXR5UmVmZXJlbmNlLmVudGl0eVR5cGUpXHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgbWFwICR7ZW50aXR5UmVmZXJlbmNlLmVudGl0eVR5cGV9IGludG8gJHtyZWNvcmQubG9naWNhbE5hbWV9YCk7XHJcbiAgICByZWNvcmQuaWQgPSBlbnRpdHlSZWZlcmVuY2UuaWQ7XHJcbn1cclxuZXhwb3J0cy5mcm9tRW50aXR5UmVmZXJlbmNlID0gZnJvbUVudGl0eVJlZmVyZW5jZTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RW50aXR5UmVmZXJlbmNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/EntityReference.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/Guid.js":
/*!******************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/Guid.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.guidEqual = exports.trimGuid = void 0;\r\nfunction trimGuid(guid) {\r\n    return guid.replace(\"{\", \"\").replace(\"}\", \"\");\r\n}\r\nexports.trimGuid = trimGuid;\r\nfunction guidEqual(guid1, guid2) {\r\n    if (guid1 && guid2) {\r\n        return trimGuid(guid1).toLowerCase() === trimGuid(guid2).toLowerCase();\r\n    }\r\n    else if (!guid1 && !guid2) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexports.guidEqual = guidEqual;\r\n//# sourceMappingURL=Guid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvR3VpZC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxnQkFBZ0I7QUFDcEM7QUFDQSwwQkFBMEIsaUJBQWlCO0FBQzNDO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQiIsInNvdXJjZXMiOlsid2VicGFjazovL0Jpcy5Db21tb24uQ1JNLy4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL0d1aWQuanM/MjRhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLmd1aWRFcXVhbCA9IGV4cG9ydHMudHJpbUd1aWQgPSB2b2lkIDA7XHJcbmZ1bmN0aW9uIHRyaW1HdWlkKGd1aWQpIHtcclxuICAgIHJldHVybiBndWlkLnJlcGxhY2UoXCJ7XCIsIFwiXCIpLnJlcGxhY2UoXCJ9XCIsIFwiXCIpO1xyXG59XHJcbmV4cG9ydHMudHJpbUd1aWQgPSB0cmltR3VpZDtcclxuZnVuY3Rpb24gZ3VpZEVxdWFsKGd1aWQxLCBndWlkMikge1xyXG4gICAgaWYgKGd1aWQxICYmIGd1aWQyKSB7XHJcbiAgICAgICAgcmV0dXJuIHRyaW1HdWlkKGd1aWQxKS50b0xvd2VyQ2FzZSgpID09PSB0cmltR3VpZChndWlkMikudG9Mb3dlckNhc2UoKTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKCFndWlkMSAmJiAhZ3VpZDIpIHtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIHJldHVybiBmYWxzZTtcclxufVxyXG5leHBvcnRzLmd1aWRFcXVhbCA9IGd1aWRFcXVhbDtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9R3VpZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/Guid.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/IEntity.js":
/*!*********************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/IEntity.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=IEntity.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvSUVudGl0eS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL0Jpcy5Db21tb24uQ1JNLy4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL0lFbnRpdHkuanM/YTU4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1JRW50aXR5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/IEntity.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/IEntityCollection.js":
/*!*******************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/IEntityCollection.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=IEntityCollection.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvSUVudGl0eUNvbGxlY3Rpb24uanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi90eXBlcy9JRW50aXR5Q29sbGVjdGlvbi5qcz8wMjI4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlFbnRpdHlDb2xsZWN0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/IEntityCollection.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/IEntityReference.js":
/*!******************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/IEntityReference.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getNavigationPathForEntityReference = exports.odatifyEntityReference = void 0;\r\nconst Guid_1 = __webpack_require__(/*! ./Guid */ \"./node_modules/dataverse-ify/lib/types/Guid.js\");\r\nconst Entity_1 = __webpack_require__(/*! ./Entity */ \"./node_modules/dataverse-ify/lib/types/Entity.js\");\r\nfunction odatifyEntityReference(entitySetName, id) {\r\n    // We set null ids to string null so we can pick up and run a disassociate\r\n    return `${entitySetName}(${id === null ? \"null\" : Guid_1.trimGuid(id)})`;\r\n}\r\nexports.odatifyEntityReference = odatifyEntityReference;\r\nfunction getNavigationPathForEntityReference(entity, attributeLogicalName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const entityReference = entity[attributeLogicalName];\r\n        const collectionName = yield Entity_1.Entity.getCollectionNameForEntity(entityReference.entityType);\r\n        if (collectionName) {\r\n            return odatifyEntityReference(collectionName, entityReference.id);\r\n        }\r\n        throw new Error(`Cannot find navigation metadata for ${attributeLogicalName}`);\r\n    });\r\n}\r\nexports.getNavigationPathForEntityReference = getNavigationPathForEntityReference;\r\n//# sourceMappingURL=IEntityReference.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvSUVudGl0eVJlZmVyZW5jZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkNBQTJDLEdBQUcsOEJBQThCO0FBQzVFLGVBQWUsbUJBQU8sQ0FBQyw4REFBUTtBQUMvQixpQkFBaUIsbUJBQU8sQ0FBQyxrRUFBVTtBQUNuQztBQUNBO0FBQ0EsY0FBYyxjQUFjLEdBQUcsMkNBQTJDO0FBQzFFO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStELHFCQUFxQjtBQUNwRixLQUFLO0FBQ0w7QUFDQSwyQ0FBMkM7QUFDM0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi90eXBlcy9JRW50aXR5UmVmZXJlbmNlLmpzP2Q5MjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xyXG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XHJcbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcclxuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XHJcbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XHJcbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cclxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XHJcbiAgICB9KTtcclxufTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLmdldE5hdmlnYXRpb25QYXRoRm9yRW50aXR5UmVmZXJlbmNlID0gZXhwb3J0cy5vZGF0aWZ5RW50aXR5UmVmZXJlbmNlID0gdm9pZCAwO1xyXG5jb25zdCBHdWlkXzEgPSByZXF1aXJlKFwiLi9HdWlkXCIpO1xyXG5jb25zdCBFbnRpdHlfMSA9IHJlcXVpcmUoXCIuL0VudGl0eVwiKTtcclxuZnVuY3Rpb24gb2RhdGlmeUVudGl0eVJlZmVyZW5jZShlbnRpdHlTZXROYW1lLCBpZCkge1xyXG4gICAgLy8gV2Ugc2V0IG51bGwgaWRzIHRvIHN0cmluZyBudWxsIHNvIHdlIGNhbiBwaWNrIHVwIGFuZCBydW4gYSBkaXNhc3NvY2lhdGVcclxuICAgIHJldHVybiBgJHtlbnRpdHlTZXROYW1lfSgke2lkID09PSBudWxsID8gXCJudWxsXCIgOiBHdWlkXzEudHJpbUd1aWQoaWQpfSlgO1xyXG59XHJcbmV4cG9ydHMub2RhdGlmeUVudGl0eVJlZmVyZW5jZSA9IG9kYXRpZnlFbnRpdHlSZWZlcmVuY2U7XHJcbmZ1bmN0aW9uIGdldE5hdmlnYXRpb25QYXRoRm9yRW50aXR5UmVmZXJlbmNlKGVudGl0eSwgYXR0cmlidXRlTG9naWNhbE5hbWUpIHtcclxuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgY29uc3QgZW50aXR5UmVmZXJlbmNlID0gZW50aXR5W2F0dHJpYnV0ZUxvZ2ljYWxOYW1lXTtcclxuICAgICAgICBjb25zdCBjb2xsZWN0aW9uTmFtZSA9IHlpZWxkIEVudGl0eV8xLkVudGl0eS5nZXRDb2xsZWN0aW9uTmFtZUZvckVudGl0eShlbnRpdHlSZWZlcmVuY2UuZW50aXR5VHlwZSk7XHJcbiAgICAgICAgaWYgKGNvbGxlY3Rpb25OYW1lKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBvZGF0aWZ5RW50aXR5UmVmZXJlbmNlKGNvbGxlY3Rpb25OYW1lLCBlbnRpdHlSZWZlcmVuY2UuaWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBmaW5kIG5hdmlnYXRpb24gbWV0YWRhdGEgZm9yICR7YXR0cmlidXRlTG9naWNhbE5hbWV9YCk7XHJcbiAgICB9KTtcclxufVxyXG5leHBvcnRzLmdldE5hdmlnYXRpb25QYXRoRm9yRW50aXR5UmVmZXJlbmNlID0gZ2V0TmF2aWdhdGlvblBhdGhGb3JFbnRpdHlSZWZlcmVuY2U7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlFbnRpdHlSZWZlcmVuY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/IEntityReference.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/OperationType.js":
/*!***************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/OperationType.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.OperationType = void 0;\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"Action\"] = 0] = \"Action\";\r\n    OperationType[OperationType[\"Function\"] = 1] = \"Function\";\r\n    OperationType[OperationType[\"CRUD\"] = 2] = \"CRUD\";\r\n})(OperationType = exports.OperationType || (exports.OperationType = {}));\r\n//# sourceMappingURL=OperationType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvT3BlcmF0aW9uVHlwZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNENBQTRDLHFCQUFxQixLQUFLO0FBQ3ZFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQmlzLkNvbW1vbi5DUk0vLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvT3BlcmF0aW9uVHlwZS5qcz9kNDI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuT3BlcmF0aW9uVHlwZSA9IHZvaWQgMDtcclxudmFyIE9wZXJhdGlvblR5cGU7XHJcbihmdW5jdGlvbiAoT3BlcmF0aW9uVHlwZSkge1xyXG4gICAgT3BlcmF0aW9uVHlwZVtPcGVyYXRpb25UeXBlW1wiQWN0aW9uXCJdID0gMF0gPSBcIkFjdGlvblwiO1xyXG4gICAgT3BlcmF0aW9uVHlwZVtPcGVyYXRpb25UeXBlW1wiRnVuY3Rpb25cIl0gPSAxXSA9IFwiRnVuY3Rpb25cIjtcclxuICAgIE9wZXJhdGlvblR5cGVbT3BlcmF0aW9uVHlwZVtcIkNSVURcIl0gPSAyXSA9IFwiQ1JVRFwiO1xyXG59KShPcGVyYXRpb25UeXBlID0gZXhwb3J0cy5PcGVyYXRpb25UeXBlIHx8IChleHBvcnRzLk9wZXJhdGlvblR5cGUgPSB7fSkpO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1PcGVyYXRpb25UeXBlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/OperationType.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/ParameterType.js":
/*!***************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/ParameterType.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=ParameterType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvUGFyYW1ldGVyVHlwZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL0Jpcy5Db21tb24uQ1JNLy4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL1BhcmFtZXRlclR5cGUuanM/N2NhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1QYXJhbWV0ZXJUeXBlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/ParameterType.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/RequestWithTarget.js":
/*!*******************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/RequestWithTarget.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=RequestWithTarget.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvUmVxdWVzdFdpdGhUYXJnZXQuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi90eXBlcy9SZXF1ZXN0V2l0aFRhcmdldC5qcz82NjI3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJlcXVlc3RXaXRoVGFyZ2V0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/RequestWithTarget.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/StructuralProperty.js":
/*!********************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/StructuralProperty.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StructuralProperty = void 0;\r\nvar StructuralProperty;\r\n(function (StructuralProperty) {\r\n    StructuralProperty[StructuralProperty[\"Unknown\"] = 0] = \"Unknown\";\r\n    StructuralProperty[StructuralProperty[\"PrimitiveType\"] = 1] = \"PrimitiveType\";\r\n    StructuralProperty[StructuralProperty[\"ComplexType\"] = 2] = \"ComplexType\";\r\n    StructuralProperty[StructuralProperty[\"EnumerationType\"] = 3] = \"EnumerationType\";\r\n    StructuralProperty[StructuralProperty[\"Collection\"] = 4] = \"Collection\";\r\n    StructuralProperty[StructuralProperty[\"EntityType\"] = 5] = \"EntityType\";\r\n})(StructuralProperty = exports.StructuralProperty || (exports.StructuralProperty = {}));\r\n//# sourceMappingURL=StructuralProperty.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvU3RydWN0dXJhbFByb3BlcnR5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzREFBc0QsMEJBQTBCLEtBQUs7QUFDdEYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi90eXBlcy9TdHJ1Y3R1cmFsUHJvcGVydHkuanM/NThlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLlN0cnVjdHVyYWxQcm9wZXJ0eSA9IHZvaWQgMDtcclxudmFyIFN0cnVjdHVyYWxQcm9wZXJ0eTtcclxuKGZ1bmN0aW9uIChTdHJ1Y3R1cmFsUHJvcGVydHkpIHtcclxuICAgIFN0cnVjdHVyYWxQcm9wZXJ0eVtTdHJ1Y3R1cmFsUHJvcGVydHlbXCJVbmtub3duXCJdID0gMF0gPSBcIlVua25vd25cIjtcclxuICAgIFN0cnVjdHVyYWxQcm9wZXJ0eVtTdHJ1Y3R1cmFsUHJvcGVydHlbXCJQcmltaXRpdmVUeXBlXCJdID0gMV0gPSBcIlByaW1pdGl2ZVR5cGVcIjtcclxuICAgIFN0cnVjdHVyYWxQcm9wZXJ0eVtTdHJ1Y3R1cmFsUHJvcGVydHlbXCJDb21wbGV4VHlwZVwiXSA9IDJdID0gXCJDb21wbGV4VHlwZVwiO1xyXG4gICAgU3RydWN0dXJhbFByb3BlcnR5W1N0cnVjdHVyYWxQcm9wZXJ0eVtcIkVudW1lcmF0aW9uVHlwZVwiXSA9IDNdID0gXCJFbnVtZXJhdGlvblR5cGVcIjtcclxuICAgIFN0cnVjdHVyYWxQcm9wZXJ0eVtTdHJ1Y3R1cmFsUHJvcGVydHlbXCJDb2xsZWN0aW9uXCJdID0gNF0gPSBcIkNvbGxlY3Rpb25cIjtcclxuICAgIFN0cnVjdHVyYWxQcm9wZXJ0eVtTdHJ1Y3R1cmFsUHJvcGVydHlbXCJFbnRpdHlUeXBlXCJdID0gNV0gPSBcIkVudGl0eVR5cGVcIjtcclxufSkoU3RydWN0dXJhbFByb3BlcnR5ID0gZXhwb3J0cy5TdHJ1Y3R1cmFsUHJvcGVydHkgfHwgKGV4cG9ydHMuU3RydWN0dXJhbFByb3BlcnR5ID0ge30pKTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RydWN0dXJhbFByb3BlcnR5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/StructuralProperty.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/WebApiExecuteRequest.js":
/*!**********************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/WebApiExecuteRequest.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=WebApiExecuteRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvV2ViQXBpRXhlY3V0ZVJlcXVlc3QuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi90eXBlcy9XZWJBcGlFeGVjdXRlUmVxdWVzdC5qcz8zZjBkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVdlYkFwaUV4ZWN1dGVSZXF1ZXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/WebApiExecuteRequest.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/WebApiRequest.js":
/*!***************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/WebApiRequest.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=WebApiRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvV2ViQXBpUmVxdWVzdC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL0Jpcy5Db21tb24uQ1JNLy4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL1dlYkFwaVJlcXVlc3QuanM/MDdmYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1XZWJBcGlSZXF1ZXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/WebApiRequest.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./ActivityParty */ \"./node_modules/dataverse-ify/lib/types/ActivityParty.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./AttributeTypes */ \"./node_modules/dataverse-ify/lib/types/AttributeTypes.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./Dictionary */ \"./node_modules/dataverse-ify/lib/types/Dictionary.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./Entity */ \"./node_modules/dataverse-ify/lib/types/Entity.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./EntityCollection */ \"./node_modules/dataverse-ify/lib/types/EntityCollection.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./EntityReference */ \"./node_modules/dataverse-ify/lib/types/EntityReference.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./Guid */ \"./node_modules/dataverse-ify/lib/types/Guid.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./IEntity */ \"./node_modules/dataverse-ify/lib/types/IEntity.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./IEntityCollection */ \"./node_modules/dataverse-ify/lib/types/IEntityCollection.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./OperationType */ \"./node_modules/dataverse-ify/lib/types/OperationType.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./ParameterType */ \"./node_modules/dataverse-ify/lib/types/ParameterType.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./RequestWithTarget */ \"./node_modules/dataverse-ify/lib/types/RequestWithTarget.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./StructuralProperty */ \"./node_modules/dataverse-ify/lib/types/StructuralProperty.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./WebApiExecuteRequest */ \"./node_modules/dataverse-ify/lib/types/WebApiExecuteRequest.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./WebApiRequest */ \"./node_modules/dataverse-ify/lib/types/WebApiRequest.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./requests */ \"./node_modules/dataverse-ify/lib/types/requests/index.js\"), exports);\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsbUNBQW1DLG9DQUFvQyxnQkFBZ0I7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQyxnRkFBaUI7QUFDdEMsYUFBYSxtQkFBTyxDQUFDLGtGQUFrQjtBQUN2QyxhQUFhLG1CQUFPLENBQUMsMEVBQWM7QUFDbkMsYUFBYSxtQkFBTyxDQUFDLGtFQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxzRkFBb0I7QUFDekMsYUFBYSxtQkFBTyxDQUFDLG9GQUFtQjtBQUN4QyxhQUFhLG1CQUFPLENBQUMsOERBQVE7QUFDN0IsYUFBYSxtQkFBTyxDQUFDLG9FQUFXO0FBQ2hDLGFBQWEsbUJBQU8sQ0FBQyx3RkFBcUI7QUFDMUMsYUFBYSxtQkFBTyxDQUFDLGdGQUFpQjtBQUN0QyxhQUFhLG1CQUFPLENBQUMsZ0ZBQWlCO0FBQ3RDLGFBQWEsbUJBQU8sQ0FBQyx3RkFBcUI7QUFDMUMsYUFBYSxtQkFBTyxDQUFDLDBGQUFzQjtBQUMzQyxhQUFhLG1CQUFPLENBQUMsOEZBQXdCO0FBQzdDLGFBQWEsbUJBQU8sQ0FBQyxnRkFBaUI7QUFDdEMsYUFBYSxtQkFBTyxDQUFDLDRFQUFZO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQmlzLkNvbW1vbi5DUk0vLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvaW5kZXguanM/MzU4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xyXG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcclxufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcclxuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XHJcbiAgICBvW2syXSA9IG1ba107XHJcbn0pKTtcclxudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XHJcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xyXG59O1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9BY3Rpdml0eVBhcnR5XCIpLCBleHBvcnRzKTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0F0dHJpYnV0ZVR5cGVzXCIpLCBleHBvcnRzKTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0RpY3Rpb25hcnlcIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vRW50aXR5XCIpLCBleHBvcnRzKTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0VudGl0eUNvbGxlY3Rpb25cIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vRW50aXR5UmVmZXJlbmNlXCIpLCBleHBvcnRzKTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0d1aWRcIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vSUVudGl0eVwiKSwgZXhwb3J0cyk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9JRW50aXR5Q29sbGVjdGlvblwiKSwgZXhwb3J0cyk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9PcGVyYXRpb25UeXBlXCIpLCBleHBvcnRzKTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1BhcmFtZXRlclR5cGVcIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vUmVxdWVzdFdpdGhUYXJnZXRcIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vU3RydWN0dXJhbFByb3BlcnR5XCIpLCBleHBvcnRzKTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1dlYkFwaUV4ZWN1dGVSZXF1ZXN0XCIpLCBleHBvcnRzKTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1dlYkFwaVJlcXVlc3RcIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcmVxdWVzdHNcIiksIGV4cG9ydHMpO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/index.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/requests/AssociateRequest.js":
/*!***************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/requests/AssociateRequest.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=AssociateRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvcmVxdWVzdHMvQXNzb2NpYXRlUmVxdWVzdC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL0Jpcy5Db21tb24uQ1JNLy4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL3JlcXVlc3RzL0Fzc29jaWF0ZVJlcXVlc3QuanM/ODYxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Bc3NvY2lhdGVSZXF1ZXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/requests/AssociateRequest.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/requests/DisassociateRequest.js":
/*!******************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/requests/DisassociateRequest.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=DisassociateRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvcmVxdWVzdHMvRGlzYXNzb2NpYXRlUmVxdWVzdC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL0Jpcy5Db21tb24uQ1JNLy4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL3JlcXVlc3RzL0Rpc2Fzc29jaWF0ZVJlcXVlc3QuanM/MzA0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1EaXNhc3NvY2lhdGVSZXF1ZXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/requests/DisassociateRequest.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/types/requests/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/types/requests/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./AssociateRequest */ \"./node_modules/dataverse-ify/lib/types/requests/AssociateRequest.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./DisassociateRequest */ \"./node_modules/dataverse-ify/lib/types/requests/DisassociateRequest.js\"), exports);\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvdHlwZXMvcmVxdWVzdHMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsbUNBQW1DLG9DQUFvQyxnQkFBZ0I7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQywrRkFBb0I7QUFDekMsYUFBYSxtQkFBTyxDQUFDLHFHQUF1QjtBQUM1QyIsInNvdXJjZXMiOlsid2VicGFjazovL0Jpcy5Db21tb24uQ1JNLy4vbm9kZV9tb2R1bGVzL2RhdGF2ZXJzZS1pZnkvbGliL3R5cGVzL3JlcXVlc3RzL2luZGV4LmpzPzliM2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcclxuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XHJcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XHJcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xyXG4gICAgb1trMl0gPSBtW2tdO1xyXG59KSk7XHJcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xyXG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcclxufTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQXNzb2NpYXRlUmVxdWVzdFwiKSwgZXhwb3J0cyk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9EaXNhc3NvY2lhdGVSZXF1ZXN0XCIpLCBleHBvcnRzKTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/types/requests/index.js\n");

/***/ }),

/***/ "./node_modules/dataverse-ify/lib/webapi/utils/NullOrUndefined.js":
/*!************************************************************************!*\
  !*** ./node_modules/dataverse-ify/lib/webapi/utils/NullOrUndefined.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.requireValue = exports.isNullOrUndefined = void 0;\r\nfunction isNullOrUndefined(value) {\r\n    return typeof value === \"undefined\" || value === null;\r\n}\r\nexports.isNullOrUndefined = isNullOrUndefined;\r\nfunction requireValue(message, value) {\r\n    if (isNullOrUndefined(value)) {\r\n        throw new Error(message);\r\n    }\r\n}\r\nexports.requireValue = requireValue;\r\n//# sourceMappingURL=NullOrUndefined.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGF0YXZlcnNlLWlmeS9saWIvd2ViYXBpL3V0aWxzL051bGxPclVuZGVmaW5lZC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0IsR0FBRyx5QkFBeUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL25vZGVfbW9kdWxlcy9kYXRhdmVyc2UtaWZ5L2xpYi93ZWJhcGkvdXRpbHMvTnVsbE9yVW5kZWZpbmVkLmpzP2QwOTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuZXhwb3J0cy5yZXF1aXJlVmFsdWUgPSBleHBvcnRzLmlzTnVsbE9yVW5kZWZpbmVkID0gdm9pZCAwO1xyXG5mdW5jdGlvbiBpc051bGxPclVuZGVmaW5lZCh2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJ1bmRlZmluZWRcIiB8fCB2YWx1ZSA9PT0gbnVsbDtcclxufVxyXG5leHBvcnRzLmlzTnVsbE9yVW5kZWZpbmVkID0gaXNOdWxsT3JVbmRlZmluZWQ7XHJcbmZ1bmN0aW9uIHJlcXVpcmVWYWx1ZShtZXNzYWdlLCB2YWx1ZSkge1xyXG4gICAgaWYgKGlzTnVsbE9yVW5kZWZpbmVkKHZhbHVlKSkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcclxuICAgIH1cclxufVxyXG5leHBvcnRzLnJlcXVpcmVWYWx1ZSA9IHJlcXVpcmVWYWx1ZTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TnVsbE9yVW5kZWZpbmVkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dataverse-ify/lib/webapi/utils/NullOrUndefined.js\n");

/***/ }),

/***/ "./src/Common/Configuration/ConfigurationReader.ts":
/*!*********************************************************!*\
  !*** ./src/Common/Configuration/ConfigurationReader.ts ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ConfigurationReader = void 0;\r\nvar ConfigurationReader = /** @class */ (function () {\r\n    function ConfigurationReader() {\r\n    }\r\n    ConfigurationReader.getString = function (key, defaultValue, storage) {\r\n        return new Promise(function (resolve) {\r\n            ConfigurationReader.get(key, storage).then(function (result) {\r\n                if (result !== null && result.bis_value !== null)\r\n                    resolve(result.bis_value);\r\n                else\r\n                    resolve(defaultValue);\r\n            });\r\n        });\r\n    };\r\n    ConfigurationReader.getBool = function (key, defaultValue, storage) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve) {\r\n                        ConfigurationReader.get(key, storage).then(function (result) {\r\n                            var ret = defaultValue;\r\n                            if (result !== null && result.bis_value !== null) {\r\n                                var val = result.bis_value.toLowerCase();\r\n                                if (val === \"true\")\r\n                                    ret = true;\r\n                                else if (val === \"false\")\r\n                                    ret = false;\r\n                            }\r\n                            resolve(ret);\r\n                        });\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    ConfigurationReader.getNumber = function (key, defaultValue, storage) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve) {\r\n                        ConfigurationReader.get(key, storage).then(function (result) {\r\n                            var ret = defaultValue;\r\n                            if (result !== null && result.bis_value !== null) {\r\n                                var val = Number(result.bis_value);\r\n                                if (!Number.isNaN(val))\r\n                                    ret = val;\r\n                            }\r\n                            resolve(ret);\r\n                        });\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    ConfigurationReader.getList = function (key, defaultValue, storage) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve) {\r\n                        ConfigurationReader.get(key, storage).then(function (result) {\r\n                            var ret = defaultValue;\r\n                            if (result !== null && result.bis_value !== null) {\r\n                                var separator = ',';\r\n                                ret = result.bis_value.split(separator);\r\n                            }\r\n                            resolve(ret);\r\n                        });\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    ConfigurationReader.getObject = function (key, defaultValue, storage) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve) {\r\n                        ConfigurationReader.get(key, storage).then(function (result) {\r\n                            if (result !== null && result.mwo_value !== null) {\r\n                                try {\r\n                                    if (result.bis_type === 913600002 /* bis_systemsettingtype.JSON */ || result.bis_value.startsWith(\"{\") || result.bis_value.startsWith(\"[\"))\r\n                                        resolve(JSON.parse(result.bis_value));\r\n                                    else if (result.bis_type === 913600003 /* bis_systemsettingtype.XML */ || result.bis_value.StartsWith(\"<\"))\r\n                                        resolve(new window.DOMParser().parseFromString(result.bis_value, \"text/xml\").documentElement);\r\n                                    else\r\n                                        resolve(defaultValue);\r\n                                }\r\n                                catch (error) {\r\n                                    console.warn(\"Failed to generate Object: \" + error);\r\n                                    resolve(defaultValue);\r\n                                }\r\n                            }\r\n                            else\r\n                                resolve(defaultValue);\r\n                        });\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    ConfigurationReader.get = function (key, storage) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            var cache = _this.getFromCache(key, storage);\r\n            if (cache)\r\n                resolve(cache);\r\n            else\r\n                Xrm.WebApi.retrieveMultipleRecords(\"bis_systemsettings\", \"?$select=bis_value,bis_systemsettingtype&$filter=bis_key eq '\" + key + \"'\").then(function (result) {\r\n                    if (result.entities && result.entities.length > 0) {\r\n                        _this.saveToCache(key, result.entities[0], storage);\r\n                        resolve(result.entities[0]);\r\n                    }\r\n                    else\r\n                        resolve(null);\r\n                });\r\n        });\r\n    };\r\n    ConfigurationReader.getFromCache = function (key, storage) {\r\n        if (storage && storage.getItem(\"bbis_systemsettings_\" + key))\r\n            return JSON.parse(storage.getItem(\"bis_systemsettings_\" + key));\r\n        else\r\n            return null;\r\n    };\r\n    ConfigurationReader.saveToCache = function (key, value, storage) {\r\n        if (storage)\r\n            storage.setItem(\"bis_systemsettings_\" + key, JSON.stringify(value));\r\n    };\r\n    return ConfigurationReader;\r\n}());\r\nexports.ConfigurationReader = ConfigurationReader;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Common/Configuration/ConfigurationReader.ts\n");

/***/ }),

/***/ "./src/Forms/AccountForm.ts":
/*!**********************************!*\
  !*** ./src/Forms/AccountForm.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AccountForm = void 0;\r\nvar AccountForm = /** @class */ (function () {\r\n    function AccountForm() {\r\n    }\r\n    AccountForm.onLoad = function (executionContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var formContext;\r\n            return __generator(this, function (_a) {\r\n                formContext = executionContext.getFormContext();\r\n                //this.formContext.getAttribute(AccountAttributes.AccountNumber).setRequiredLevel(XrmEnum.AttributeRequirementLevel.Required);\r\n                formContext.getAttribute(\"bis_headquarter\" /* AccountAttributes.bis_headquarter */).addOnChange(this.onChangeHeadQuarter);\r\n                this.showFields(executionContext);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    AccountForm.onChangeHeadQuarter = function (executionContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var formContext, bis_headquarterValue;\r\n            return __generator(this, function (_a) {\r\n                formContext = executionContext.getFormContext();\r\n                bis_headquarterValue = formContext.getAttribute(\"bis_headquarter\" /* AccountAttributes.bis_headquarter */).getValue();\r\n                formContext.getControl(\"parentaccountid\" /* AccountAttributes.ParentAccountId */).setVisible(!bis_headquarterValue);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    AccountForm.showFields = function (executionContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                this.onChangeHeadQuarter(executionContext);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return AccountForm;\r\n}());\r\nexports.AccountForm = AccountForm;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRm9ybXMvQWNjb3VudEZvcm0udHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUE7SUFBQTtJQStCQSxDQUFDO0lBN0JnQixrQkFBTSxHQUFuQixVQUFvQixnQkFBeUM7Ozs7Z0JBR3JELFdBQVcsR0FBRyxnQkFBZ0IsQ0FBQyxjQUFjLEVBQUUsQ0FBQztnQkFFcEQsOEhBQThIO2dCQUU5SCxXQUFXLENBQUMsWUFBWSwyREFBbUMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUM7Z0JBRWxHLElBQUksQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLENBQUMsQ0FBQzs7OztLQUVyQztJQUVZLCtCQUFtQixHQUFoQyxVQUFpQyxnQkFBeUM7Ozs7Z0JBRWxFLFdBQVcsR0FBRyxnQkFBZ0IsQ0FBQyxjQUFjLEVBQUUsQ0FBQztnQkFFaEQsb0JBQW9CLEdBQVksV0FBVyxDQUFDLFlBQVksMkRBQW1DLENBQUMsUUFBUSxFQUFFLENBQUM7Z0JBRTFHLFdBQVcsQ0FBQyxVQUFVLDJEQUFrRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLG9CQUFvQixDQUFDLENBQUM7Ozs7S0FFL0g7SUFFWSxzQkFBVSxHQUF2QixVQUF3QixnQkFBeUM7OztnQkFFN0QsSUFBSSxDQUFDLG1CQUFtQixDQUFDLGdCQUFnQixDQUFDLENBQUM7Ozs7S0FFOUM7SUFFTCxrQkFBQztBQUFELENBQUM7QUEvQlksa0NBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL3NyYy9Gb3Jtcy9BY2NvdW50Rm9ybS50cz9mYTdhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjY291bnRBdHRyaWJ1dGVzIH0gZnJvbSBcIi4uL2RhdGF2ZXJzZS1nZW4vZW50aXRpZXMvQWNjb3VudFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEFjY291bnRGb3JtIHtcclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb25Mb2FkKGV4ZWN1dGlvbkNvbnRleHQ6IFhybS5FdmVudHMuRXZlbnRDb250ZXh0KTogUHJvbWlzZTx2b2lkPiB7XHJcblxyXG5cclxuICAgICAgICBsZXQgZm9ybUNvbnRleHQgPSBleGVjdXRpb25Db250ZXh0LmdldEZvcm1Db250ZXh0KCk7XHJcblxyXG4gICAgICAgIC8vdGhpcy5mb3JtQ29udGV4dC5nZXRBdHRyaWJ1dGUoQWNjb3VudEF0dHJpYnV0ZXMuQWNjb3VudE51bWJlcikuc2V0UmVxdWlyZWRMZXZlbChYcm1FbnVtLkF0dHJpYnV0ZVJlcXVpcmVtZW50TGV2ZWwuUmVxdWlyZWQpO1xyXG5cclxuICAgICAgICBmb3JtQ29udGV4dC5nZXRBdHRyaWJ1dGUoQWNjb3VudEF0dHJpYnV0ZXMuYmlzX2hlYWRxdWFydGVyKS5hZGRPbkNoYW5nZSh0aGlzLm9uQ2hhbmdlSGVhZFF1YXJ0ZXIpO1xyXG5cclxuICAgICAgICB0aGlzLnNob3dGaWVsZHMoZXhlY3V0aW9uQ29udGV4dCk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvbkNoYW5nZUhlYWRRdWFydGVyKGV4ZWN1dGlvbkNvbnRleHQ6IFhybS5FdmVudHMuRXZlbnRDb250ZXh0KTogUHJvbWlzZTx2b2lkPiB7XHJcblxyXG4gICAgICAgIGxldCBmb3JtQ29udGV4dCA9IGV4ZWN1dGlvbkNvbnRleHQuZ2V0Rm9ybUNvbnRleHQoKTtcclxuXHJcbiAgICAgICAgbGV0IGJpc19oZWFkcXVhcnRlclZhbHVlOiBib29sZWFuID0gZm9ybUNvbnRleHQuZ2V0QXR0cmlidXRlKEFjY291bnRBdHRyaWJ1dGVzLmJpc19oZWFkcXVhcnRlcikuZ2V0VmFsdWUoKTtcclxuXHJcbiAgICAgICAgKGZvcm1Db250ZXh0LmdldENvbnRyb2woQWNjb3VudEF0dHJpYnV0ZXMuUGFyZW50QWNjb3VudElkKSBhcyBYcm0uQ29udHJvbHMuTG9va3VwQ29udHJvbCkuc2V0VmlzaWJsZSghYmlzX2hlYWRxdWFydGVyVmFsdWUpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgc2hvd0ZpZWxkcyhleGVjdXRpb25Db250ZXh0OiBYcm0uRXZlbnRzLkV2ZW50Q29udGV4dCk6IFByb21pc2U8dm9pZD4ge1xyXG5cclxuICAgICAgICB0aGlzLm9uQ2hhbmdlSGVhZFF1YXJ0ZXIoZXhlY3V0aW9uQ29udGV4dCk7XHJcblxyXG4gICAgfVxyXG5cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Forms/AccountForm.ts\n");

/***/ }),

/***/ "./src/Forms/ContactForm.ts":
/*!**********************************!*\
  !*** ./src/Forms/ContactForm.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ContactForm = void 0;\r\n//import { ConfigurationReader } from '../Common/Configuration/ConfigurationReader';\r\nvar ContactForm = /** @class */ (function () {\r\n    function ContactForm() {\r\n    }\r\n    ContactForm.onLoad = function (executionContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var formContext, attribute_prefix;\r\n            return __generator(this, function (_a) {\r\n                formContext = executionContext.getFormContext();\r\n                // this.formContext.getAttribute(ContactAttributes.FullName).setRequiredLevel(XrmEnum.AttributeRequirementLevel.Required);\r\n                formContext.ui.setFormNotification(\"TEST\", \"INFO\" /* XrmEnum.FormNotificationLevel.Info */, \"TEST\");\r\n                debugger;\r\n                attribute_prefix = formContext.data.entity.attributes.get(\"bis_prefix\" /* ContactAttributes.bis_prefix */);\r\n                if (attribute_prefix && attribute_prefix.addOnChange) {\r\n                    attribute_prefix.addOnChange(this.Prefix_OnChange);\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This is a comment for the function\r\n     * @param context event args\r\n     *\r\n     *\r\n     */\r\n    ContactForm.Prefix_OnChange = function (context) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var formContext, attribute_prefix_value;\r\n            return __generator(this, function (_a) {\r\n                debugger;\r\n                formContext = context.getFormContext();\r\n                attribute_prefix_value = formContext.data.entity.attributes.get(\"bis_prefix\" /* ContactAttributes.bis_prefix */).getValue();\r\n                formContext.ui.setFormNotification(\"Prefix: \".concat(attribute_prefix_value), \"INFO\" /* XrmEnum.FormNotificationLevel.Info */, \"bis_prefix\" /* ContactAttributes.bis_prefix */);\r\n                switch (attribute_prefix_value) {\r\n                    case 913600000 /* bis_prefix.Baron */:\r\n                        Xrm.Navigation.openAlertDialog({ text: \"This is Baron\", title: \"This is a Title\", confirmButtonLabel: \"All right\" });\r\n                        break;\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return ContactForm;\r\n}());\r\nexports.ContactForm = ContactForm;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRm9ybXMvQ29udGFjdEZvcm0udHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSUEsb0ZBQW9GO0FBR3BGO0lBQUE7SUFzQ0EsQ0FBQztJQXBDZ0Isa0JBQU0sR0FBbkIsVUFBb0IsZ0JBQXlDOzs7O2dCQUNyRCxXQUFXLEdBQUcsZ0JBQWdCLENBQUMsY0FBYyxFQUFFLENBQUM7Z0JBQ3BELDBIQUEwSDtnQkFDMUgsV0FBVyxDQUFDLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQyxNQUFNLG1EQUFzQyxNQUFNLENBQUMsQ0FBQztnQkFFdkYsUUFBUSxDQUFDO2dCQUlMLGdCQUFnQixHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxHQUFHLGlEQUE4QixDQUFDO2dCQUM1RixJQUFJLGdCQUFnQixJQUFJLGdCQUFnQixDQUFDLFdBQVcsRUFBRTtvQkFDbEQsZ0JBQWdCLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztpQkFDdEQ7Ozs7S0FDSjtJQUVEOzs7OztPQUtHO0lBSVUsMkJBQWUsR0FBNUIsVUFBNkIsT0FBZ0M7Ozs7Z0JBQ3pELFFBQVEsQ0FBQztnQkFDTCxXQUFXLEdBQUcsT0FBTyxDQUFDLGNBQWMsRUFBRSxDQUFDO2dCQUN2QyxzQkFBc0IsR0FBZSxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsR0FBRyxpREFBOEIsQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFDekgsV0FBVyxDQUFDLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQyxrQkFBVyxzQkFBc0IsQ0FBRSxtR0FBbUUsQ0FBQztnQkFFMUksUUFBUSxzQkFBc0IsRUFBRTtvQkFDNUI7d0JBQ0ksR0FBRyxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQUMsRUFBRSxJQUFJLEVBQUUsZUFBZSxFQUFFLEtBQUssRUFBRSxpQkFBaUIsRUFBRSxrQkFBa0IsRUFBRSxXQUFXLEVBQUUsQ0FBQyxDQUFDO3dCQUNySCxNQUFNO2lCQUNiOzs7O0tBQ0o7SUFDTCxrQkFBQztBQUFELENBQUM7QUF0Q1ksa0NBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL3NyYy9Gb3Jtcy9Db250YWN0Rm9ybS50cz9iZjIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVudGl0eSwgc2V0TWV0YWRhdGFDYWNoZSwgQXR0cmlidXRlVHlwZXMgfSBmcm9tIFwiZGF0YXZlcnNlLWlmeVwiO1xyXG5pbXBvcnQgeyBiaXNfcHJlZml4IH0gZnJvbSBcIi4uL2RhdGF2ZXJzZS1nZW5cIjtcclxuaW1wb3J0IHsgQ29udGFjdEF0dHJpYnV0ZXMgfSBmcm9tIFwiLi4vZGF0YXZlcnNlLWdlbi9lbnRpdGllcy9Db250YWN0XCI7XHJcblxyXG4vL2ltcG9ydCB7IENvbmZpZ3VyYXRpb25SZWFkZXIgfSBmcm9tICcuLi9Db21tb24vQ29uZmlndXJhdGlvbi9Db25maWd1cmF0aW9uUmVhZGVyJztcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgQ29udGFjdEZvcm0ge1xyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvbkxvYWQoZXhlY3V0aW9uQ29udGV4dDogWHJtLkV2ZW50cy5FdmVudENvbnRleHQpOiBQcm9taXNlPHZvaWQ+e1xyXG4gICAgICAgIGxldCBmb3JtQ29udGV4dCA9IGV4ZWN1dGlvbkNvbnRleHQuZ2V0Rm9ybUNvbnRleHQoKTtcclxuICAgICAgICAvLyB0aGlzLmZvcm1Db250ZXh0LmdldEF0dHJpYnV0ZShDb250YWN0QXR0cmlidXRlcy5GdWxsTmFtZSkuc2V0UmVxdWlyZWRMZXZlbChYcm1FbnVtLkF0dHJpYnV0ZVJlcXVpcmVtZW50TGV2ZWwuUmVxdWlyZWQpO1xyXG4gICAgICAgIGZvcm1Db250ZXh0LnVpLnNldEZvcm1Ob3RpZmljYXRpb24oXCJURVNUXCIsIFhybUVudW0uRm9ybU5vdGlmaWNhdGlvbkxldmVsLkluZm8sIFwiVEVTVFwiKTtcclxuXHJcbiAgICAgICAgZGVidWdnZXI7XHJcblxyXG4gICAgICAgIFxyXG5cclxuICAgICAgICB2YXIgYXR0cmlidXRlX3ByZWZpeCA9IGZvcm1Db250ZXh0LmRhdGEuZW50aXR5LmF0dHJpYnV0ZXMuZ2V0KENvbnRhY3RBdHRyaWJ1dGVzLmJpc19wcmVmaXgpO1xyXG4gICAgICAgIGlmIChhdHRyaWJ1dGVfcHJlZml4ICYmIGF0dHJpYnV0ZV9wcmVmaXguYWRkT25DaGFuZ2UpIHtcclxuICAgICAgICAgICAgYXR0cmlidXRlX3ByZWZpeC5hZGRPbkNoYW5nZSh0aGlzLlByZWZpeF9PbkNoYW5nZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhpcyBpcyBhIGNvbW1lbnQgZm9yIHRoZSBmdW5jdGlvblxyXG4gICAgICogQHBhcmFtIGNvbnRleHQgZXZlbnQgYXJnc1xyXG4gICAgICogXHJcbiAgICAgKiBcclxuICAgICAqL1xyXG5cclxuXHJcbiAgICBcclxuICAgIHN0YXRpYyBhc3luYyBQcmVmaXhfT25DaGFuZ2UoY29udGV4dDogWHJtLkV2ZW50cy5FdmVudENvbnRleHQpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgICAgICBkZWJ1Z2dlcjtcclxuICAgICAgICBsZXQgZm9ybUNvbnRleHQgPSBjb250ZXh0LmdldEZvcm1Db250ZXh0KCk7XHJcbiAgICAgICAgbGV0IGF0dHJpYnV0ZV9wcmVmaXhfdmFsdWU6IGJpc19wcmVmaXggPSBmb3JtQ29udGV4dC5kYXRhLmVudGl0eS5hdHRyaWJ1dGVzLmdldChDb250YWN0QXR0cmlidXRlcy5iaXNfcHJlZml4KS5nZXRWYWx1ZSgpO1xyXG4gICAgICAgIGZvcm1Db250ZXh0LnVpLnNldEZvcm1Ob3RpZmljYXRpb24oYFByZWZpeDogJHthdHRyaWJ1dGVfcHJlZml4X3ZhbHVlfWAsIFhybUVudW0uRm9ybU5vdGlmaWNhdGlvbkxldmVsLkluZm8sIENvbnRhY3RBdHRyaWJ1dGVzLmJpc19wcmVmaXgpO1xyXG5cclxuICAgICAgICBzd2l0Y2ggKGF0dHJpYnV0ZV9wcmVmaXhfdmFsdWUpIHtcclxuICAgICAgICAgICAgY2FzZSBiaXNfcHJlZml4LkJhcm9uOlxyXG4gICAgICAgICAgICAgICAgWHJtLk5hdmlnYXRpb24ub3BlbkFsZXJ0RGlhbG9nKHsgdGV4dDogXCJUaGlzIGlzIEJhcm9uXCIsIHRpdGxlOiBcIlRoaXMgaXMgYSBUaXRsZVwiLCBjb25maXJtQnV0dG9uTGFiZWw6IFwiQWxsIHJpZ2h0XCIgfSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Forms/ContactForm.ts\n");

/***/ }),

/***/ "./src/Forms/bis_addressbookFormQC.ts":
/*!********************************************!*\
  !*** ./src/Forms/bis_addressbookFormQC.ts ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.bis_addressbookFormQC = void 0;\r\nvar BIS_Generic_1 = __webpack_require__(/*! ../Helpers/BIS_Generic */ \"./src/Helpers/BIS_Generic.ts\");\r\nvar dataverse_gen_1 = __webpack_require__(/*! ../dataverse-gen */ \"./src/dataverse-gen/index.ts\");\r\nvar dataverse_ify_1 = __webpack_require__(/*! dataverse-ify */ \"./node_modules/dataverse-ify/lib/index.js\");\r\nvar bis_addressbookFormQC = /** @class */ (function () {\r\n    function bis_addressbookFormQC() {\r\n    }\r\n    bis_addressbookFormQC.onLoad = function (executionContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var formContext;\r\n            return __generator(this, function (_a) {\r\n                formContext = executionContext.getFormContext();\r\n                formContext.getAttribute(\"bis_createnew\" /* bis_addressbookAttributes.bis_createnew */).addOnChange(this.CreateNewOnChange);\r\n                this.SetAddressTypeSelector(executionContext);\r\n                this.CreateNewOnChange(executionContext);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    bis_addressbookFormQC.SetAddressTypeSelector = function (executionContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var serviceClient, formContext, bis_institutionRef, id, fetchXml, existingMainAddress;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        (0, dataverse_ify_1.setMetadataCache)(dataverse_gen_1.metadataCache);\r\n                        serviceClient = new dataverse_ify_1.XrmContextCdsServiceClient(Xrm.WebApi);\r\n                        formContext = executionContext.getFormContext();\r\n                        debugger;\r\n                        bis_institutionRef = formContext.getAttribute(\"bis_institution\" /* bis_addressbookAttributes.bis_institution */).getValue();\r\n                        if (!(bis_institutionRef != null)) return [3 /*break*/, 2];\r\n                        id = bis_institutionRef[0].id.replace(\"{\", \"\").replace(\"}\", \"\");\r\n                        fetchXml = \"\\n            <fetch top=\\\"1\\\">\\n                <entity name=\\\"bis_addressbook\\\">\\n                <attribute name=\\\"bis_addressbookid\\\" />\\n                <filter>\\n                    <condition attribute=\\\"bis_type\\\" operator=\\\"eq\\\" value=\\\"913600000\\\" />\\n                    <condition attribute=\\\"bis_institution\\\" operator=\\\"eq\\\" value=\\\"\".concat(id, \"\\\" />\\n                </filter>\\n                </entity>\\n            </fetch>\");\r\n                        return [4 /*yield*/, serviceClient.retrieveMultiple(fetchXml)];\r\n                    case 1:\r\n                        existingMainAddress = _a.sent();\r\n                        if (existingMainAddress.entities.length > 0) {\r\n                            debugger;\r\n                            formContext.getControl(\"bis_type\" /* bis_addressbookAttributes.bis_type */).removeOption(913600000 /* bis_addresstype.Main */);\r\n                        }\r\n                        else {\r\n                            debugger;\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    bis_addressbookFormQC.CreateNewOnChange = function (executionContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var formContext, bis_createnewValue;\r\n            return __generator(this, function (_a) {\r\n                formContext = executionContext.getFormContext();\r\n                bis_createnewValue = formContext.getAttribute(\"bis_createnew\" /* bis_addressbookAttributes.bis_createnew */).getValue();\r\n                BIS_Generic_1.BIS_Generic.setSectionVisible(formContext, \"tab_create\", \"section_addnewaddress\", bis_createnewValue);\r\n                formContext.getControl(\"bis_address\" /* bis_addressbookAttributes.bis_address */).setVisible(!bis_createnewValue);\r\n                if (bis_createnewValue) {\r\n                    formContext.getAttribute(\"bis_address\" /* bis_addressbookAttributes.bis_address */).setValue(null);\r\n                }\r\n                else {\r\n                    formContext.getAttribute(\"bis_country\" /* bis_addressbookAttributes.bis_country */).setValue(null);\r\n                    formContext.getAttribute(\"bis_state\" /* bis_addressbookAttributes.bis_state */).setValue(null);\r\n                    formContext.getAttribute(\"bis_zipcode\" /* bis_addressbookAttributes.bis_zipcode */).setValue(\"\");\r\n                    formContext.getAttribute(\"bis_city\" /* bis_addressbookAttributes.bis_city */).setValue(null);\r\n                    formContext.getAttribute(\"bis_addressline1\" /* bis_addressbookAttributes.bis_addressline1 */).setValue(\"\");\r\n                    formContext.getAttribute(\"bis_addressline2\" /* bis_addressbookAttributes.bis_addressline2 */).setValue(\"\");\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return bis_addressbookFormQC;\r\n}());\r\nexports.bis_addressbookFormQC = bis_addressbookFormQC;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRm9ybXMvYmlzX2FkZHJlc3Nib29rRm9ybVFDLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLHNHQUFxRDtBQUNyRCxrR0FBMkU7QUFDM0UsNEdBQXFGO0FBR3JGO0lBQUE7SUEyRUEsQ0FBQztJQXpFZ0IsNEJBQU0sR0FBbkIsVUFBb0IsZ0JBQXlDOzs7O2dCQUVyRCxXQUFXLEdBQUcsZ0JBQWdCLENBQUMsY0FBYyxFQUFFLENBQUM7Z0JBRXBELFdBQVcsQ0FBQyxZQUFZLCtEQUF5QyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztnQkFFdEcsSUFBSSxDQUFDLHNCQUFzQixDQUFDLGdCQUFnQixDQUFDLENBQUM7Z0JBQzlDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDOzs7O0tBQzVDO0lBRVksNENBQXNCLEdBQW5DLFVBQW9DLGdCQUF5Qzs7Ozs7O3dCQUV6RSxvQ0FBZ0IsRUFBQyw2QkFBYSxDQUFDLENBQUM7d0JBQzFCLGFBQWEsR0FBRyxJQUFJLDBDQUEwQixDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQzt3QkFDN0QsV0FBVyxHQUFHLGdCQUFnQixDQUFDLGNBQWMsRUFBRSxDQUFDO3dCQUVwRCxRQUFRLENBQUM7d0JBRUwsa0JBQWtCLEdBQXNCLFdBQVcsQ0FBQyxZQUFZLG1FQUEyQyxDQUFDLFFBQVEsRUFBRSxDQUFDOzZCQUV2SCxtQkFBa0IsSUFBSSxJQUFJLEdBQTFCLHdCQUEwQjt3QkFFdEIsRUFBRSxHQUFHLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUMsRUFBRSxDQUFDLENBQUM7d0JBQzlELFFBQVEsR0FBRyxxV0FNdUQsRUFBRSxzRkFHL0QsQ0FBQzt3QkFFZ0IscUJBQU0sYUFBYSxDQUFDLGdCQUFnQixDQUFrQixRQUFRLENBQUM7O3dCQUFyRixtQkFBbUIsR0FBRyxTQUErRDt3QkFFekYsSUFBSSxtQkFBbUIsQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTs0QkFDekMsUUFBUSxDQUFDOzRCQUNBLFdBQVcsQ0FBQyxVQUFVLHFEQUFzRSxDQUFDLFlBQVksc0NBQXNCLENBQUM7eUJBQzVJOzZCQUVEOzRCQUNJLFFBQVEsQ0FBQzt5QkFFWjs7Ozs7O0tBS1I7SUFFWSx1Q0FBaUIsR0FBOUIsVUFBK0IsZ0JBQXlDOzs7O2dCQUVoRSxXQUFXLEdBQUcsZ0JBQWdCLENBQUMsY0FBYyxFQUFFLENBQUM7Z0JBRWhELGtCQUFrQixHQUFZLFdBQVcsQ0FBQyxZQUFZLCtEQUF5QyxDQUFDLFFBQVEsRUFBRSxDQUFDO2dCQUUvRyx5QkFBVyxDQUFDLGlCQUFpQixDQUFDLFdBQVcsRUFBRSxZQUFZLEVBQUUsdUJBQXVCLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztnQkFDckcsV0FBVyxDQUFDLFVBQVUsMkRBQXNFLENBQUMsVUFBVSxDQUFDLENBQUMsa0JBQWtCLENBQUMsQ0FBQztnQkFFOUgsSUFBSSxrQkFBa0IsRUFBRTtvQkFDcEIsV0FBVyxDQUFDLFlBQVksMkRBQXVDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO2lCQUNsRjtxQkFDSTtvQkFDRCxXQUFXLENBQUMsWUFBWSwyREFBdUMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7b0JBQy9FLFdBQVcsQ0FBQyxZQUFZLHVEQUFxQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztvQkFDN0UsV0FBVyxDQUFDLFlBQVksMkRBQXVDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO29CQUM3RSxXQUFXLENBQUMsWUFBWSxxREFBb0MsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7b0JBQzVFLFdBQVcsQ0FBQyxZQUFZLHFFQUE0QyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztvQkFDbEYsV0FBVyxDQUFDLFlBQVkscUVBQTRDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO2lCQUNyRjs7OztLQUVKO0lBQ0wsNEJBQUM7QUFBRCxDQUFDO0FBM0VZLHNEQUFxQiIsInNvdXJjZXMiOlsid2VicGFjazovL0Jpcy5Db21tb24uQ1JNLy4vc3JjL0Zvcm1zL2Jpc19hZGRyZXNzYm9va0Zvcm1RQy50cz9iMjliIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJpc19hZGRyZXNzYm9vaywgYmlzX2FkZHJlc3Nib29rQXR0cmlidXRlcywgYmlzX2FkZHJlc3Nib29rRm9ybUNvbnRleHQgfSBmcm9tIFwiLi4vZGF0YXZlcnNlLWdlbi9lbnRpdGllcy9iaXNfYWRkcmVzc2Jvb2tcIjtcclxuaW1wb3J0IHsgQklTX0dlbmVyaWMgfSBmcm9tIFwiLi4vSGVscGVycy9CSVNfR2VuZXJpY1wiO1xyXG5pbXBvcnQgeyBBY2NvdW50LCBiaXNfYWRkcmVzc3R5cGUsIG1ldGFkYXRhQ2FjaGUgfSBmcm9tIFwiLi4vZGF0YXZlcnNlLWdlblwiO1xyXG5pbXBvcnQgeyBFbnRpdHksIHNldE1ldGFkYXRhQ2FjaGUsIFhybUNvbnRleHRDZHNTZXJ2aWNlQ2xpZW50IH0gZnJvbSBcImRhdGF2ZXJzZS1pZnlcIjtcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgYmlzX2FkZHJlc3Nib29rRm9ybVFDIHtcclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgb25Mb2FkKGV4ZWN1dGlvbkNvbnRleHQ6IFhybS5FdmVudHMuRXZlbnRDb250ZXh0KTogUHJvbWlzZTx2b2lkPiB7XHJcblxyXG4gICAgICAgIGxldCBmb3JtQ29udGV4dCA9IGV4ZWN1dGlvbkNvbnRleHQuZ2V0Rm9ybUNvbnRleHQoKTtcclxuXHJcbiAgICAgICAgZm9ybUNvbnRleHQuZ2V0QXR0cmlidXRlKGJpc19hZGRyZXNzYm9va0F0dHJpYnV0ZXMuYmlzX2NyZWF0ZW5ldykuYWRkT25DaGFuZ2UodGhpcy5DcmVhdGVOZXdPbkNoYW5nZSk7XHJcblxyXG4gICAgICAgIHRoaXMuU2V0QWRkcmVzc1R5cGVTZWxlY3RvcihleGVjdXRpb25Db250ZXh0KTtcclxuICAgICAgICB0aGlzLkNyZWF0ZU5ld09uQ2hhbmdlKGV4ZWN1dGlvbkNvbnRleHQpO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBTZXRBZGRyZXNzVHlwZVNlbGVjdG9yKGV4ZWN1dGlvbkNvbnRleHQ6IFhybS5FdmVudHMuRXZlbnRDb250ZXh0KTogUHJvbWlzZTx2b2lkPiB7XHJcblxyXG4gICAgICAgIHNldE1ldGFkYXRhQ2FjaGUobWV0YWRhdGFDYWNoZSk7XHJcbiAgICAgICAgY29uc3Qgc2VydmljZUNsaWVudCA9IG5ldyBYcm1Db250ZXh0Q2RzU2VydmljZUNsaWVudChYcm0uV2ViQXBpKTtcclxuICAgICAgICBsZXQgZm9ybUNvbnRleHQgPSBleGVjdXRpb25Db250ZXh0LmdldEZvcm1Db250ZXh0KCk7XHJcblxyXG4gICAgICAgIGRlYnVnZ2VyO1xyXG5cclxuICAgICAgICBsZXQgYmlzX2luc3RpdHV0aW9uUmVmOiBYcm0uTG9va3VwVmFsdWVbXSA9IGZvcm1Db250ZXh0LmdldEF0dHJpYnV0ZShiaXNfYWRkcmVzc2Jvb2tBdHRyaWJ1dGVzLmJpc19pbnN0aXR1dGlvbikuZ2V0VmFsdWUoKTtcclxuXHJcbiAgICAgICAgaWYgKGJpc19pbnN0aXR1dGlvblJlZiAhPSBudWxsKSB7XHJcblxyXG4gICAgICAgICAgICBsZXQgaWQgPSBiaXNfaW5zdGl0dXRpb25SZWZbMF0uaWQucmVwbGFjZShcIntcIixcIlwiKS5yZXBsYWNlKFwifVwiLFwiXCIpO1xyXG4gICAgICAgICAgICBsZXQgZmV0Y2hYbWwgPSBgXHJcbiAgICAgICAgICAgIDxmZXRjaCB0b3A9XCIxXCI+XHJcbiAgICAgICAgICAgICAgICA8ZW50aXR5IG5hbWU9XCJiaXNfYWRkcmVzc2Jvb2tcIj5cclxuICAgICAgICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cImJpc19hZGRyZXNzYm9va2lkXCIgLz5cclxuICAgICAgICAgICAgICAgIDxmaWx0ZXI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGNvbmRpdGlvbiBhdHRyaWJ1dGU9XCJiaXNfdHlwZVwiIG9wZXJhdG9yPVwiZXFcIiB2YWx1ZT1cIjkxMzYwMDAwMFwiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPGNvbmRpdGlvbiBhdHRyaWJ1dGU9XCJiaXNfaW5zdGl0dXRpb25cIiBvcGVyYXRvcj1cImVxXCIgdmFsdWU9XCIke2lkfVwiIC8+XHJcbiAgICAgICAgICAgICAgICA8L2ZpbHRlcj5cclxuICAgICAgICAgICAgICAgIDwvZW50aXR5PlxyXG4gICAgICAgICAgICA8L2ZldGNoPmA7XHJcblxyXG4gICAgICAgICAgICBsZXQgZXhpc3RpbmdNYWluQWRkcmVzcyA9IGF3YWl0IHNlcnZpY2VDbGllbnQucmV0cmlldmVNdWx0aXBsZTxiaXNfYWRkcmVzc2Jvb2s+KGZldGNoWG1sKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChleGlzdGluZ01haW5BZGRyZXNzLmVudGl0aWVzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgIGRlYnVnZ2VyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAoZm9ybUNvbnRleHQuZ2V0Q29udHJvbChiaXNfYWRkcmVzc2Jvb2tBdHRyaWJ1dGVzLmJpc190eXBlKSBhcyBYcm0uQ29udHJvbHMuT3B0aW9uU2V0Q29udHJvbCkucmVtb3ZlT3B0aW9uKGJpc19hZGRyZXNzdHlwZS5NYWluKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGRlYnVnZ2VyO1xyXG5cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcblxyXG5cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgQ3JlYXRlTmV3T25DaGFuZ2UoZXhlY3V0aW9uQ29udGV4dDogWHJtLkV2ZW50cy5FdmVudENvbnRleHQpOiBQcm9taXNlPHZvaWQ+IHtcclxuXHJcbiAgICAgICAgbGV0IGZvcm1Db250ZXh0ID0gZXhlY3V0aW9uQ29udGV4dC5nZXRGb3JtQ29udGV4dCgpO1xyXG5cclxuICAgICAgICBsZXQgYmlzX2NyZWF0ZW5ld1ZhbHVlOiBib29sZWFuID0gZm9ybUNvbnRleHQuZ2V0QXR0cmlidXRlKGJpc19hZGRyZXNzYm9va0F0dHJpYnV0ZXMuYmlzX2NyZWF0ZW5ldykuZ2V0VmFsdWUoKTtcclxuXHJcbiAgICAgICAgQklTX0dlbmVyaWMuc2V0U2VjdGlvblZpc2libGUoZm9ybUNvbnRleHQsIFwidGFiX2NyZWF0ZVwiLCBcInNlY3Rpb25fYWRkbmV3YWRkcmVzc1wiLCBiaXNfY3JlYXRlbmV3VmFsdWUpO1xyXG4gICAgICAgIChmb3JtQ29udGV4dC5nZXRDb250cm9sKGJpc19hZGRyZXNzYm9va0F0dHJpYnV0ZXMuYmlzX2FkZHJlc3MpIGFzIFhybS5Db250cm9scy5Mb29rdXBDb250cm9sKS5zZXRWaXNpYmxlKCFiaXNfY3JlYXRlbmV3VmFsdWUpO1xyXG5cclxuICAgICAgICBpZiAoYmlzX2NyZWF0ZW5ld1ZhbHVlKSB7XHJcbiAgICAgICAgICAgIGZvcm1Db250ZXh0LmdldEF0dHJpYnV0ZShiaXNfYWRkcmVzc2Jvb2tBdHRyaWJ1dGVzLmJpc19hZGRyZXNzKS5zZXRWYWx1ZShudWxsKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGZvcm1Db250ZXh0LmdldEF0dHJpYnV0ZShiaXNfYWRkcmVzc2Jvb2tBdHRyaWJ1dGVzLmJpc19jb3VudHJ5KS5zZXRWYWx1ZShudWxsKTtcclxuICAgICAgICAgICAgZm9ybUNvbnRleHQuZ2V0QXR0cmlidXRlKGJpc19hZGRyZXNzYm9va0F0dHJpYnV0ZXMuYmlzX3N0YXRlKS5zZXRWYWx1ZShudWxsKTtcclxuICAgICAgICAgICAgZm9ybUNvbnRleHQuZ2V0QXR0cmlidXRlKGJpc19hZGRyZXNzYm9va0F0dHJpYnV0ZXMuYmlzX3ppcGNvZGUpLnNldFZhbHVlKFwiXCIpO1xyXG4gICAgICAgICAgICBmb3JtQ29udGV4dC5nZXRBdHRyaWJ1dGUoYmlzX2FkZHJlc3Nib29rQXR0cmlidXRlcy5iaXNfY2l0eSkuc2V0VmFsdWUobnVsbCk7XHJcbiAgICAgICAgICAgIGZvcm1Db250ZXh0LmdldEF0dHJpYnV0ZShiaXNfYWRkcmVzc2Jvb2tBdHRyaWJ1dGVzLmJpc19hZGRyZXNzbGluZTEpLnNldFZhbHVlKFwiXCIpO1xyXG4gICAgICAgICAgICBmb3JtQ29udGV4dC5nZXRBdHRyaWJ1dGUoYmlzX2FkZHJlc3Nib29rQXR0cmlidXRlcy5iaXNfYWRkcmVzc2xpbmUyKS5zZXRWYWx1ZShcIlwiKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/Forms/bis_addressbookFormQC.ts\n");

/***/ }),

/***/ "./src/Forms/bis_validationForm.ts":
/*!*****************************************!*\
  !*** ./src/Forms/bis_validationForm.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.bis_validationForm = void 0;\r\nvar BIS_Generic_1 = __webpack_require__(/*! ../Helpers/BIS_Generic */ \"./src/Helpers/BIS_Generic.ts\");\r\nvar bis_validationForm = /** @class */ (function () {\r\n    function bis_validationForm() {\r\n    }\r\n    bis_validationForm.onLoad = function (executionContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var formContext;\r\n            return __generator(this, function (_a) {\r\n                formContext = executionContext.getFormContext();\r\n                formContext.getAttribute(\"bis_relatedentity\" /* bis_validationAttributes.bis_relatedentity */).addOnChange(this.showFields);\r\n                formContext.getAttribute(\"bis_relatedevent\" /* bis_validationAttributes.bis_relatedevent */).addOnChange(this.showFields);\r\n                formContext.data.entity.addOnPostSave(this.onPostSave);\r\n                this.showFields(executionContext);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    bis_validationForm.onPostSave = function (executionContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var formContext, statecodeValue, bis_relatedinstitutionRef, pageInput;\r\n            return __generator(this, function (_a) {\r\n                debugger;\r\n                formContext = executionContext.getFormContext();\r\n                statecodeValue = formContext.getAttribute(\"statecode\" /* bis_validationAttributes.statecode */).getValue();\r\n                bis_relatedinstitutionRef = formContext.getAttribute(\"bis_relatedinstitution\" /* bis_validationAttributes.bis_relatedinstitution */).getValue();\r\n                //(formContext.getControl(bis_validationAttributes.bis_relatedinstitution) as Xrm.Controls.LookupControl).getAttribute().getValue();\r\n                if (statecodeValue == 1 /* bis_validation_bis_validation_statecode.Inactive */ &&\r\n                    bis_relatedinstitutionRef != null &&\r\n                    bis_relatedinstitutionRef.length > 0) {\r\n                    pageInput = {\r\n                        pageType: \"entityrecord\",\r\n                        entityName: bis_relatedinstitutionRef[0].entityType,\r\n                        entityId: bis_relatedinstitutionRef[0].id\r\n                    };\r\n                    Xrm.Navigation.navigateTo(pageInput).then(function success() {\r\n                        // Run code on success\r\n                    }, function error(error) {\r\n                        // Handle errors\r\n                        debugger;\r\n                    });\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    bis_validationForm.showFields = function (executionContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var formContext, bis_relatedentityValue, bis_relatedeventValue, bis_duplicateexistsValue;\r\n            return __generator(this, function (_a) {\r\n                debugger;\r\n                formContext = executionContext.getFormContext();\r\n                bis_relatedentityValue = formContext.getAttribute(\"bis_relatedentity\" /* bis_validationAttributes.bis_relatedentity */).getValue();\r\n                bis_relatedeventValue = formContext.getAttribute(\"bis_relatedevent\" /* bis_validationAttributes.bis_relatedevent */).getValue();\r\n                bis_duplicateexistsValue = formContext.getAttribute(\"bis_duplicateexists\" /* bis_validationAttributes.bis_duplicateexists */).getValue();\r\n                if (bis_relatedentityValue == 913600000 /* bis_validationrelatedentity.Institution */ &&\r\n                    bis_relatedeventValue == 913600000 /* bis_validationrelatedevent.Create */) {\r\n                    BIS_Generic_1.BIS_Generic.setSectionVisible(formContext, \"tab_validation\", \"section_institutioncreate\", true);\r\n                }\r\n                if (bis_relatedentityValue == 913600000 /* bis_validationrelatedentity.Institution */ &&\r\n                    bis_duplicateexistsValue === true) {\r\n                    BIS_Generic_1.BIS_Generic.setSectionVisible(formContext, \"tab_validation\", \"section_duplicateinstitutions\", true);\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return bis_validationForm;\r\n}());\r\nexports.bis_validationForm = bis_validationForm;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRm9ybXMvYmlzX3ZhbGlkYXRpb25Gb3JtLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU9BLHNHQUFxRDtBQUdyRDtJQUFBO0lBMEVBLENBQUM7SUF4RWdCLHlCQUFNLEdBQW5CLFVBQW9CLGdCQUF5Qzs7OztnQkFFckQsV0FBVyxHQUFHLGdCQUFnQixDQUFDLGNBQWMsRUFBRSxDQUFDO2dCQUVwRCxXQUFXLENBQUMsWUFBWSxzRUFBNEMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2dCQUNsRyxXQUFXLENBQUMsWUFBWSxvRUFBMkMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2dCQUVqRyxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2dCQUV2RCxJQUFJLENBQUMsVUFBVSxDQUFDLGdCQUFnQixDQUFDLENBQUM7Ozs7S0FDckM7SUFFWSw2QkFBVSxHQUF2QixVQUF3QixnQkFBeUM7Ozs7Z0JBQzdELFFBQVEsQ0FBQztnQkFDTCxXQUFXLEdBQUcsZ0JBQWdCLENBQUMsY0FBYyxFQUFFLENBQUM7Z0JBRWhELGNBQWMsR0FBNEMsV0FBVyxDQUFDLFlBQVksc0RBQW9DLENBQUMsUUFBUSxFQUFFLENBQUM7Z0JBQ2xJLHlCQUF5QixHQUFzQixXQUFXLENBQUMsWUFBWSxnRkFBaUQsQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFFeEksb0lBQW9JO2dCQUVwSSxJQUFJLGNBQWMsNERBQW9EO29CQUNsRSx5QkFBeUIsSUFBSSxJQUFJO29CQUNqQyx5QkFBeUIsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUN0QztvQkFFTSxTQUFTLEdBQXlDO3dCQUNsRCxRQUFRLEVBQUUsY0FBYzt3QkFDeEIsVUFBVSxFQUFFLHlCQUF5QixDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVU7d0JBQ25ELFFBQVEsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO3FCQUM1QyxDQUFDO29CQUVGLEdBQUcsQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQUksQ0FDckMsU0FBUyxPQUFPO3dCQUNaLHNCQUFzQjtvQkFDMUIsQ0FBQyxFQUNELFNBQVMsS0FBSyxDQUFDLEtBQUs7d0JBQ2hCLGdCQUFnQjt3QkFDaEIsUUFBUSxDQUFDO29CQUNiLENBQUMsQ0FDSixDQUFDO2lCQUVMOzs7O0tBRUo7SUFFWSw2QkFBVSxHQUF2QixVQUF3QixnQkFBeUM7Ozs7Z0JBRXJFLFFBQVEsQ0FBQztnQkFFRyxXQUFXLEdBQUcsZ0JBQWdCLENBQUMsY0FBYyxFQUFFLENBQUM7Z0JBRWhELHNCQUFzQixHQUFnQyxXQUFXLENBQUMsWUFBWSxzRUFBNEMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFDdEkscUJBQXFCLEdBQStCLFdBQVcsQ0FBQyxZQUFZLG9FQUEyQyxDQUFDLFFBQVEsRUFBRSxDQUFDO2dCQUNuSSx3QkFBd0IsR0FBWSxXQUFXLENBQUMsWUFBWSwwRUFBOEMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFFMUgsSUFDSSxzQkFBc0IsMkRBQTJDO29CQUNqRSxxQkFBcUIscURBQXFDLEVBQzVEO29CQUNFLHlCQUFXLENBQUMsaUJBQWlCLENBQUMsV0FBVyxFQUFFLGdCQUFnQixFQUFFLDJCQUEyQixFQUFFLElBQUksQ0FBQyxDQUFDO2lCQUNuRztnQkFHRCxJQUNJLHNCQUFzQiwyREFBMkM7b0JBQ2pFLHdCQUF3QixLQUFLLElBQUksRUFDbkM7b0JBQ0UseUJBQVcsQ0FBQyxpQkFBaUIsQ0FBQyxXQUFXLEVBQUUsZ0JBQWdCLEVBQUUsK0JBQStCLEVBQUUsSUFBSSxDQUFDLENBQUM7aUJBQ3ZHOzs7O0tBQ0o7SUFFTCx5QkFBQztBQUFELENBQUM7QUExRVksZ0RBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQmlzLkNvbW1vbi5DUk0vLi9zcmMvRm9ybXMvYmlzX3ZhbGlkYXRpb25Gb3JtLnRzPzMyYjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmlzX3ZhbGlkYXRpb25fYmlzX3ZhbGlkYXRpb25fc3RhdGVjb2RlIH0gZnJvbSBcIi4uL2RhdGF2ZXJzZS1nZW5cIjtcclxuaW1wb3J0IHsgYmlzX3ZhbGlkYXRpb25BdHRyaWJ1dGVzIH0gZnJvbSBcIi4uL2RhdGF2ZXJzZS1nZW4vZW50aXRpZXMvYmlzX3ZhbGlkYXRpb25cIjtcclxuaW1wb3J0IHsgYmlzX3ZhbGlkYXRpb25yZWxhdGVkZW50aXR5IH0gZnJvbSBcIi4uL2RhdGF2ZXJzZS1nZW4vZW51bXMvYmlzX3ZhbGlkYXRpb25yZWxhdGVkZW50aXR5XCI7XHJcbmltcG9ydCB7IGJpc192YWxpZGF0aW9ucmVsYXRlZGV2ZW50IH0gZnJvbSBcIi4uL2RhdGF2ZXJzZS1nZW4vZW51bXMvYmlzX3ZhbGlkYXRpb25yZWxhdGVkZXZlbnRcIjtcclxuaW1wb3J0IHsgRW50aXR5LCBFbnRpdHlSZWZlcmVuY2UsIHNldE1ldGFkYXRhQ2FjaGUsIFhybUNvbnRleHRDZHNTZXJ2aWNlQ2xpZW50IH0gZnJvbSBcImRhdGF2ZXJzZS1pZnlcIjtcclxuaW1wb3J0IHsgYmlzX3ZhbGlkYXRpb24sIGJpc192YWxpZGF0aW9uTWV0YWRhdGEgfSBmcm9tIFwiLi4vZGF0YXZlcnNlLWdlbi9lbnRpdGllcy9iaXNfdmFsaWRhdGlvblwiO1xyXG5pbXBvcnQgeyBtZXRhZGF0YUNhY2hlIH0gZnJvbSBcIi4uL2RhdGF2ZXJzZS1nZW5cIjtcclxuaW1wb3J0IHsgQklTX0dlbmVyaWMgfSBmcm9tIFwiLi4vSGVscGVycy9CSVNfR2VuZXJpY1wiO1xyXG5cclxuXHJcbmV4cG9ydCBjbGFzcyBiaXNfdmFsaWRhdGlvbkZvcm0ge1xyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvbkxvYWQoZXhlY3V0aW9uQ29udGV4dDogWHJtLkV2ZW50cy5FdmVudENvbnRleHQpOiBQcm9taXNlPHZvaWQ+IHtcclxuXHJcbiAgICAgICAgbGV0IGZvcm1Db250ZXh0ID0gZXhlY3V0aW9uQ29udGV4dC5nZXRGb3JtQ29udGV4dCgpO1xyXG5cclxuICAgICAgICBmb3JtQ29udGV4dC5nZXRBdHRyaWJ1dGUoYmlzX3ZhbGlkYXRpb25BdHRyaWJ1dGVzLmJpc19yZWxhdGVkZW50aXR5KS5hZGRPbkNoYW5nZSh0aGlzLnNob3dGaWVsZHMpO1xyXG4gICAgICAgIGZvcm1Db250ZXh0LmdldEF0dHJpYnV0ZShiaXNfdmFsaWRhdGlvbkF0dHJpYnV0ZXMuYmlzX3JlbGF0ZWRldmVudCkuYWRkT25DaGFuZ2UodGhpcy5zaG93RmllbGRzKTtcclxuXHJcbiAgICAgICAgZm9ybUNvbnRleHQuZGF0YS5lbnRpdHkuYWRkT25Qb3N0U2F2ZSh0aGlzLm9uUG9zdFNhdmUpO1xyXG5cclxuICAgICAgICB0aGlzLnNob3dGaWVsZHMoZXhlY3V0aW9uQ29udGV4dCk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIG9uUG9zdFNhdmUoZXhlY3V0aW9uQ29udGV4dDogWHJtLkV2ZW50cy5FdmVudENvbnRleHQpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgICAgICBkZWJ1Z2dlcjtcclxuICAgICAgICBsZXQgZm9ybUNvbnRleHQgPSBleGVjdXRpb25Db250ZXh0LmdldEZvcm1Db250ZXh0KCk7XHJcblxyXG4gICAgICAgIGxldCBzdGF0ZWNvZGVWYWx1ZTogYmlzX3ZhbGlkYXRpb25fYmlzX3ZhbGlkYXRpb25fc3RhdGVjb2RlID0gZm9ybUNvbnRleHQuZ2V0QXR0cmlidXRlKGJpc192YWxpZGF0aW9uQXR0cmlidXRlcy5zdGF0ZWNvZGUpLmdldFZhbHVlKCk7XHJcbiAgICAgICAgbGV0IGJpc19yZWxhdGVkaW5zdGl0dXRpb25SZWY6IFhybS5Mb29rdXBWYWx1ZVtdID0gZm9ybUNvbnRleHQuZ2V0QXR0cmlidXRlKGJpc192YWxpZGF0aW9uQXR0cmlidXRlcy5iaXNfcmVsYXRlZGluc3RpdHV0aW9uKS5nZXRWYWx1ZSgpO1xyXG5cclxuICAgICAgICAvLyhmb3JtQ29udGV4dC5nZXRDb250cm9sKGJpc192YWxpZGF0aW9uQXR0cmlidXRlcy5iaXNfcmVsYXRlZGluc3RpdHV0aW9uKSBhcyBYcm0uQ29udHJvbHMuTG9va3VwQ29udHJvbCkuZ2V0QXR0cmlidXRlKCkuZ2V0VmFsdWUoKTtcclxuXHJcbiAgICAgICAgaWYgKHN0YXRlY29kZVZhbHVlID09IGJpc192YWxpZGF0aW9uX2Jpc192YWxpZGF0aW9uX3N0YXRlY29kZS5JbmFjdGl2ZSAmJlxyXG4gICAgICAgICAgICBiaXNfcmVsYXRlZGluc3RpdHV0aW9uUmVmICE9IG51bGwgJiZcclxuICAgICAgICAgICAgYmlzX3JlbGF0ZWRpbnN0aXR1dGlvblJlZi5sZW5ndGggPiAwXHJcbiAgICAgICAgKSB7XHJcblxyXG4gICAgICAgICAgICBsZXQgcGFnZUlucHV0OiBYcm0uTmF2aWdhdGlvbi5QYWdlSW5wdXRFbnRpdHlSZWNvcmQgPSB7XHJcbiAgICAgICAgICAgICAgICBwYWdlVHlwZTogXCJlbnRpdHlyZWNvcmRcIixcclxuICAgICAgICAgICAgICAgIGVudGl0eU5hbWU6IGJpc19yZWxhdGVkaW5zdGl0dXRpb25SZWZbMF0uZW50aXR5VHlwZSxcclxuICAgICAgICAgICAgICAgIGVudGl0eUlkOiBiaXNfcmVsYXRlZGluc3RpdHV0aW9uUmVmWzBdLmlkXHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICBYcm0uTmF2aWdhdGlvbi5uYXZpZ2F0ZVRvKHBhZ2VJbnB1dCkudGhlbihcclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHN1Y2Nlc3MoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gUnVuIGNvZGUgb24gc3VjY2Vzc1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGVycm9yKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gSGFuZGxlIGVycm9yc1xyXG4gICAgICAgICAgICAgICAgICAgIGRlYnVnZ2VyO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICApO1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBzaG93RmllbGRzKGV4ZWN1dGlvbkNvbnRleHQ6IFhybS5FdmVudHMuRXZlbnRDb250ZXh0KTogUHJvbWlzZTx2b2lkPiB7XHJcblxyXG5kZWJ1Z2dlcjtcclxuXHJcbiAgICAgICAgbGV0IGZvcm1Db250ZXh0ID0gZXhlY3V0aW9uQ29udGV4dC5nZXRGb3JtQ29udGV4dCgpO1xyXG5cclxuICAgICAgICBsZXQgYmlzX3JlbGF0ZWRlbnRpdHlWYWx1ZTogYmlzX3ZhbGlkYXRpb25yZWxhdGVkZW50aXR5ID0gZm9ybUNvbnRleHQuZ2V0QXR0cmlidXRlKGJpc192YWxpZGF0aW9uQXR0cmlidXRlcy5iaXNfcmVsYXRlZGVudGl0eSkuZ2V0VmFsdWUoKTtcclxuICAgICAgICBsZXQgYmlzX3JlbGF0ZWRldmVudFZhbHVlOiBiaXNfdmFsaWRhdGlvbnJlbGF0ZWRldmVudCA9IGZvcm1Db250ZXh0LmdldEF0dHJpYnV0ZShiaXNfdmFsaWRhdGlvbkF0dHJpYnV0ZXMuYmlzX3JlbGF0ZWRldmVudCkuZ2V0VmFsdWUoKTtcclxuICAgICAgICBsZXQgYmlzX2R1cGxpY2F0ZWV4aXN0c1ZhbHVlOiBib29sZWFuID0gZm9ybUNvbnRleHQuZ2V0QXR0cmlidXRlKGJpc192YWxpZGF0aW9uQXR0cmlidXRlcy5iaXNfZHVwbGljYXRlZXhpc3RzKS5nZXRWYWx1ZSgpO1xyXG5cclxuICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgIGJpc19yZWxhdGVkZW50aXR5VmFsdWUgPT0gYmlzX3ZhbGlkYXRpb25yZWxhdGVkZW50aXR5Lkluc3RpdHV0aW9uICYmXHJcbiAgICAgICAgICAgIGJpc19yZWxhdGVkZXZlbnRWYWx1ZSA9PSBiaXNfdmFsaWRhdGlvbnJlbGF0ZWRldmVudC5DcmVhdGVcclxuICAgICAgICApIHtcclxuICAgICAgICAgICAgQklTX0dlbmVyaWMuc2V0U2VjdGlvblZpc2libGUoZm9ybUNvbnRleHQsIFwidGFiX3ZhbGlkYXRpb25cIiwgXCJzZWN0aW9uX2luc3RpdHV0aW9uY3JlYXRlXCIsIHRydWUpO1xyXG4gICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgIGlmIChcclxuICAgICAgICAgICAgYmlzX3JlbGF0ZWRlbnRpdHlWYWx1ZSA9PSBiaXNfdmFsaWRhdGlvbnJlbGF0ZWRlbnRpdHkuSW5zdGl0dXRpb24gJiZcclxuICAgICAgICAgICAgYmlzX2R1cGxpY2F0ZWV4aXN0c1ZhbHVlID09PSB0cnVlXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIEJJU19HZW5lcmljLnNldFNlY3Rpb25WaXNpYmxlKGZvcm1Db250ZXh0LCBcInRhYl92YWxpZGF0aW9uXCIsIFwic2VjdGlvbl9kdXBsaWNhdGVpbnN0aXR1dGlvbnNcIiwgdHJ1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Forms/bis_validationForm.ts\n");

/***/ }),

/***/ "./src/Helpers/BIS_Generic.ts":
/*!************************************!*\
  !*** ./src/Helpers/BIS_Generic.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BIS_Generic = void 0;\r\nvar BIS_Generic = /** @class */ (function () {\r\n    function BIS_Generic() {\r\n    }\r\n    BIS_Generic.setSectionVisible = function (formContext, tabName, sectionName, isVisible) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tabObj, sectionObj;\r\n            return __generator(this, function (_a) {\r\n                tabObj = formContext.ui.tabs.get(tabName);\r\n                if (tabObj != null) {\r\n                    sectionObj = tabObj.sections.get(sectionName);\r\n                    if (sectionObj != null) {\r\n                        sectionObj.setVisible(isVisible);\r\n                    }\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return BIS_Generic;\r\n}());\r\nexports.BIS_Generic = BIS_Generic;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvSGVscGVycy9CSVNfR2VuZXJpYy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtJQUFBO0lBWUEsQ0FBQztJQVZnQiw2QkFBaUIsR0FBOUIsVUFBK0IsV0FBNEIsRUFBRSxPQUFlLEVBQUUsV0FBbUIsRUFBRSxTQUFrQjs7OztnQkFFN0csTUFBTSxHQUFHLFdBQVcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDOUMsSUFBSSxNQUFNLElBQUksSUFBSSxFQUFFO29CQUNaLFVBQVUsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztvQkFDbEQsSUFBSSxVQUFVLElBQUksSUFBSSxFQUFFO3dCQUNwQixVQUFVLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDO3FCQUNwQztpQkFDSjs7OztLQUNKO0lBQ0wsa0JBQUM7QUFBRCxDQUFDO0FBWlksa0NBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL3NyYy9IZWxwZXJzL0JJU19HZW5lcmljLnRzPzM1NzkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEJJU19HZW5lcmljIHtcclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgc2V0U2VjdGlvblZpc2libGUoZm9ybUNvbnRleHQ6IFhybS5Gb3JtQ29udGV4dCwgdGFiTmFtZTogc3RyaW5nLCBzZWN0aW9uTmFtZTogc3RyaW5nLCBpc1Zpc2libGU6IGJvb2xlYW4pOiBQcm9taXNlPHZvaWQ+IHtcclxuXHJcbiAgICAgICAgbGV0IHRhYk9iaiA9IGZvcm1Db250ZXh0LnVpLnRhYnMuZ2V0KHRhYk5hbWUpO1xyXG4gICAgICAgIGlmICh0YWJPYmogIT0gbnVsbCkge1xyXG4gICAgICAgICAgICBsZXQgc2VjdGlvbk9iaiA9IHRhYk9iai5zZWN0aW9ucy5nZXQoc2VjdGlvbk5hbWUpO1xyXG4gICAgICAgICAgICBpZiAoc2VjdGlvbk9iaiAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICBzZWN0aW9uT2JqLnNldFZpc2libGUoaXNWaXNpYmxlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/Helpers/BIS_Generic.ts\n");

/***/ }),

/***/ "./src/Ribbons/AccountRibbon.ts":
/*!**************************************!*\
  !*** ./src/Ribbons/AccountRibbon.ts ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AccountRibbon = void 0;\r\nvar dataverse_ify_1 = __webpack_require__(/*! dataverse-ify */ \"./node_modules/dataverse-ify/lib/index.js\");\r\nvar bis_validation_1 = __webpack_require__(/*! ../dataverse-gen/entities/bis_validation */ \"./src/dataverse-gen/entities/bis_validation.ts\");\r\nvar dataverse_gen_1 = __webpack_require__(/*! ../dataverse-gen */ \"./src/dataverse-gen/index.ts\");\r\nvar AccountRibbon = /** @class */ (function () {\r\n    function AccountRibbon() {\r\n    }\r\n    AccountRibbon.createNew_bis_validation = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var serviceClient, bis_validationObj, createdRecordId, pageInput;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        debugger;\r\n                        (0, dataverse_ify_1.setMetadataCache)(dataverse_gen_1.metadataCache);\r\n                        serviceClient = new dataverse_ify_1.XrmContextCdsServiceClient(Xrm.WebApi);\r\n                        bis_validationObj = {\r\n                            logicalName: bis_validation_1.bis_validationMetadata.logicalName,\r\n                            bis_relatedentity: 913600000 /* bis_validationrelatedentity.Institution */,\r\n                            bis_relatedevent: 913600000 /* bis_validationrelatedevent.Create */\r\n                        };\r\n                        return [4 /*yield*/, serviceClient.create(bis_validationObj)];\r\n                    case 1:\r\n                        createdRecordId = _a.sent();\r\n                        pageInput = {\r\n                            pageType: \"entityrecord\",\r\n                            entityName: bis_validation_1.bis_validationMetadata.logicalName,\r\n                            entityId: createdRecordId\r\n                        };\r\n                        Xrm.Navigation.navigateTo(pageInput).then(function success() {\r\n                            // Run code on success\r\n                        }, function error(error) {\r\n                            // Handle errors\r\n                            debugger;\r\n                        });\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return AccountRibbon;\r\n}());\r\nexports.AccountRibbon = AccountRibbon;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvUmliYm9ucy9BY2NvdW50UmliYm9uLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDRHQUFxRjtBQUNyRiw2SUFBa0c7QUFHbEcsa0dBQWlEO0FBRWpEO0lBQUE7SUFtQ0EsQ0FBQztJQWpDZ0Isc0NBQXdCLEdBQXJDOzs7Ozs7d0JBRUksUUFBUSxDQUFDO3dCQUVULG9DQUFnQixFQUFDLDZCQUFhLENBQUMsQ0FBQzt3QkFDMUIsYUFBYSxHQUFHLElBQUksMENBQTBCLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO3dCQUUzRCxpQkFBaUIsR0FBRzs0QkFDdEIsV0FBVyxFQUFFLHVDQUFzQixDQUFDLFdBQVc7NEJBQy9DLGlCQUFpQix5REFBeUM7NEJBQzFELGdCQUFnQixtREFBbUM7eUJBQ3BDLENBQUM7d0JBRUUscUJBQU0sYUFBYSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQzs7d0JBQS9ELGVBQWUsR0FBRyxTQUE2Qzt3QkFFL0QsU0FBUyxHQUF5Qzs0QkFDbEQsUUFBUSxFQUFFLGNBQWM7NEJBQ3hCLFVBQVUsRUFBRSx1Q0FBc0IsQ0FBQyxXQUFXOzRCQUM5QyxRQUFRLEVBQUUsZUFBZTt5QkFDNUIsQ0FBQzt3QkFFRixHQUFHLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQ3JDLFNBQVMsT0FBTzs0QkFDWixzQkFBc0I7d0JBQzFCLENBQUMsRUFDRCxTQUFTLEtBQUssQ0FBQyxLQUFLOzRCQUNoQixnQkFBZ0I7NEJBQ2hCLFFBQVEsQ0FBQzt3QkFDYixDQUFDLENBQ0osQ0FBQzs7Ozs7S0FFTDtJQUVMLG9CQUFDO0FBQUQsQ0FBQztBQW5DWSxzQ0FBYSIsInNvdXJjZXMiOlsid2VicGFjazovL0Jpcy5Db21tb24uQ1JNLy4vc3JjL1JpYmJvbnMvQWNjb3VudFJpYmJvbi50cz81YmIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVudGl0eSwgc2V0TWV0YWRhdGFDYWNoZSwgWHJtQ29udGV4dENkc1NlcnZpY2VDbGllbnQgfSBmcm9tIFwiZGF0YXZlcnNlLWlmeVwiO1xyXG5pbXBvcnQgeyBiaXNfdmFsaWRhdGlvbiwgYmlzX3ZhbGlkYXRpb25NZXRhZGF0YSB9IGZyb20gXCIuLi9kYXRhdmVyc2UtZ2VuL2VudGl0aWVzL2Jpc192YWxpZGF0aW9uXCI7XHJcbmltcG9ydCB7IGJpc192YWxpZGF0aW9ucmVsYXRlZGVudGl0eSB9IGZyb20gXCIuLi9kYXRhdmVyc2UtZ2VuL2VudW1zL2Jpc192YWxpZGF0aW9ucmVsYXRlZGVudGl0eVwiO1xyXG5pbXBvcnQgeyBiaXNfdmFsaWRhdGlvbnJlbGF0ZWRldmVudCB9IGZyb20gXCIuLi9kYXRhdmVyc2UtZ2VuL2VudW1zL2Jpc192YWxpZGF0aW9ucmVsYXRlZGV2ZW50XCI7XHJcbmltcG9ydCB7IG1ldGFkYXRhQ2FjaGUgfSBmcm9tIFwiLi4vZGF0YXZlcnNlLWdlblwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEFjY291bnRSaWJib24ge1xyXG5cclxuICAgIHN0YXRpYyBhc3luYyBjcmVhdGVOZXdfYmlzX3ZhbGlkYXRpb24oKSB7XHJcblxyXG4gICAgICAgIGRlYnVnZ2VyO1xyXG5cclxuICAgICAgICBzZXRNZXRhZGF0YUNhY2hlKG1ldGFkYXRhQ2FjaGUpO1xyXG4gICAgICAgIGNvbnN0IHNlcnZpY2VDbGllbnQgPSBuZXcgWHJtQ29udGV4dENkc1NlcnZpY2VDbGllbnQoWHJtLldlYkFwaSk7XHJcblxyXG4gICAgICAgIGNvbnN0IGJpc192YWxpZGF0aW9uT2JqID0ge1xyXG4gICAgICAgICAgICBsb2dpY2FsTmFtZTogYmlzX3ZhbGlkYXRpb25NZXRhZGF0YS5sb2dpY2FsTmFtZSxcclxuICAgICAgICAgICAgYmlzX3JlbGF0ZWRlbnRpdHk6IGJpc192YWxpZGF0aW9ucmVsYXRlZGVudGl0eS5JbnN0aXR1dGlvbixcclxuICAgICAgICAgICAgYmlzX3JlbGF0ZWRldmVudDogYmlzX3ZhbGlkYXRpb25yZWxhdGVkZXZlbnQuQ3JlYXRlXHJcbiAgICAgICAgfSBhcyBiaXNfdmFsaWRhdGlvbjtcclxuXHJcbiAgICAgICAgbGV0IGNyZWF0ZWRSZWNvcmRJZCA9IGF3YWl0IHNlcnZpY2VDbGllbnQuY3JlYXRlKGJpc192YWxpZGF0aW9uT2JqKTtcclxuXHJcbiAgICAgICAgbGV0IHBhZ2VJbnB1dDogWHJtLk5hdmlnYXRpb24uUGFnZUlucHV0RW50aXR5UmVjb3JkID0ge1xyXG4gICAgICAgICAgICBwYWdlVHlwZTogXCJlbnRpdHlyZWNvcmRcIixcclxuICAgICAgICAgICAgZW50aXR5TmFtZTogYmlzX3ZhbGlkYXRpb25NZXRhZGF0YS5sb2dpY2FsTmFtZSxcclxuICAgICAgICAgICAgZW50aXR5SWQ6IGNyZWF0ZWRSZWNvcmRJZFxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIFhybS5OYXZpZ2F0aW9uLm5hdmlnYXRlVG8ocGFnZUlucHV0KS50aGVuKFxyXG4gICAgICAgICAgICBmdW5jdGlvbiBzdWNjZXNzKCkge1xyXG4gICAgICAgICAgICAgICAgLy8gUnVuIGNvZGUgb24gc3VjY2Vzc1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBmdW5jdGlvbiBlcnJvcihlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgLy8gSGFuZGxlIGVycm9yc1xyXG4gICAgICAgICAgICAgICAgZGVidWdnZXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICApO1xyXG5cclxuICAgIH1cclxuXHJcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Ribbons/AccountRibbon.ts\n");

/***/ }),

/***/ "./src/dataverse-gen/entities/Account.ts":
/*!***********************************************!*\
  !*** ./src/dataverse-gen/entities/Account.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.accountMetadata = void 0;\r\n// Entity Account\r\nexports.accountMetadata = {\r\n    typeName: \"mscrm.account\",\r\n    logicalName: \"account\",\r\n    collectionName: \"accounts\",\r\n    primaryIdAttribute: \"accountid\",\r\n    attributeTypes: {\r\n        // Numeric Types\r\n        address1_latitude: \"Double\",\r\n        address1_longitude: \"Double\",\r\n        address1_utcoffset: \"Integer\",\r\n        address2_latitude: \"Double\",\r\n        address2_longitude: \"Double\",\r\n        address2_utcoffset: \"Integer\",\r\n        aging30: \"Money\",\r\n        aging30_base: \"Money\",\r\n        aging60: \"Money\",\r\n        aging60_base: \"Money\",\r\n        aging90: \"Money\",\r\n        aging90_base: \"Money\",\r\n        bis_cisid: \"Integer\",\r\n        bis_dwhid: \"Integer\",\r\n        bis_emsid: \"Integer\",\r\n        creditlimit: \"Money\",\r\n        creditlimit_base: \"Money\",\r\n        entityimage_timestamp: \"BigInt\",\r\n        exchangerate: \"Decimal\",\r\n        importsequencenumber: \"Integer\",\r\n        marketcap: \"Money\",\r\n        marketcap_base: \"Money\",\r\n        numberofemployees: \"Integer\",\r\n        onholdtime: \"Integer\",\r\n        opendeals: \"Integer\",\r\n        opendeals_state: \"Integer\",\r\n        openrevenue: \"Money\",\r\n        openrevenue_base: \"Money\",\r\n        openrevenue_state: \"Integer\",\r\n        revenue: \"Money\",\r\n        revenue_base: \"Money\",\r\n        sharesoutstanding: \"Integer\",\r\n        teamsfollowed: \"Integer\",\r\n        timezoneruleversionnumber: \"Integer\",\r\n        utcconversiontimezonecode: \"Integer\",\r\n        versionnumber: \"BigInt\",\r\n        // Optionsets\r\n        accountcategorycode: \"Optionset\",\r\n        accountclassificationcode: \"Optionset\",\r\n        accountratingcode: \"Optionset\",\r\n        address1_addresstypecode: \"Optionset\",\r\n        address1_freighttermscode: \"Optionset\",\r\n        address1_shippingmethodcode: \"Optionset\",\r\n        address2_addresstypecode: \"Optionset\",\r\n        address2_freighttermscode: \"Optionset\",\r\n        address2_shippingmethodcode: \"Optionset\",\r\n        bis_creationsource: \"Optionset\",\r\n        bis_isrstatus: \"Optionset\",\r\n        bis_partyfunction: \"Optionset\",\r\n        businesstypecode: \"Optionset\",\r\n        customersizecode: \"Optionset\",\r\n        customertypecode: \"Optionset\",\r\n        industrycode: \"Optionset\",\r\n        msevtmgt_hotelgroup: \"Optionset\",\r\n        msevtmgt_rentalcarprovider: \"Optionset\",\r\n        ownershipcode: \"Optionset\",\r\n        paymenttermscode: \"Optionset\",\r\n        preferredappointmentdaycode: \"Optionset\",\r\n        preferredappointmenttimecode: \"Optionset\",\r\n        preferredcontactmethodcode: \"Optionset\",\r\n        shippingmethodcode: \"Optionset\",\r\n        statecode: \"Optionset\",\r\n        statuscode: \"Optionset\",\r\n        territorycode: \"Optionset\",\r\n        // Date Formats\r\n        bis_isrlastevaluationdate: \"DateOnly:UserLocal\",\r\n        createdon: \"DateAndTime:UserLocal\",\r\n        lastonholdtime: \"DateAndTime:UserLocal\",\r\n        lastusedincampaign: \"DateOnly:UserLocal\",\r\n        modifiedon: \"DateAndTime:UserLocal\",\r\n        opendeals_date: \"DateAndTime:UserLocal\",\r\n        openrevenue_date: \"DateAndTime:UserLocal\",\r\n        overriddencreatedon: \"DateOnly:UserLocal\",\r\n    },\r\n    navigation: {\r\n        bis_area: [\"mscrm.bis_area\"],\r\n        bis_backuprelationshipmanager: [\"mscrm.systemuser\"],\r\n        bis_domain: [\"mscrm.bis_domain\"],\r\n        bis_institutiontype: [\"mscrm.bis_institutiontype\"],\r\n        bis_relationshipmanager1: [\"mscrm.systemuser\"],\r\n        bis_relationshipmanager2: [\"mscrm.systemuser\"],\r\n        createdby: [\"mscrm.systemuser\"],\r\n        createdonbehalfby: [\"mscrm.systemuser\"],\r\n        defaultpricelevelid: [\"mscrm.pricelevel\"],\r\n        masterid: [\"mscrm.account\"],\r\n        modifiedby: [\"mscrm.systemuser\"],\r\n        modifiedonbehalfby: [\"mscrm.systemuser\"],\r\n        msdyn_salesaccelerationinsightid: [\"mscrm.msdyn_salesaccelerationinsight\"],\r\n        msdyn_segmentid: [\"mscrm.msdyn_segment\"],\r\n        originatingleadid: [\"mscrm.lead\"],\r\n        ownerid: [\"mscrm.principal\"],\r\n        owningbusinessunit: [\"mscrm.businessunit\"],\r\n        owningteam: [\"mscrm.team\"],\r\n        owninguser: [\"mscrm.systemuser\"],\r\n        parentaccountid: [\"mscrm.account\"],\r\n        preferredequipmentid: [\"mscrm.equipment\"],\r\n        preferredserviceid: [\"mscrm.service\"],\r\n        preferredsystemuserid: [\"mscrm.systemuser\"],\r\n        primarycontactid: [\"mscrm.contact\"],\r\n        sla_account_sla: [\"mscrm.sla\"],\r\n        stageid_processstage: [\"mscrm.processstage\"],\r\n        territoryid: [\"mscrm.territory\"],\r\n        transactioncurrencyid: [\"mscrm.transactioncurrency\"],\r\n        slainvokedid: [\"sla\"],\r\n    },\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/dataverse-gen/entities/Account.ts\n");

/***/ }),

/***/ "./src/dataverse-gen/entities/Contact.ts":
/*!***********************************************!*\
  !*** ./src/dataverse-gen/entities/Contact.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.contactMetadata = void 0;\r\n// Entity Contact\r\nexports.contactMetadata = {\r\n    typeName: \"mscrm.contact\",\r\n    logicalName: \"contact\",\r\n    collectionName: \"contacts\",\r\n    primaryIdAttribute: \"contactid\",\r\n    attributeTypes: {\r\n        // Numeric Types\r\n        address1_latitude: \"Double\",\r\n        address1_longitude: \"Double\",\r\n        address1_utcoffset: \"Integer\",\r\n        address2_latitude: \"Double\",\r\n        address2_longitude: \"Double\",\r\n        address2_utcoffset: \"Integer\",\r\n        address3_latitude: \"Double\",\r\n        address3_longitude: \"Double\",\r\n        address3_utcoffset: \"Integer\",\r\n        aging30: \"Money\",\r\n        aging30_base: \"Money\",\r\n        aging60: \"Money\",\r\n        aging60_base: \"Money\",\r\n        aging90: \"Money\",\r\n        aging90_base: \"Money\",\r\n        annualincome: \"Money\",\r\n        annualincome_base: \"Money\",\r\n        bis_cisid: \"Integer\",\r\n        creditlimit: \"Money\",\r\n        creditlimit_base: \"Money\",\r\n        entityimage_timestamp: \"BigInt\",\r\n        exchangerate: \"Decimal\",\r\n        importsequencenumber: \"Integer\",\r\n        numberofchildren: \"Integer\",\r\n        onholdtime: \"Integer\",\r\n        teamsfollowed: \"Integer\",\r\n        timezoneruleversionnumber: \"Integer\",\r\n        utcconversiontimezonecode: \"Integer\",\r\n        versionnumber: \"BigInt\",\r\n        // Optionsets\r\n        accountrolecode: \"Optionset\",\r\n        address1_addresstypecode: \"Optionset\",\r\n        address1_freighttermscode: \"Optionset\",\r\n        address1_shippingmethodcode: \"Optionset\",\r\n        address2_addresstypecode: \"Optionset\",\r\n        address2_freighttermscode: \"Optionset\",\r\n        address2_shippingmethodcode: \"Optionset\",\r\n        address3_addresstypecode: \"Optionset\",\r\n        address3_freighttermscode: \"Optionset\",\r\n        address3_shippingmethodcode: \"Optionset\",\r\n        bis_contacttype: \"Optionset\",\r\n        bis_cpmifieldofexpertise: \"Optionset\",\r\n        bis_creationsource: \"Optionset\",\r\n        bis_languagespoken: \"MultiSelect\",\r\n        bis_prefix: \"Optionset\",\r\n        bis_salutation: \"Optionset\",\r\n        customersizecode: \"Optionset\",\r\n        customertypecode: \"Optionset\",\r\n        educationcode: \"Optionset\",\r\n        familystatuscode: \"Optionset\",\r\n        gendercode: \"Optionset\",\r\n        haschildrencode: \"Optionset\",\r\n        leadsourcecode: \"Optionset\",\r\n        msdyn_orgchangestatus: \"Optionset\",\r\n        msgdpr_gdprconsent: \"Optionset\",\r\n        paymenttermscode: \"Optionset\",\r\n        preferredappointmentdaycode: \"Optionset\",\r\n        preferredappointmenttimecode: \"Optionset\",\r\n        preferredcontactmethodcode: \"Optionset\",\r\n        shippingmethodcode: \"Optionset\",\r\n        statecode: \"Optionset\",\r\n        statuscode: \"Optionset\",\r\n        territorycode: \"Optionset\",\r\n        // Date Formats\r\n        anniversary: \"DateOnly:DateOnly\",\r\n        birthdate: \"DateOnly:DateOnly\",\r\n        bis_embargorespecttrackdate: \"DateOnly:UserLocal\",\r\n        bis_tcsignaturedate: \"DateOnly:UserLocal\",\r\n        createdon: \"DateAndTime:UserLocal\",\r\n        lastonholdtime: \"DateAndTime:UserLocal\",\r\n        lastusedincampaign: \"DateOnly:UserLocal\",\r\n        modifiedon: \"DateAndTime:UserLocal\",\r\n        overriddencreatedon: \"DateOnly:UserLocal\",\r\n    },\r\n    navigation: {\r\n        bis_activity: [\"mscrm.contact\"],\r\n        bis_activitycategory: [\"mscrm.bis_activitycategory\"],\r\n        bis_activitysubcategory: [\"mscrm.contact\"],\r\n        bis_bankingfunction: [\"mscrm.bis_bankingfunction\"],\r\n        bis_contingencyarrangements: [\"mscrm.bis_contingencyarrangement\"],\r\n        bis_cpmiinternalcontact: [\"mscrm.contact\"],\r\n        bis_institutiongroup: [\"mscrm.bis_institutiongroup\"],\r\n        bis_nationality: [\"mscrm.bis_nationality\"],\r\n        bis_parentinstitution: [\"mscrm.account\"],\r\n        bis_ranking: [\"mscrm.bis_ranking\"],\r\n        bis_reportsto: [\"mscrm.contact\"],\r\n        createdby: [\"mscrm.systemuser\"],\r\n        createdonbehalfby: [\"mscrm.systemuser\"],\r\n        defaultpricelevelid: [\"mscrm.pricelevel\"],\r\n        masterid: [\"mscrm.contact\"],\r\n        modifiedby: [\"mscrm.systemuser\"],\r\n        modifiedonbehalfby: [\"mscrm.systemuser\"],\r\n        msdyn_segmentid: [\"mscrm.msdyn_segment\"],\r\n        msdyncrm_ContactId: [\"mscrm.msdyncrm_quicksendemail\"],\r\n        msdyncrm_SegmentMemberId: [\"mscrm.msdyncrm_segment\"],\r\n        msdyncrm_customerjourneyid: [\"mscrm.msdyncrm_customerjourney\"],\r\n        msdyncrm_emailid: [\"mscrm.msdyncrm_marketingemail\"],\r\n        msdyncrm_marketingformid: [\"mscrm.msdyncrm_marketingform\"],\r\n        msdyncrm_marketingpageid: [\"mscrm.msdyncrm_marketingpage\"],\r\n        msevtmgt_ContactId: [\"mscrm.msevtmgt_checkin\"],\r\n        msevtmgt_originatingeventid: [\"mscrm.msevtmgt_event\"],\r\n        msgdpr_GDPRParentId: [\"mscrm.contact\"],\r\n        msgdpr_consentchangesourceformId: [\"mscrm.msdyncrm_marketingform\"],\r\n        originatingleadid: [\"mscrm.lead\"],\r\n        ownerid: [\"mscrm.principal\"],\r\n        owningbusinessunit: [\"mscrm.businessunit\"],\r\n        owningteam: [\"mscrm.team\"],\r\n        owninguser: [\"mscrm.systemuser\"],\r\n        preferredequipmentid: [\"mscrm.equipment\"],\r\n        preferredserviceid: [\"mscrm.service\"],\r\n        preferredsystemuserid: [\"mscrm.systemuser\"],\r\n        sla_contact_sla: [\"mscrm.sla\"],\r\n        stageid_processstage: [\"mscrm.processstage\"],\r\n        transactioncurrencyid: [\"mscrm.transactioncurrency\"],\r\n        parentcustomerid: [\"account\", \"contact\"],\r\n        slainvokedid: [\"sla\"],\r\n    },\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YXZlcnNlLWdlbi9lbnRpdGllcy9Db250YWN0LnRzLmpzIiwibWFwcGluZ3MiOiI7OztBQXc3Q0EsaUJBQWlCO0FBQ0osdUJBQWUsR0FBRztJQUM3QixRQUFRLEVBQUUsZUFBZTtJQUN6QixXQUFXLEVBQUUsU0FBUztJQUN0QixjQUFjLEVBQUUsVUFBVTtJQUMxQixrQkFBa0IsRUFBRSxXQUFXO0lBQy9CLGNBQWMsRUFBRTtRQUNkLGdCQUFnQjtRQUNoQixpQkFBaUIsRUFBRSxRQUFRO1FBQzNCLGtCQUFrQixFQUFFLFFBQVE7UUFDNUIsa0JBQWtCLEVBQUUsU0FBUztRQUM3QixpQkFBaUIsRUFBRSxRQUFRO1FBQzNCLGtCQUFrQixFQUFFLFFBQVE7UUFDNUIsa0JBQWtCLEVBQUUsU0FBUztRQUM3QixpQkFBaUIsRUFBRSxRQUFRO1FBQzNCLGtCQUFrQixFQUFFLFFBQVE7UUFDNUIsa0JBQWtCLEVBQUUsU0FBUztRQUM3QixPQUFPLEVBQUUsT0FBTztRQUNoQixZQUFZLEVBQUUsT0FBTztRQUNyQixPQUFPLEVBQUUsT0FBTztRQUNoQixZQUFZLEVBQUUsT0FBTztRQUNyQixPQUFPLEVBQUUsT0FBTztRQUNoQixZQUFZLEVBQUUsT0FBTztRQUNyQixZQUFZLEVBQUUsT0FBTztRQUNyQixpQkFBaUIsRUFBRSxPQUFPO1FBQzFCLFNBQVMsRUFBRSxTQUFTO1FBQ3BCLFdBQVcsRUFBRSxPQUFPO1FBQ3BCLGdCQUFnQixFQUFFLE9BQU87UUFDekIscUJBQXFCLEVBQUUsUUFBUTtRQUMvQixZQUFZLEVBQUUsU0FBUztRQUN2QixvQkFBb0IsRUFBRSxTQUFTO1FBQy9CLGdCQUFnQixFQUFFLFNBQVM7UUFDM0IsVUFBVSxFQUFFLFNBQVM7UUFDckIsYUFBYSxFQUFFLFNBQVM7UUFDeEIseUJBQXlCLEVBQUUsU0FBUztRQUNwQyx5QkFBeUIsRUFBRSxTQUFTO1FBQ3BDLGFBQWEsRUFBRSxRQUFRO1FBQ3ZCLGFBQWE7UUFDYixlQUFlLEVBQUUsV0FBVztRQUM1Qix3QkFBd0IsRUFBRSxXQUFXO1FBQ3JDLHlCQUF5QixFQUFFLFdBQVc7UUFDdEMsMkJBQTJCLEVBQUUsV0FBVztRQUN4Qyx3QkFBd0IsRUFBRSxXQUFXO1FBQ3JDLHlCQUF5QixFQUFFLFdBQVc7UUFDdEMsMkJBQTJCLEVBQUUsV0FBVztRQUN4Qyx3QkFBd0IsRUFBRSxXQUFXO1FBQ3JDLHlCQUF5QixFQUFFLFdBQVc7UUFDdEMsMkJBQTJCLEVBQUUsV0FBVztRQUN4QyxlQUFlLEVBQUUsV0FBVztRQUM1Qix3QkFBd0IsRUFBRSxXQUFXO1FBQ3JDLGtCQUFrQixFQUFFLFdBQVc7UUFDL0Isa0JBQWtCLEVBQUUsYUFBYTtRQUNqQyxVQUFVLEVBQUUsV0FBVztRQUN2QixjQUFjLEVBQUUsV0FBVztRQUMzQixnQkFBZ0IsRUFBRSxXQUFXO1FBQzdCLGdCQUFnQixFQUFFLFdBQVc7UUFDN0IsYUFBYSxFQUFFLFdBQVc7UUFDMUIsZ0JBQWdCLEVBQUUsV0FBVztRQUM3QixVQUFVLEVBQUUsV0FBVztRQUN2QixlQUFlLEVBQUUsV0FBVztRQUM1QixjQUFjLEVBQUUsV0FBVztRQUMzQixxQkFBcUIsRUFBRSxXQUFXO1FBQ2xDLGtCQUFrQixFQUFFLFdBQVc7UUFDL0IsZ0JBQWdCLEVBQUUsV0FBVztRQUM3QiwyQkFBMkIsRUFBRSxXQUFXO1FBQ3hDLDRCQUE0QixFQUFFLFdBQVc7UUFDekMsMEJBQTBCLEVBQUUsV0FBVztRQUN2QyxrQkFBa0IsRUFBRSxXQUFXO1FBQy9CLFNBQVMsRUFBRSxXQUFXO1FBQ3RCLFVBQVUsRUFBRSxXQUFXO1FBQ3ZCLGFBQWEsRUFBRSxXQUFXO1FBQzFCLGVBQWU7UUFDZixXQUFXLEVBQUUsbUJBQW1CO1FBQ2hDLFNBQVMsRUFBRSxtQkFBbUI7UUFDOUIsMkJBQTJCLEVBQUUsb0JBQW9CO1FBQ2pELG1CQUFtQixFQUFFLG9CQUFvQjtRQUN6QyxTQUFTLEVBQUUsdUJBQXVCO1FBQ2xDLGNBQWMsRUFBRSx1QkFBdUI7UUFDdkMsa0JBQWtCLEVBQUUsb0JBQW9CO1FBQ3hDLFVBQVUsRUFBRSx1QkFBdUI7UUFDbkMsbUJBQW1CLEVBQUUsb0JBQW9CO0tBQzFDO0lBQ0QsVUFBVSxFQUFFO1FBQ1YsWUFBWSxFQUFFLENBQUMsZUFBZSxDQUFDO1FBQy9CLG9CQUFvQixFQUFFLENBQUMsNEJBQTRCLENBQUM7UUFDcEQsdUJBQXVCLEVBQUUsQ0FBQyxlQUFlLENBQUM7UUFDMUMsbUJBQW1CLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQztRQUNsRCwyQkFBMkIsRUFBRSxDQUFDLGtDQUFrQyxDQUFDO1FBQ2pFLHVCQUF1QixFQUFFLENBQUMsZUFBZSxDQUFDO1FBQzFDLG9CQUFvQixFQUFFLENBQUMsNEJBQTRCLENBQUM7UUFDcEQsZUFBZSxFQUFFLENBQUMsdUJBQXVCLENBQUM7UUFDMUMscUJBQXFCLEVBQUUsQ0FBQyxlQUFlLENBQUM7UUFDeEMsV0FBVyxFQUFFLENBQUMsbUJBQW1CLENBQUM7UUFDbEMsYUFBYSxFQUFFLENBQUMsZUFBZSxDQUFDO1FBQ2hDLFNBQVMsRUFBRSxDQUFDLGtCQUFrQixDQUFDO1FBQy9CLGlCQUFpQixFQUFFLENBQUMsa0JBQWtCLENBQUM7UUFDdkMsbUJBQW1CLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztRQUN6QyxRQUFRLEVBQUUsQ0FBQyxlQUFlLENBQUM7UUFDM0IsVUFBVSxFQUFFLENBQUMsa0JBQWtCLENBQUM7UUFDaEMsa0JBQWtCLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztRQUN4QyxlQUFlLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQztRQUN4QyxrQkFBa0IsRUFBRSxDQUFDLCtCQUErQixDQUFDO1FBQ3JELHdCQUF3QixFQUFFLENBQUMsd0JBQXdCLENBQUM7UUFDcEQsMEJBQTBCLEVBQUUsQ0FBQyxnQ0FBZ0MsQ0FBQztRQUM5RCxnQkFBZ0IsRUFBRSxDQUFDLCtCQUErQixDQUFDO1FBQ25ELHdCQUF3QixFQUFFLENBQUMsOEJBQThCLENBQUM7UUFDMUQsd0JBQXdCLEVBQUUsQ0FBQyw4QkFBOEIsQ0FBQztRQUMxRCxrQkFBa0IsRUFBRSxDQUFDLHdCQUF3QixDQUFDO1FBQzlDLDJCQUEyQixFQUFFLENBQUMsc0JBQXNCLENBQUM7UUFDckQsbUJBQW1CLEVBQUUsQ0FBQyxlQUFlLENBQUM7UUFDdEMsZ0NBQWdDLEVBQUUsQ0FBQyw4QkFBOEIsQ0FBQztRQUNsRSxpQkFBaUIsRUFBRSxDQUFDLFlBQVksQ0FBQztRQUNqQyxPQUFPLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztRQUM1QixrQkFBa0IsRUFBRSxDQUFDLG9CQUFvQixDQUFDO1FBQzFDLFVBQVUsRUFBRSxDQUFDLFlBQVksQ0FBQztRQUMxQixVQUFVLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztRQUNoQyxvQkFBb0IsRUFBRSxDQUFDLGlCQUFpQixDQUFDO1FBQ3pDLGtCQUFrQixFQUFFLENBQUMsZUFBZSxDQUFDO1FBQ3JDLHFCQUFxQixFQUFFLENBQUMsa0JBQWtCLENBQUM7UUFDM0MsZUFBZSxFQUFFLENBQUMsV0FBVyxDQUFDO1FBQzlCLG9CQUFvQixFQUFFLENBQUMsb0JBQW9CLENBQUM7UUFDNUMscUJBQXFCLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQztRQUNwRCxnQkFBZ0IsRUFBRSxDQUFDLFNBQVMsRUFBQyxTQUFTLENBQUM7UUFDdkMsWUFBWSxFQUFFLENBQUMsS0FBSyxDQUFDO0tBQ3RCO0NBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0Jpcy5Db21tb24uQ1JNLy4vc3JjL2RhdGF2ZXJzZS1nZW4vZW50aXRpZXMvQ29udGFjdC50cz9hZGVhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlKi9cclxuaW1wb3J0IHsgSUVudGl0eSB9IGZyb20gXCJkYXRhdmVyc2UtaWZ5XCI7XHJcblxyXG4vLyBFbnRpdHkgQ29udGFjdCBGb3JtQ29udGV4dFxyXG5leHBvcnQgaW50ZXJmYWNlIENvbnRhY3RGb3JtQ29udGV4dCBleHRlbmRzIFhybS5Gb3JtQ29udGV4dCB7XHJcbiAgICBnZXRBdHRyaWJ1dGUoKTogWHJtLkF0dHJpYnV0ZXMuQXR0cmlidXRlW107XHJcbiAgICBnZXRBdHRyaWJ1dGU8VCBleHRlbmRzIFhybS5BdHRyaWJ1dGVzLkF0dHJpYnV0ZT4oYXR0cmlidXRlTmFtZTogc3RyaW5nKTogVDtcclxuICAgIGdldEF0dHJpYnV0ZShhdHRyaWJ1dGVOYW1lOiBzdHJpbmcpOiBYcm0uQXR0cmlidXRlcy5BdHRyaWJ1dGU7XHJcbiAgICBnZXRBdHRyaWJ1dGUoaW5kZXg6IG51bWJlcik6IFhybS5BdHRyaWJ1dGVzLkF0dHJpYnV0ZTtcclxuXHJcbiAgICBnZXRDb250cm9sKCk6IFhybS5Db250cm9scy5Db250cm9sW107XHJcbiAgICBnZXRDb250cm9sPFQgZXh0ZW5kcyBYcm0uQ29udHJvbHMuQ29udHJvbD4oY29udHJvbE5hbWU6IHN0cmluZyk6IFQ7XHJcbiAgICBnZXRDb250cm9sKGNvbnRyb2xOYW1lOiBzdHJpbmcpOiBYcm0uQ29udHJvbHMuQ29udHJvbDtcclxuICAgIGdldENvbnRyb2woaW5kZXg6IG51bWJlcik6IFhybS5Db250cm9scy5Db250cm9sO1xyXG5cclxuICAgIC8qXHJcbiAgICBTZWxlY3QgdGhlIGNvbnRhY3QncyByb2xlIHdpdGhpbiB0aGUgY29tcGFueSBvciBzYWxlcyBwcm9jZXNzLCBzdWNoIGFzIGRlY2lzaW9uIG1ha2VyLCBlbXBsb3llZSwgb3IgaW5mbHVlbmNlci5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FjY291bnRyb2xlY29kZScpOiBYcm0uQXR0cmlidXRlcy5PcHRpb25TZXRBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHRoZSBjb250YWN0J3Mgcm9sZSB3aXRoaW4gdGhlIGNvbXBhbnkgb3Igc2FsZXMgcHJvY2Vzcywgc3VjaCBhcyBkZWNpc2lvbiBtYWtlciwgZW1wbG95ZWUsIG9yIGluZmx1ZW5jZXIuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWNjb3VudHJvbGVjb2RlJyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB0aGUgcHJpbWFyeSBhZGRyZXNzIHR5cGUuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzMV9hZGRyZXNzdHlwZWNvZGUnKTogWHJtLkF0dHJpYnV0ZXMuT3B0aW9uU2V0QXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB0aGUgcHJpbWFyeSBhZGRyZXNzIHR5cGUuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczFfYWRkcmVzc3R5cGVjb2RlJyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGNpdHkgZm9yIHRoZSBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzMV9jaXR5Jyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBjaXR5IGZvciB0aGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MxX2NpdHknKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgY291bnRyeSBvciByZWdpb24gZm9yIHRoZSBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzMV9jb3VudHJ5Jyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBjb3VudHJ5IG9yIHJlZ2lvbiBmb3IgdGhlIHByaW1hcnkgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdhZGRyZXNzMV9jb3VudHJ5Jyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGNvdW50eSBmb3IgdGhlIHByaW1hcnkgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MxX2NvdW50eScpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgY291bnR5IGZvciB0aGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MxX2NvdW50eScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBmYXggbnVtYmVyIGFzc29jaWF0ZWQgd2l0aCB0aGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczFfZmF4Jyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBmYXggbnVtYmVyIGFzc29jaWF0ZWQgd2l0aCB0aGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MxX2ZheCcpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTZWxlY3QgdGhlIGZyZWlnaHQgdGVybXMgZm9yIHRoZSBwcmltYXJ5IGFkZHJlc3MgdG8gbWFrZSBzdXJlIHNoaXBwaW5nIG9yZGVycyBhcmUgcHJvY2Vzc2VkIGNvcnJlY3RseS5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MxX2ZyZWlnaHR0ZXJtc2NvZGUnKTogWHJtLkF0dHJpYnV0ZXMuT3B0aW9uU2V0QXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB0aGUgZnJlaWdodCB0ZXJtcyBmb3IgdGhlIHByaW1hcnkgYWRkcmVzcyB0byBtYWtlIHN1cmUgc2hpcHBpbmcgb3JkZXJzIGFyZSBwcm9jZXNzZWQgY29ycmVjdGx5LlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MxX2ZyZWlnaHR0ZXJtc2NvZGUnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgZmlyc3QgbGluZSBvZiB0aGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczFfbGluZTEnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGZpcnN0IGxpbmUgb2YgdGhlIHByaW1hcnkgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdhZGRyZXNzMV9saW5lMScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBzZWNvbmQgbGluZSBvZiB0aGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczFfbGluZTInKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHNlY29uZCBsaW5lIG9mIHRoZSBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczFfbGluZTInKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgdGhpcmQgbGluZSBvZiB0aGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczFfbGluZTMnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHRoaXJkIGxpbmUgb2YgdGhlIHByaW1hcnkgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdhZGRyZXNzMV9saW5lMycpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIGEgZGVzY3JpcHRpdmUgbmFtZSBmb3IgdGhlIHByaW1hcnkgYWRkcmVzcywgc3VjaCBhcyBDb3Jwb3JhdGUgSGVhZHF1YXJ0ZXJzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczFfbmFtZScpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSBhIGRlc2NyaXB0aXZlIG5hbWUgZm9yIHRoZSBwcmltYXJ5IGFkZHJlc3MsIHN1Y2ggYXMgQ29ycG9yYXRlIEhlYWRxdWFydGVycy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdhZGRyZXNzMV9uYW1lJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIFpJUCBDb2RlIG9yIHBvc3RhbCBjb2RlIGZvciB0aGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczFfcG9zdGFsY29kZScpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgWklQIENvZGUgb3IgcG9zdGFsIGNvZGUgZm9yIHRoZSBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczFfcG9zdGFsY29kZScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBwb3N0IG9mZmljZSBib3ggbnVtYmVyIG9mIHRoZSBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzMV9wb3N0b2ZmaWNlYm94Jyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBwb3N0IG9mZmljZSBib3ggbnVtYmVyIG9mIHRoZSBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczFfcG9zdG9mZmljZWJveCcpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBuYW1lIG9mIHRoZSBtYWluIGNvbnRhY3QgYXQgdGhlIGFjY291bnQncyBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzMV9wcmltYXJ5Y29udGFjdG5hbWUnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIG5hbWUgb2YgdGhlIG1haW4gY29udGFjdCBhdCB0aGUgYWNjb3VudCdzIHByaW1hcnkgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdhZGRyZXNzMV9wcmltYXJ5Y29udGFjdG5hbWUnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IGEgc2hpcHBpbmcgbWV0aG9kIGZvciBkZWxpdmVyaWVzIHNlbnQgdG8gdGhpcyBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczFfc2hpcHBpbmdtZXRob2Rjb2RlJyk6IFhybS5BdHRyaWJ1dGVzLk9wdGlvblNldEF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBTZWxlY3QgYSBzaGlwcGluZyBtZXRob2QgZm9yIGRlbGl2ZXJpZXMgc2VudCB0byB0aGlzIGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczFfc2hpcHBpbmdtZXRob2Rjb2RlJyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHN0YXRlIG9yIHByb3ZpbmNlIG9mIHRoZSBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzMV9zdGF0ZW9ycHJvdmluY2UnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHN0YXRlIG9yIHByb3ZpbmNlIG9mIHRoZSBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczFfc3RhdGVvcnByb3ZpbmNlJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIG1haW4gcGhvbmUgbnVtYmVyIGFzc29jaWF0ZWQgd2l0aCB0aGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczFfdGVsZXBob25lMScpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgbWFpbiBwaG9uZSBudW1iZXIgYXNzb2NpYXRlZCB3aXRoIHRoZSBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczFfdGVsZXBob25lMScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIGEgc2Vjb25kIHBob25lIG51bWJlciBhc3NvY2lhdGVkIHdpdGggdGhlIHByaW1hcnkgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MxX3RlbGVwaG9uZTInKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgYSBzZWNvbmQgcGhvbmUgbnVtYmVyIGFzc29jaWF0ZWQgd2l0aCB0aGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MxX3RlbGVwaG9uZTInKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSBhIHRoaXJkIHBob25lIG51bWJlciBhc3NvY2lhdGVkIHdpdGggdGhlIHByaW1hcnkgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MxX3RlbGVwaG9uZTMnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgYSB0aGlyZCBwaG9uZSBudW1iZXIgYXNzb2NpYXRlZCB3aXRoIHRoZSBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczFfdGVsZXBob25lMycpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBVUFMgem9uZSBvZiB0aGUgcHJpbWFyeSBhZGRyZXNzIHRvIG1ha2Ugc3VyZSBzaGlwcGluZyBjaGFyZ2VzIGFyZSBjYWxjdWxhdGVkIGNvcnJlY3RseSBhbmQgZGVsaXZlcmllcyBhcmUgbWFkZSBwcm9tcHRseSwgaWYgc2hpcHBlZCBieSBVUFMuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzMV91cHN6b25lJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBVUFMgem9uZSBvZiB0aGUgcHJpbWFyeSBhZGRyZXNzIHRvIG1ha2Ugc3VyZSBzaGlwcGluZyBjaGFyZ2VzIGFyZSBjYWxjdWxhdGVkIGNvcnJlY3RseSBhbmQgZGVsaXZlcmllcyBhcmUgbWFkZSBwcm9tcHRseSwgaWYgc2hpcHBlZCBieSBVUFMuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczFfdXBzem9uZScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTZWxlY3QgdGhlIHRpbWUgem9uZSwgb3IgVVRDIG9mZnNldCwgZm9yIHRoaXMgYWRkcmVzcyBzbyB0aGF0IG90aGVyIHBlb3BsZSBjYW4gcmVmZXJlbmNlIGl0IHdoZW4gdGhleSBjb250YWN0IHNvbWVvbmUgYXQgdGhpcyBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczFfdXRjb2Zmc2V0Jyk6IFhybS5BdHRyaWJ1dGVzLk51bWJlckF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBTZWxlY3QgdGhlIHRpbWUgem9uZSwgb3IgVVRDIG9mZnNldCwgZm9yIHRoaXMgYWRkcmVzcyBzbyB0aGF0IG90aGVyIHBlb3BsZSBjYW4gcmVmZXJlbmNlIGl0IHdoZW4gdGhleSBjb250YWN0IHNvbWVvbmUgYXQgdGhpcyBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MxX3V0Y29mZnNldCcpOiBYcm0uQ29udHJvbHMuTnVtYmVyQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTZWxlY3QgdGhlIHNlY29uZGFyeSBhZGRyZXNzIHR5cGUuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzMl9hZGRyZXNzdHlwZWNvZGUnKTogWHJtLkF0dHJpYnV0ZXMuT3B0aW9uU2V0QXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB0aGUgc2Vjb25kYXJ5IGFkZHJlc3MgdHlwZS5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdhZGRyZXNzMl9hZGRyZXNzdHlwZWNvZGUnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgY2l0eSBmb3IgdGhlIHNlY29uZGFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczJfY2l0eScpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgY2l0eSBmb3IgdGhlIHNlY29uZGFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MyX2NpdHknKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgY291bnRyeSBvciByZWdpb24gZm9yIHRoZSBzZWNvbmRhcnkgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MyX2NvdW50cnknKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGNvdW50cnkgb3IgcmVnaW9uIGZvciB0aGUgc2Vjb25kYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczJfY291bnRyeScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBjb3VudHkgZm9yIHRoZSBzZWNvbmRhcnkgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MyX2NvdW50eScpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgY291bnR5IGZvciB0aGUgc2Vjb25kYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczJfY291bnR5Jyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGZheCBudW1iZXIgYXNzb2NpYXRlZCB3aXRoIHRoZSBzZWNvbmRhcnkgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MyX2ZheCcpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgZmF4IG51bWJlciBhc3NvY2lhdGVkIHdpdGggdGhlIHNlY29uZGFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MyX2ZheCcpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTZWxlY3QgdGhlIGZyZWlnaHQgdGVybXMgZm9yIHRoZSBzZWNvbmRhcnkgYWRkcmVzcyB0byBtYWtlIHN1cmUgc2hpcHBpbmcgb3JkZXJzIGFyZSBwcm9jZXNzZWQgY29ycmVjdGx5LlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczJfZnJlaWdodHRlcm1zY29kZScpOiBYcm0uQXR0cmlidXRlcy5PcHRpb25TZXRBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHRoZSBmcmVpZ2h0IHRlcm1zIGZvciB0aGUgc2Vjb25kYXJ5IGFkZHJlc3MgdG8gbWFrZSBzdXJlIHNoaXBwaW5nIG9yZGVycyBhcmUgcHJvY2Vzc2VkIGNvcnJlY3RseS5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdhZGRyZXNzMl9mcmVpZ2h0dGVybXNjb2RlJyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGZpcnN0IGxpbmUgb2YgdGhlIHNlY29uZGFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczJfbGluZTEnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGZpcnN0IGxpbmUgb2YgdGhlIHNlY29uZGFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MyX2xpbmUxJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHNlY29uZCBsaW5lIG9mIHRoZSBzZWNvbmRhcnkgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MyX2xpbmUyJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBzZWNvbmQgbGluZSBvZiB0aGUgc2Vjb25kYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczJfbGluZTInKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgdGhpcmQgbGluZSBvZiB0aGUgc2Vjb25kYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzMl9saW5lMycpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgdGhpcmQgbGluZSBvZiB0aGUgc2Vjb25kYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczJfbGluZTMnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSBhIGRlc2NyaXB0aXZlIG5hbWUgZm9yIHRoZSBzZWNvbmRhcnkgYWRkcmVzcywgc3VjaCBhcyBDb3Jwb3JhdGUgSGVhZHF1YXJ0ZXJzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczJfbmFtZScpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSBhIGRlc2NyaXB0aXZlIG5hbWUgZm9yIHRoZSBzZWNvbmRhcnkgYWRkcmVzcywgc3VjaCBhcyBDb3Jwb3JhdGUgSGVhZHF1YXJ0ZXJzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MyX25hbWUnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgWklQIENvZGUgb3IgcG9zdGFsIGNvZGUgZm9yIHRoZSBzZWNvbmRhcnkgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MyX3Bvc3RhbGNvZGUnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIFpJUCBDb2RlIG9yIHBvc3RhbCBjb2RlIGZvciB0aGUgc2Vjb25kYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczJfcG9zdGFsY29kZScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBwb3N0IG9mZmljZSBib3ggbnVtYmVyIG9mIHRoZSBzZWNvbmRhcnkgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MyX3Bvc3RvZmZpY2Vib3gnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHBvc3Qgb2ZmaWNlIGJveCBudW1iZXIgb2YgdGhlIHNlY29uZGFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MyX3Bvc3RvZmZpY2Vib3gnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgbmFtZSBvZiB0aGUgbWFpbiBjb250YWN0IGF0IHRoZSBhY2NvdW50J3Mgc2Vjb25kYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzMl9wcmltYXJ5Y29udGFjdG5hbWUnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIG5hbWUgb2YgdGhlIG1haW4gY29udGFjdCBhdCB0aGUgYWNjb3VudCdzIHNlY29uZGFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MyX3ByaW1hcnljb250YWN0bmFtZScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTZWxlY3QgYSBzaGlwcGluZyBtZXRob2QgZm9yIGRlbGl2ZXJpZXMgc2VudCB0byB0aGlzIGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzMl9zaGlwcGluZ21ldGhvZGNvZGUnKTogWHJtLkF0dHJpYnV0ZXMuT3B0aW9uU2V0QXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCBhIHNoaXBwaW5nIG1ldGhvZCBmb3IgZGVsaXZlcmllcyBzZW50IHRvIHRoaXMgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdhZGRyZXNzMl9zaGlwcGluZ21ldGhvZGNvZGUnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgc3RhdGUgb3IgcHJvdmluY2Ugb2YgdGhlIHNlY29uZGFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczJfc3RhdGVvcnByb3ZpbmNlJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBzdGF0ZSBvciBwcm92aW5jZSBvZiB0aGUgc2Vjb25kYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczJfc3RhdGVvcnByb3ZpbmNlJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIG1haW4gcGhvbmUgbnVtYmVyIGFzc29jaWF0ZWQgd2l0aCB0aGUgc2Vjb25kYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzMl90ZWxlcGhvbmUxJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBtYWluIHBob25lIG51bWJlciBhc3NvY2lhdGVkIHdpdGggdGhlIHNlY29uZGFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MyX3RlbGVwaG9uZTEnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSBhIHNlY29uZCBwaG9uZSBudW1iZXIgYXNzb2NpYXRlZCB3aXRoIHRoZSBzZWNvbmRhcnkgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MyX3RlbGVwaG9uZTInKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgYSBzZWNvbmQgcGhvbmUgbnVtYmVyIGFzc29jaWF0ZWQgd2l0aCB0aGUgc2Vjb25kYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczJfdGVsZXBob25lMicpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIGEgdGhpcmQgcGhvbmUgbnVtYmVyIGFzc29jaWF0ZWQgd2l0aCB0aGUgc2Vjb25kYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzMl90ZWxlcGhvbmUzJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIGEgdGhpcmQgcGhvbmUgbnVtYmVyIGFzc29jaWF0ZWQgd2l0aCB0aGUgc2Vjb25kYXJ5IGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczJfdGVsZXBob25lMycpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBVUFMgem9uZSBvZiB0aGUgc2Vjb25kYXJ5IGFkZHJlc3MgdG8gbWFrZSBzdXJlIHNoaXBwaW5nIGNoYXJnZXMgYXJlIGNhbGN1bGF0ZWQgY29ycmVjdGx5IGFuZCBkZWxpdmVyaWVzIGFyZSBtYWRlIHByb21wdGx5LCBpZiBzaGlwcGVkIGJ5IFVQUy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MyX3Vwc3pvbmUnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIFVQUyB6b25lIG9mIHRoZSBzZWNvbmRhcnkgYWRkcmVzcyB0byBtYWtlIHN1cmUgc2hpcHBpbmcgY2hhcmdlcyBhcmUgY2FsY3VsYXRlZCBjb3JyZWN0bHkgYW5kIGRlbGl2ZXJpZXMgYXJlIG1hZGUgcHJvbXB0bHksIGlmIHNoaXBwZWQgYnkgVVBTLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MyX3Vwc3pvbmUnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHRoZSB0aW1lIHpvbmUsIG9yIFVUQyBvZmZzZXQsIGZvciB0aGlzIGFkZHJlc3Mgc28gdGhhdCBvdGhlciBwZW9wbGUgY2FuIHJlZmVyZW5jZSBpdCB3aGVuIHRoZXkgY29udGFjdCBzb21lb25lIGF0IHRoaXMgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MyX3V0Y29mZnNldCcpOiBYcm0uQXR0cmlidXRlcy5OdW1iZXJBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHRoZSB0aW1lIHpvbmUsIG9yIFVUQyBvZmZzZXQsIGZvciB0aGlzIGFkZHJlc3Mgc28gdGhhdCBvdGhlciBwZW9wbGUgY2FuIHJlZmVyZW5jZSBpdCB3aGVuIHRoZXkgY29udGFjdCBzb21lb25lIGF0IHRoaXMgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdhZGRyZXNzMl91dGNvZmZzZXQnKTogWHJtLkNvbnRyb2xzLk51bWJlckNvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHRoZSB0aGlyZCBhZGRyZXNzIHR5cGUuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzM19hZGRyZXNzdHlwZWNvZGUnKTogWHJtLkF0dHJpYnV0ZXMuT3B0aW9uU2V0QXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB0aGUgdGhpcmQgYWRkcmVzcyB0eXBlLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MzX2FkZHJlc3N0eXBlY29kZScpOiBYcm0uQ29udHJvbHMuT3B0aW9uU2V0Q29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBjaXR5IGZvciB0aGUgM3JkIGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzM19jaXR5Jyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBjaXR5IGZvciB0aGUgM3JkIGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczNfY2l0eScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICB0aGUgY291bnRyeSBvciByZWdpb24gZm9yIHRoZSAzcmQgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MzX2NvdW50cnknKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIHRoZSBjb3VudHJ5IG9yIHJlZ2lvbiBmb3IgdGhlIDNyZCBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MzX2NvdW50cnknKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgY291bnR5IGZvciB0aGUgdGhpcmQgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MzX2NvdW50eScpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgY291bnR5IGZvciB0aGUgdGhpcmQgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdhZGRyZXNzM19jb3VudHknKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgZmF4IG51bWJlciBhc3NvY2lhdGVkIHdpdGggdGhlIHRoaXJkIGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzM19mYXgnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGZheCBudW1iZXIgYXNzb2NpYXRlZCB3aXRoIHRoZSB0aGlyZCBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MzX2ZheCcpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTZWxlY3QgdGhlIGZyZWlnaHQgdGVybXMgZm9yIHRoZSB0aGlyZCBhZGRyZXNzIHRvIG1ha2Ugc3VyZSBzaGlwcGluZyBvcmRlcnMgYXJlIHByb2Nlc3NlZCBjb3JyZWN0bHkuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzM19mcmVpZ2h0dGVybXNjb2RlJyk6IFhybS5BdHRyaWJ1dGVzLk9wdGlvblNldEF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBTZWxlY3QgdGhlIGZyZWlnaHQgdGVybXMgZm9yIHRoZSB0aGlyZCBhZGRyZXNzIHRvIG1ha2Ugc3VyZSBzaGlwcGluZyBvcmRlcnMgYXJlIHByb2Nlc3NlZCBjb3JyZWN0bHkuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczNfZnJlaWdodHRlcm1zY29kZScpOiBYcm0uQ29udHJvbHMuT3B0aW9uU2V0Q29udHJvbDtcclxuICAgIC8qXHJcbiAgICB0aGUgZmlyc3QgbGluZSBvZiB0aGUgM3JkIGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzM19saW5lMScpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgdGhlIGZpcnN0IGxpbmUgb2YgdGhlIDNyZCBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MzX2xpbmUxJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIHRoZSBzZWNvbmQgbGluZSBvZiB0aGUgM3JkIGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzM19saW5lMicpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgdGhlIHNlY29uZCBsaW5lIG9mIHRoZSAzcmQgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdhZGRyZXNzM19saW5lMicpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICB0aGUgdGhpcmQgbGluZSBvZiB0aGUgM3JkIGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzM19saW5lMycpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgdGhlIHRoaXJkIGxpbmUgb2YgdGhlIDNyZCBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MzX2xpbmUzJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgYSBkZXNjcmlwdGl2ZSBuYW1lIGZvciB0aGUgdGhpcmQgYWRkcmVzcywgc3VjaCBhcyBDb3Jwb3JhdGUgSGVhZHF1YXJ0ZXJzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczNfbmFtZScpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSBhIGRlc2NyaXB0aXZlIG5hbWUgZm9yIHRoZSB0aGlyZCBhZGRyZXNzLCBzdWNoIGFzIENvcnBvcmF0ZSBIZWFkcXVhcnRlcnMuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczNfbmFtZScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICB0aGUgWklQIENvZGUgb3IgcG9zdGFsIGNvZGUgZm9yIHRoZSAzcmQgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MzX3Bvc3RhbGNvZGUnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIHRoZSBaSVAgQ29kZSBvciBwb3N0YWwgY29kZSBmb3IgdGhlIDNyZCBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MzX3Bvc3RhbGNvZGUnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgdGhlIHBvc3Qgb2ZmaWNlIGJveCBudW1iZXIgb2YgdGhlIDNyZCBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczNfcG9zdG9mZmljZWJveCcpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgdGhlIHBvc3Qgb2ZmaWNlIGJveCBudW1iZXIgb2YgdGhlIDNyZCBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MzX3Bvc3RvZmZpY2Vib3gnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgbmFtZSBvZiB0aGUgbWFpbiBjb250YWN0IGF0IHRoZSBhY2NvdW50J3MgdGhpcmQgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MzX3ByaW1hcnljb250YWN0bmFtZScpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgbmFtZSBvZiB0aGUgbWFpbiBjb250YWN0IGF0IHRoZSBhY2NvdW50J3MgdGhpcmQgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdhZGRyZXNzM19wcmltYXJ5Y29udGFjdG5hbWUnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IGEgc2hpcHBpbmcgbWV0aG9kIGZvciBkZWxpdmVyaWVzIHNlbnQgdG8gdGhpcyBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczNfc2hpcHBpbmdtZXRob2Rjb2RlJyk6IFhybS5BdHRyaWJ1dGVzLk9wdGlvblNldEF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBTZWxlY3QgYSBzaGlwcGluZyBtZXRob2QgZm9yIGRlbGl2ZXJpZXMgc2VudCB0byB0aGlzIGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczNfc2hpcHBpbmdtZXRob2Rjb2RlJyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIHRoZSBzdGF0ZSBvciBwcm92aW5jZSBvZiB0aGUgdGhpcmQgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MzX3N0YXRlb3Jwcm92aW5jZScpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgdGhlIHN0YXRlIG9yIHByb3ZpbmNlIG9mIHRoZSB0aGlyZCBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MzX3N0YXRlb3Jwcm92aW5jZScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBtYWluIHBob25lIG51bWJlciBhc3NvY2lhdGVkIHdpdGggdGhlIHRoaXJkIGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzM190ZWxlcGhvbmUxJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBtYWluIHBob25lIG51bWJlciBhc3NvY2lhdGVkIHdpdGggdGhlIHRoaXJkIGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczNfdGVsZXBob25lMScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIGEgc2Vjb25kIHBob25lIG51bWJlciBhc3NvY2lhdGVkIHdpdGggdGhlIHRoaXJkIGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzM190ZWxlcGhvbmUyJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIGEgc2Vjb25kIHBob25lIG51bWJlciBhc3NvY2lhdGVkIHdpdGggdGhlIHRoaXJkIGFkZHJlc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWRkcmVzczNfdGVsZXBob25lMicpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIGEgdGhpcmQgcGhvbmUgbnVtYmVyIGFzc29jaWF0ZWQgd2l0aCB0aGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWRkcmVzczNfdGVsZXBob25lMycpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSBhIHRoaXJkIHBob25lIG51bWJlciBhc3NvY2lhdGVkIHdpdGggdGhlIHByaW1hcnkgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdhZGRyZXNzM190ZWxlcGhvbmUzJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIFVQUyB6b25lIG9mIHRoZSB0aGlyZCBhZGRyZXNzIHRvIG1ha2Ugc3VyZSBzaGlwcGluZyBjaGFyZ2VzIGFyZSBjYWxjdWxhdGVkIGNvcnJlY3RseSBhbmQgZGVsaXZlcmllcyBhcmUgbWFkZSBwcm9tcHRseSwgaWYgc2hpcHBlZCBieSBVUFMuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZGRyZXNzM191cHN6b25lJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBVUFMgem9uZSBvZiB0aGUgdGhpcmQgYWRkcmVzcyB0byBtYWtlIHN1cmUgc2hpcHBpbmcgY2hhcmdlcyBhcmUgY2FsY3VsYXRlZCBjb3JyZWN0bHkgYW5kIGRlbGl2ZXJpZXMgYXJlIG1hZGUgcHJvbXB0bHksIGlmIHNoaXBwZWQgYnkgVVBTLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FkZHJlc3MzX3Vwc3pvbmUnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHRoZSB0aW1lIHpvbmUsIG9yIFVUQyBvZmZzZXQsIGZvciB0aGlzIGFkZHJlc3Mgc28gdGhhdCBvdGhlciBwZW9wbGUgY2FuIHJlZmVyZW5jZSBpdCB3aGVuIHRoZXkgY29udGFjdCBzb21lb25lIGF0IHRoaXMgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FkZHJlc3MzX3V0Y29mZnNldCcpOiBYcm0uQXR0cmlidXRlcy5OdW1iZXJBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHRoZSB0aW1lIHpvbmUsIG9yIFVUQyBvZmZzZXQsIGZvciB0aGlzIGFkZHJlc3Mgc28gdGhhdCBvdGhlciBwZW9wbGUgY2FuIHJlZmVyZW5jZSBpdCB3aGVuIHRoZXkgY29udGFjdCBzb21lb25lIGF0IHRoaXMgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdhZGRyZXNzM191dGNvZmZzZXQnKTogWHJtLkNvbnRyb2xzLk51bWJlckNvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgRm9yIHN5c3RlbSB1c2Ugb25seS5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FnaW5nMzAnKTogWHJtLkF0dHJpYnV0ZXMuTnVtYmVyQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIEZvciBzeXN0ZW0gdXNlIG9ubHkuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWdpbmczMCcpOiBYcm0uQ29udHJvbHMuTnVtYmVyQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTaG93cyB0aGUgQWdpbmcgMzAgZmllbGQgY29udmVydGVkIHRvIHRoZSBzeXN0ZW0ncyBkZWZhdWx0IGJhc2UgY3VycmVuY3kuIFRoZSBjYWxjdWxhdGlvbnMgdXNlIHRoZSBleGNoYW5nZSByYXRlIHNwZWNpZmllZCBpbiB0aGUgQ3VycmVuY2llcyBhcmVhLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWdpbmczMF9iYXNlJyk6IFhybS5BdHRyaWJ1dGVzLk51bWJlckF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBTaG93cyB0aGUgQWdpbmcgMzAgZmllbGQgY29udmVydGVkIHRvIHRoZSBzeXN0ZW0ncyBkZWZhdWx0IGJhc2UgY3VycmVuY3kuIFRoZSBjYWxjdWxhdGlvbnMgdXNlIHRoZSBleGNoYW5nZSByYXRlIHNwZWNpZmllZCBpbiB0aGUgQ3VycmVuY2llcyBhcmVhLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FnaW5nMzBfYmFzZScpOiBYcm0uQ29udHJvbHMuTnVtYmVyQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBGb3Igc3lzdGVtIHVzZSBvbmx5LlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYWdpbmc2MCcpOiBYcm0uQXR0cmlidXRlcy5OdW1iZXJBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgRm9yIHN5c3RlbSB1c2Ugb25seS5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdhZ2luZzYwJyk6IFhybS5Db250cm9scy5OdW1iZXJDb250cm9sO1xyXG4gICAgLypcclxuICAgIFNob3dzIHRoZSBBZ2luZyA2MCBmaWVsZCBjb252ZXJ0ZWQgdG8gdGhlIHN5c3RlbSdzIGRlZmF1bHQgYmFzZSBjdXJyZW5jeS4gVGhlIGNhbGN1bGF0aW9ucyB1c2UgdGhlIGV4Y2hhbmdlIHJhdGUgc3BlY2lmaWVkIGluIHRoZSBDdXJyZW5jaWVzIGFyZWEuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZ2luZzYwX2Jhc2UnKTogWHJtLkF0dHJpYnV0ZXMuTnVtYmVyQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNob3dzIHRoZSBBZ2luZyA2MCBmaWVsZCBjb252ZXJ0ZWQgdG8gdGhlIHN5c3RlbSdzIGRlZmF1bHQgYmFzZSBjdXJyZW5jeS4gVGhlIGNhbGN1bGF0aW9ucyB1c2UgdGhlIGV4Y2hhbmdlIHJhdGUgc3BlY2lmaWVkIGluIHRoZSBDdXJyZW5jaWVzIGFyZWEuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYWdpbmc2MF9iYXNlJyk6IFhybS5Db250cm9scy5OdW1iZXJDb250cm9sO1xyXG4gICAgLypcclxuICAgIEZvciBzeXN0ZW0gdXNlIG9ubHkuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhZ2luZzkwJyk6IFhybS5BdHRyaWJ1dGVzLk51bWJlckF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBGb3Igc3lzdGVtIHVzZSBvbmx5LlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2FnaW5nOTAnKTogWHJtLkNvbnRyb2xzLk51bWJlckNvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgU2hvd3MgdGhlIEFnaW5nIDkwIGZpZWxkIGNvbnZlcnRlZCB0byB0aGUgc3lzdGVtJ3MgZGVmYXVsdCBiYXNlIGN1cnJlbmN5LiBUaGUgY2FsY3VsYXRpb25zIHVzZSB0aGUgZXhjaGFuZ2UgcmF0ZSBzcGVjaWZpZWQgaW4gdGhlIEN1cnJlbmNpZXMgYXJlYS5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FnaW5nOTBfYmFzZScpOiBYcm0uQXR0cmlidXRlcy5OdW1iZXJBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgU2hvd3MgdGhlIEFnaW5nIDkwIGZpZWxkIGNvbnZlcnRlZCB0byB0aGUgc3lzdGVtJ3MgZGVmYXVsdCBiYXNlIGN1cnJlbmN5LiBUaGUgY2FsY3VsYXRpb25zIHVzZSB0aGUgZXhjaGFuZ2UgcmF0ZSBzcGVjaWZpZWQgaW4gdGhlIEN1cnJlbmNpZXMgYXJlYS5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdhZ2luZzkwX2Jhc2UnKTogWHJtLkNvbnRyb2xzLk51bWJlckNvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgRW50ZXIgdGhlIGRhdGUgb2YgdGhlIGNvbnRhY3QncyB3ZWRkaW5nIG9yIHNlcnZpY2UgYW5uaXZlcnNhcnkgZm9yIHVzZSBpbiBjdXN0b21lciBnaWZ0IHByb2dyYW1zIG9yIG90aGVyIGNvbW11bmljYXRpb25zLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYW5uaXZlcnNhcnknKTogWHJtLkF0dHJpYnV0ZXMuRGF0ZUF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBFbnRlciB0aGUgZGF0ZSBvZiB0aGUgY29udGFjdCdzIHdlZGRpbmcgb3Igc2VydmljZSBhbm5pdmVyc2FyeSBmb3IgdXNlIGluIGN1c3RvbWVyIGdpZnQgcHJvZ3JhbXMgb3Igb3RoZXIgY29tbXVuaWNhdGlvbnMuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYW5uaXZlcnNhcnknKTogWHJtLkNvbnRyb2xzLkRhdGVDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGNvbnRhY3QncyBhbm51YWwgaW5jb21lIGZvciB1c2UgaW4gcHJvZmlsaW5nIGFuZCBmaW5hbmNpYWwgYW5hbHlzaXMuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdhbm51YWxpbmNvbWUnKTogWHJtLkF0dHJpYnV0ZXMuTnVtYmVyQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGNvbnRhY3QncyBhbm51YWwgaW5jb21lIGZvciB1c2UgaW4gcHJvZmlsaW5nIGFuZCBmaW5hbmNpYWwgYW5hbHlzaXMuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYW5udWFsaW5jb21lJyk6IFhybS5Db250cm9scy5OdW1iZXJDb250cm9sO1xyXG4gICAgLypcclxuICAgIFNob3dzIHRoZSBBbm51YWwgSW5jb21lIGZpZWxkIGNvbnZlcnRlZCB0byB0aGUgc3lzdGVtJ3MgZGVmYXVsdCBiYXNlIGN1cnJlbmN5LiBUaGUgY2FsY3VsYXRpb25zIHVzZSB0aGUgZXhjaGFuZ2UgcmF0ZSBzcGVjaWZpZWQgaW4gdGhlIEN1cnJlbmNpZXMgYXJlYS5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2FubnVhbGluY29tZV9iYXNlJyk6IFhybS5BdHRyaWJ1dGVzLk51bWJlckF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBTaG93cyB0aGUgQW5udWFsIEluY29tZSBmaWVsZCBjb252ZXJ0ZWQgdG8gdGhlIHN5c3RlbSdzIGRlZmF1bHQgYmFzZSBjdXJyZW5jeS4gVGhlIGNhbGN1bGF0aW9ucyB1c2UgdGhlIGV4Y2hhbmdlIHJhdGUgc3BlY2lmaWVkIGluIHRoZSBDdXJyZW5jaWVzIGFyZWEuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYW5udWFsaW5jb21lX2Jhc2UnKTogWHJtLkNvbnRyb2xzLk51bWJlckNvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgbmFtZSBvZiB0aGUgY29udGFjdCdzIGFzc2lzdGFudC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2Fzc2lzdGFudG5hbWUnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIG5hbWUgb2YgdGhlIGNvbnRhY3QncyBhc3Npc3RhbnQuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYXNzaXN0YW50bmFtZScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBwaG9uZSBudW1iZXIgZm9yIHRoZSBjb250YWN0J3MgYXNzaXN0YW50LlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYXNzaXN0YW50cGhvbmUnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHBob25lIG51bWJlciBmb3IgdGhlIGNvbnRhY3QncyBhc3Npc3RhbnQuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYXNzaXN0YW50cGhvbmUnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgRW50ZXIgdGhlIGNvbnRhY3QncyBiaXJ0aGRheSBmb3IgdXNlIGluIGN1c3RvbWVyIGdpZnQgcHJvZ3JhbXMgb3Igb3RoZXIgY29tbXVuaWNhdGlvbnMuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdiaXJ0aGRhdGUnKTogWHJtLkF0dHJpYnV0ZXMuRGF0ZUF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBFbnRlciB0aGUgY29udGFjdCdzIGJpcnRoZGF5IGZvciB1c2UgaW4gY3VzdG9tZXIgZ2lmdCBwcm9ncmFtcyBvciBvdGhlciBjb21tdW5pY2F0aW9ucy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdiaXJ0aGRhdGUnKTogWHJtLkNvbnRyb2xzLkRhdGVDb250cm9sO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYmlzX2FzaWFubmFtZScpOiBYcm0uQXR0cmlidXRlcy5Cb29sZWFuQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2Jpc19hc2lhbm5hbWUnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdiaXNfY2lhbWFjY291bnRpZCcpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYmlzX2NpYW1hY2NvdW50aWQnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdiaXNfY2lzaWQnKTogWHJtLkF0dHJpYnV0ZXMuTnVtYmVyQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2Jpc19jaXNpZCcpOiBYcm0uQ29udHJvbHMuTnVtYmVyQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBcclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2Jpc19jb250YWN0dHlwZScpOiBYcm0uQXR0cmlidXRlcy5PcHRpb25TZXRBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYmlzX2NvbnRhY3R0eXBlJyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYmlzX2NwbWlmaWVsZG9mZXhwZXJ0aXNlJyk6IFhybS5BdHRyaWJ1dGVzLk9wdGlvblNldEF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBcclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdiaXNfY3BtaWZpZWxkb2ZleHBlcnRpc2UnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdiaXNfY3JlYXRpb25zb3VyY2UnKTogWHJtLkF0dHJpYnV0ZXMuT3B0aW9uU2V0QXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2Jpc19jcmVhdGlvbnNvdXJjZScpOiBYcm0uQ29udHJvbHMuT3B0aW9uU2V0Q29udHJvbDtcclxuICAgIC8qXHJcbiAgICBcclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2Jpc19jcm1pZCcpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYmlzX2NybWlkJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYmlzX2RlcGFydG1lbnQnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2Jpc19kZXBhcnRtZW50Jyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYmlzX2VtYmFyZ29yZXNwZWN0Jyk6IFhybS5BdHRyaWJ1dGVzLkJvb2xlYW5BdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYmlzX2VtYmFyZ29yZXNwZWN0Jyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYmlzX2VtYmFyZ29yZXNwZWN0dHJhY2tkYXRlJyk6IFhybS5BdHRyaWJ1dGVzLkRhdGVBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYmlzX2VtYmFyZ29yZXNwZWN0dHJhY2tkYXRlJyk6IFhybS5Db250cm9scy5EYXRlQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBcclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2Jpc19pbnRlcm5hdGlvbmFscHJpbnRhZGRyZXNzJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBcclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdiaXNfaW50ZXJuYXRpb25hbHByaW50YWRkcmVzcycpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBcclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2Jpc19sYW5ndWFnZXNwb2tlbicpOiBYcm0uQXR0cmlidXRlcy5PcHRpb25TZXRBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYmlzX2xhbmd1YWdlc3Bva2VuJyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYmlzX3ByZWZpeCcpOiBYcm0uQXR0cmlidXRlcy5PcHRpb25TZXRBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYmlzX3ByZWZpeCcpOiBYcm0uQ29udHJvbHMuT3B0aW9uU2V0Q29udHJvbDtcclxuICAgIC8qXHJcbiAgICBcclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2Jpc19zYWx1dGF0aW9uJyk6IFhybS5BdHRyaWJ1dGVzLk9wdGlvblNldEF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBcclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdiaXNfc2FsdXRhdGlvbicpOiBYcm0uQ29udHJvbHMuT3B0aW9uU2V0Q29udHJvbDtcclxuICAgIC8qXHJcbiAgICBcclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2Jpc19zYW5jJyk6IFhybS5BdHRyaWJ1dGVzLkJvb2xlYW5BdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYmlzX3NhbmMnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdiaXNfc2VjdGlvbnVuaXQnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2Jpc19zZWN0aW9udW5pdCcpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBcclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2Jpc19zaWduZWR0Y3ZlcnNpb24nKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2Jpc19zaWduZWR0Y3ZlcnNpb24nKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdiaXNfdGNzaWduYXR1cmVkYXRlJyk6IFhybS5BdHRyaWJ1dGVzLkRhdGVBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYmlzX3Rjc2lnbmF0dXJlZGF0ZScpOiBYcm0uQ29udHJvbHMuRGF0ZUNvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdiaXNfdGN2ZXJzaW9uc2lnbmVkJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBcclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdiaXNfdGN2ZXJzaW9uc2lnbmVkJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgYSBzZWNvbmQgYnVzaW5lc3MgcGhvbmUgbnVtYmVyIGZvciB0aGlzIGNvbnRhY3QuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdidXNpbmVzczInKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgYSBzZWNvbmQgYnVzaW5lc3MgcGhvbmUgbnVtYmVyIGZvciB0aGlzIGNvbnRhY3QuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYnVzaW5lc3MyJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFN0b3JlcyBCdXNpbmVzcyBDYXJkIENvbnRyb2wgUHJvcGVydGllcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2J1c2luZXNzY2FyZGF0dHJpYnV0ZXMnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFN0b3JlcyBCdXNpbmVzcyBDYXJkIENvbnRyb2wgUHJvcGVydGllcy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdidXNpbmVzc2NhcmRhdHRyaWJ1dGVzJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgYSBjYWxsYmFjayBwaG9uZSBudW1iZXIgZm9yIHRoaXMgY29udGFjdC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2NhbGxiYWNrJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIGEgY2FsbGJhY2sgcGhvbmUgbnVtYmVyIGZvciB0aGlzIGNvbnRhY3QuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnY2FsbGJhY2snKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgbmFtZXMgb2YgdGhlIGNvbnRhY3QncyBjaGlsZHJlbiBmb3IgcmVmZXJlbmNlIGluIGNvbW11bmljYXRpb25zIGFuZCBjbGllbnQgcHJvZ3JhbXMuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdjaGlsZHJlbnNuYW1lcycpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgbmFtZXMgb2YgdGhlIGNvbnRhY3QncyBjaGlsZHJlbiBmb3IgcmVmZXJlbmNlIGluIGNvbW11bmljYXRpb25zIGFuZCBjbGllbnQgcHJvZ3JhbXMuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnY2hpbGRyZW5zbmFtZXMnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgY29tcGFueSBwaG9uZSBvZiB0aGUgY29udGFjdC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2NvbXBhbnknKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGNvbXBhbnkgcGhvbmUgb2YgdGhlIGNvbnRhY3QuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnY29tcGFueScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTaG93cyB0aGUgZGF0ZSBhbmQgdGltZSB3aGVuIHRoZSByZWNvcmQgd2FzIGNyZWF0ZWQuIFRoZSBkYXRlIGFuZCB0aW1lIGFyZSBkaXNwbGF5ZWQgaW4gdGhlIHRpbWUgem9uZSBzZWxlY3RlZCBpbiBNaWNyb3NvZnQgRHluYW1pY3MgMzY1IG9wdGlvbnMuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdjcmVhdGVkb24nKTogWHJtLkF0dHJpYnV0ZXMuRGF0ZUF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBTaG93cyB0aGUgZGF0ZSBhbmQgdGltZSB3aGVuIHRoZSByZWNvcmQgd2FzIGNyZWF0ZWQuIFRoZSBkYXRlIGFuZCB0aW1lIGFyZSBkaXNwbGF5ZWQgaW4gdGhlIHRpbWUgem9uZSBzZWxlY3RlZCBpbiBNaWNyb3NvZnQgRHluYW1pY3MgMzY1IG9wdGlvbnMuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnY3JlYXRlZG9uJyk6IFhybS5Db250cm9scy5EYXRlQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBjcmVkaXQgbGltaXQgb2YgdGhlIGNvbnRhY3QgZm9yIHJlZmVyZW5jZSB3aGVuIHlvdSBhZGRyZXNzIGludm9pY2UgYW5kIGFjY291bnRpbmcgaXNzdWVzIHdpdGggdGhlIGN1c3RvbWVyLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnY3JlZGl0bGltaXQnKTogWHJtLkF0dHJpYnV0ZXMuTnVtYmVyQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGNyZWRpdCBsaW1pdCBvZiB0aGUgY29udGFjdCBmb3IgcmVmZXJlbmNlIHdoZW4geW91IGFkZHJlc3MgaW52b2ljZSBhbmQgYWNjb3VudGluZyBpc3N1ZXMgd2l0aCB0aGUgY3VzdG9tZXIuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnY3JlZGl0bGltaXQnKTogWHJtLkNvbnRyb2xzLk51bWJlckNvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgU2hvd3MgdGhlIENyZWRpdCBMaW1pdCBmaWVsZCBjb252ZXJ0ZWQgdG8gdGhlIHN5c3RlbSdzIGRlZmF1bHQgYmFzZSBjdXJyZW5jeSBmb3IgcmVwb3J0aW5nIHB1cnBvc2VzLiBUaGUgY2FsY3VsYXRpb25zIHVzZSB0aGUgZXhjaGFuZ2UgcmF0ZSBzcGVjaWZpZWQgaW4gdGhlIEN1cnJlbmNpZXMgYXJlYS5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2NyZWRpdGxpbWl0X2Jhc2UnKTogWHJtLkF0dHJpYnV0ZXMuTnVtYmVyQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNob3dzIHRoZSBDcmVkaXQgTGltaXQgZmllbGQgY29udmVydGVkIHRvIHRoZSBzeXN0ZW0ncyBkZWZhdWx0IGJhc2UgY3VycmVuY3kgZm9yIHJlcG9ydGluZyBwdXJwb3Nlcy4gVGhlIGNhbGN1bGF0aW9ucyB1c2UgdGhlIGV4Y2hhbmdlIHJhdGUgc3BlY2lmaWVkIGluIHRoZSBDdXJyZW5jaWVzIGFyZWEuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnY3JlZGl0bGltaXRfYmFzZScpOiBYcm0uQ29udHJvbHMuTnVtYmVyQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTZWxlY3Qgd2hldGhlciB0aGUgY29udGFjdCBpcyBvbiBhIGNyZWRpdCBob2xkLCBmb3IgcmVmZXJlbmNlIHdoZW4gYWRkcmVzc2luZyBpbnZvaWNlIGFuZCBhY2NvdW50aW5nIGlzc3Vlcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2NyZWRpdG9uaG9sZCcpOiBYcm0uQXR0cmlidXRlcy5Cb29sZWFuQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB3aGV0aGVyIHRoZSBjb250YWN0IGlzIG9uIGEgY3JlZGl0IGhvbGQsIGZvciByZWZlcmVuY2Ugd2hlbiBhZGRyZXNzaW5nIGludm9pY2UgYW5kIGFjY291bnRpbmcgaXNzdWVzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2NyZWRpdG9uaG9sZCcpOiBYcm0uQ29udHJvbHMuT3B0aW9uU2V0Q29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTZWxlY3QgdGhlIHNpemUgb2YgdGhlIGNvbnRhY3QncyBjb21wYW55IGZvciBzZWdtZW50YXRpb24gYW5kIHJlcG9ydGluZyBwdXJwb3Nlcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2N1c3RvbWVyc2l6ZWNvZGUnKTogWHJtLkF0dHJpYnV0ZXMuT3B0aW9uU2V0QXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB0aGUgc2l6ZSBvZiB0aGUgY29udGFjdCdzIGNvbXBhbnkgZm9yIHNlZ21lbnRhdGlvbiBhbmQgcmVwb3J0aW5nIHB1cnBvc2VzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2N1c3RvbWVyc2l6ZWNvZGUnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHRoZSBjYXRlZ29yeSB0aGF0IGJlc3QgZGVzY3JpYmVzIHRoZSByZWxhdGlvbnNoaXAgYmV0d2VlbiB0aGUgY29udGFjdCBhbmQgeW91ciBvcmdhbml6YXRpb24uXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdjdXN0b21lcnR5cGVjb2RlJyk6IFhybS5BdHRyaWJ1dGVzLk9wdGlvblNldEF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBTZWxlY3QgdGhlIGNhdGVnb3J5IHRoYXQgYmVzdCBkZXNjcmliZXMgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRoZSBjb250YWN0IGFuZCB5b3VyIG9yZ2FuaXphdGlvbi5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdjdXN0b21lcnR5cGVjb2RlJyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGRlcGFydG1lbnQgb3IgYnVzaW5lc3MgdW5pdCB3aGVyZSB0aGUgY29udGFjdCB3b3JrcyBpbiB0aGUgcGFyZW50IGNvbXBhbnkgb3IgYnVzaW5lc3MuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdkZXBhcnRtZW50Jyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBkZXBhcnRtZW50IG9yIGJ1c2luZXNzIHVuaXQgd2hlcmUgdGhlIGNvbnRhY3Qgd29ya3MgaW4gdGhlIHBhcmVudCBjb21wYW55IG9yIGJ1c2luZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2RlcGFydG1lbnQnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHdoZXRoZXIgdGhlIGNvbnRhY3QgYWNjZXB0cyBidWxrIGVtYWlsIHNlbnQgdGhyb3VnaCBtYXJrZXRpbmcgY2FtcGFpZ25zIG9yIHF1aWNrIGNhbXBhaWducy4gSWYgRG8gTm90IEFsbG93IGlzIHNlbGVjdGVkLCB0aGUgY29udGFjdCBjYW4gYmUgYWRkZWQgdG8gbWFya2V0aW5nIGxpc3RzLCBidXQgd2lsbCBiZSBleGNsdWRlZCBmcm9tIHRoZSBlbWFpbC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2Rvbm90YnVsa2VtYWlsJyk6IFhybS5BdHRyaWJ1dGVzLkJvb2xlYW5BdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHdoZXRoZXIgdGhlIGNvbnRhY3QgYWNjZXB0cyBidWxrIGVtYWlsIHNlbnQgdGhyb3VnaCBtYXJrZXRpbmcgY2FtcGFpZ25zIG9yIHF1aWNrIGNhbXBhaWducy4gSWYgRG8gTm90IEFsbG93IGlzIHNlbGVjdGVkLCB0aGUgY29udGFjdCBjYW4gYmUgYWRkZWQgdG8gbWFya2V0aW5nIGxpc3RzLCBidXQgd2lsbCBiZSBleGNsdWRlZCBmcm9tIHRoZSBlbWFpbC5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdkb25vdGJ1bGtlbWFpbCcpOiBYcm0uQ29udHJvbHMuT3B0aW9uU2V0Q29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTZWxlY3Qgd2hldGhlciB0aGUgY29udGFjdCBhY2NlcHRzIGJ1bGsgcG9zdGFsIG1haWwgc2VudCB0aHJvdWdoIG1hcmtldGluZyBjYW1wYWlnbnMgb3IgcXVpY2sgY2FtcGFpZ25zLiBJZiBEbyBOb3QgQWxsb3cgaXMgc2VsZWN0ZWQsIHRoZSBjb250YWN0IGNhbiBiZSBhZGRlZCB0byBtYXJrZXRpbmcgbGlzdHMsIGJ1dCB3aWxsIGJlIGV4Y2x1ZGVkIGZyb20gdGhlIGxldHRlcnMuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdkb25vdGJ1bGtwb3N0YWxtYWlsJyk6IFhybS5BdHRyaWJ1dGVzLkJvb2xlYW5BdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHdoZXRoZXIgdGhlIGNvbnRhY3QgYWNjZXB0cyBidWxrIHBvc3RhbCBtYWlsIHNlbnQgdGhyb3VnaCBtYXJrZXRpbmcgY2FtcGFpZ25zIG9yIHF1aWNrIGNhbXBhaWducy4gSWYgRG8gTm90IEFsbG93IGlzIHNlbGVjdGVkLCB0aGUgY29udGFjdCBjYW4gYmUgYWRkZWQgdG8gbWFya2V0aW5nIGxpc3RzLCBidXQgd2lsbCBiZSBleGNsdWRlZCBmcm9tIHRoZSBsZXR0ZXJzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2Rvbm90YnVsa3Bvc3RhbG1haWwnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHdoZXRoZXIgdGhlIGNvbnRhY3QgYWxsb3dzIGRpcmVjdCBlbWFpbCBzZW50IGZyb20gTWljcm9zb2Z0IER5bmFtaWNzIDM2NS4gSWYgRG8gTm90IEFsbG93IGlzIHNlbGVjdGVkLCBNaWNyb3NvZnQgRHluYW1pY3MgMzY1IHdpbGwgbm90IHNlbmQgdGhlIGVtYWlsLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnZG9ub3RlbWFpbCcpOiBYcm0uQXR0cmlidXRlcy5Cb29sZWFuQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB3aGV0aGVyIHRoZSBjb250YWN0IGFsbG93cyBkaXJlY3QgZW1haWwgc2VudCBmcm9tIE1pY3Jvc29mdCBEeW5hbWljcyAzNjUuIElmIERvIE5vdCBBbGxvdyBpcyBzZWxlY3RlZCwgTWljcm9zb2Z0IER5bmFtaWNzIDM2NSB3aWxsIG5vdCBzZW5kIHRoZSBlbWFpbC5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdkb25vdGVtYWlsJyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB3aGV0aGVyIHRoZSBjb250YWN0IGFsbG93cyBmYXhlcy4gSWYgRG8gTm90IEFsbG93IGlzIHNlbGVjdGVkLCB0aGUgY29udGFjdCB3aWxsIGJlIGV4Y2x1ZGVkIGZyb20gYW55IGZheCBhY3Rpdml0aWVzIGRpc3RyaWJ1dGVkIGluIG1hcmtldGluZyBjYW1wYWlnbnMuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdkb25vdGZheCcpOiBYcm0uQXR0cmlidXRlcy5Cb29sZWFuQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB3aGV0aGVyIHRoZSBjb250YWN0IGFsbG93cyBmYXhlcy4gSWYgRG8gTm90IEFsbG93IGlzIHNlbGVjdGVkLCB0aGUgY29udGFjdCB3aWxsIGJlIGV4Y2x1ZGVkIGZyb20gYW55IGZheCBhY3Rpdml0aWVzIGRpc3RyaWJ1dGVkIGluIG1hcmtldGluZyBjYW1wYWlnbnMuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnZG9ub3RmYXgnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHdoZXRoZXIgdGhlIGNvbnRhY3QgYWNjZXB0cyBwaG9uZSBjYWxscy4gSWYgRG8gTm90IEFsbG93IGlzIHNlbGVjdGVkLCB0aGUgY29udGFjdCB3aWxsIGJlIGV4Y2x1ZGVkIGZyb20gYW55IHBob25lIGNhbGwgYWN0aXZpdGllcyBkaXN0cmlidXRlZCBpbiBtYXJrZXRpbmcgY2FtcGFpZ25zLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnZG9ub3RwaG9uZScpOiBYcm0uQXR0cmlidXRlcy5Cb29sZWFuQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB3aGV0aGVyIHRoZSBjb250YWN0IGFjY2VwdHMgcGhvbmUgY2FsbHMuIElmIERvIE5vdCBBbGxvdyBpcyBzZWxlY3RlZCwgdGhlIGNvbnRhY3Qgd2lsbCBiZSBleGNsdWRlZCBmcm9tIGFueSBwaG9uZSBjYWxsIGFjdGl2aXRpZXMgZGlzdHJpYnV0ZWQgaW4gbWFya2V0aW5nIGNhbXBhaWducy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdkb25vdHBob25lJyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB3aGV0aGVyIHRoZSBjb250YWN0IGFsbG93cyBkaXJlY3QgbWFpbC4gSWYgRG8gTm90IEFsbG93IGlzIHNlbGVjdGVkLCB0aGUgY29udGFjdCB3aWxsIGJlIGV4Y2x1ZGVkIGZyb20gbGV0dGVyIGFjdGl2aXRpZXMgZGlzdHJpYnV0ZWQgaW4gbWFya2V0aW5nIGNhbXBhaWducy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2Rvbm90cG9zdGFsbWFpbCcpOiBYcm0uQXR0cmlidXRlcy5Cb29sZWFuQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB3aGV0aGVyIHRoZSBjb250YWN0IGFsbG93cyBkaXJlY3QgbWFpbC4gSWYgRG8gTm90IEFsbG93IGlzIHNlbGVjdGVkLCB0aGUgY29udGFjdCB3aWxsIGJlIGV4Y2x1ZGVkIGZyb20gbGV0dGVyIGFjdGl2aXRpZXMgZGlzdHJpYnV0ZWQgaW4gbWFya2V0aW5nIGNhbXBhaWducy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdkb25vdHBvc3RhbG1haWwnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHdoZXRoZXIgdGhlIGNvbnRhY3QgYWNjZXB0cyBtYXJrZXRpbmcgbWF0ZXJpYWxzLCBzdWNoIGFzIGJyb2NodXJlcyBvciBjYXRhbG9ncy4gQ29udGFjdHMgdGhhdCBvcHQgb3V0IGNhbiBiZSBleGNsdWRlZCBmcm9tIG1hcmtldGluZyBpbml0aWF0aXZlcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2Rvbm90c2VuZG1tJyk6IFhybS5BdHRyaWJ1dGVzLkJvb2xlYW5BdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHdoZXRoZXIgdGhlIGNvbnRhY3QgYWNjZXB0cyBtYXJrZXRpbmcgbWF0ZXJpYWxzLCBzdWNoIGFzIGJyb2NodXJlcyBvciBjYXRhbG9ncy4gQ29udGFjdHMgdGhhdCBvcHQgb3V0IGNhbiBiZSBleGNsdWRlZCBmcm9tIG1hcmtldGluZyBpbml0aWF0aXZlcy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdkb25vdHNlbmRtbScpOiBYcm0uQ29udHJvbHMuT3B0aW9uU2V0Q29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTZWxlY3QgdGhlIGNvbnRhY3QncyBoaWdoZXN0IGxldmVsIG9mIGVkdWNhdGlvbiBmb3IgdXNlIGluIHNlZ21lbnRhdGlvbiBhbmQgYW5hbHlzaXMuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdlZHVjYXRpb25jb2RlJyk6IFhybS5BdHRyaWJ1dGVzLk9wdGlvblNldEF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBTZWxlY3QgdGhlIGNvbnRhY3QncyBoaWdoZXN0IGxldmVsIG9mIGVkdWNhdGlvbiBmb3IgdXNlIGluIHNlZ21lbnRhdGlvbiBhbmQgYW5hbHlzaXMuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnZWR1Y2F0aW9uY29kZScpOiBYcm0uQ29udHJvbHMuT3B0aW9uU2V0Q29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBwcmltYXJ5IGVtYWlsIGFkZHJlc3MgZm9yIHRoZSBjb250YWN0LlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnZW1haWxhZGRyZXNzMScpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgcHJpbWFyeSBlbWFpbCBhZGRyZXNzIGZvciB0aGUgY29udGFjdC5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdlbWFpbGFkZHJlc3MxJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHNlY29uZGFyeSBlbWFpbCBhZGRyZXNzIGZvciB0aGUgY29udGFjdC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2VtYWlsYWRkcmVzczInKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHNlY29uZGFyeSBlbWFpbCBhZGRyZXNzIGZvciB0aGUgY29udGFjdC5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdlbWFpbGFkZHJlc3MyJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgYW4gYWx0ZXJuYXRlIGVtYWlsIGFkZHJlc3MgZm9yIHRoZSBjb250YWN0LlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnZW1haWxhZGRyZXNzMycpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSBhbiBhbHRlcm5hdGUgZW1haWwgYWRkcmVzcyBmb3IgdGhlIGNvbnRhY3QuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnZW1haWxhZGRyZXNzMycpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBlbXBsb3llZSBJRCBvciBudW1iZXIgZm9yIHRoZSBjb250YWN0IGZvciByZWZlcmVuY2UgaW4gb3JkZXJzLCBzZXJ2aWNlIGNhc2VzLCBvciBvdGhlciBjb21tdW5pY2F0aW9ucyB3aXRoIHRoZSBjb250YWN0J3Mgb3JnYW5pemF0aW9uLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnZW1wbG95ZWVpZCcpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgZW1wbG95ZWUgSUQgb3IgbnVtYmVyIGZvciB0aGUgY29udGFjdCBmb3IgcmVmZXJlbmNlIGluIG9yZGVycywgc2VydmljZSBjYXNlcywgb3Igb3RoZXIgY29tbXVuaWNhdGlvbnMgd2l0aCB0aGUgY29udGFjdCdzIG9yZ2FuaXphdGlvbi5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdlbXBsb3llZWlkJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFNob3dzIHRoZSBjb252ZXJzaW9uIHJhdGUgb2YgdGhlIHJlY29yZCdzIGN1cnJlbmN5LiBUaGUgZXhjaGFuZ2UgcmF0ZSBpcyB1c2VkIHRvIGNvbnZlcnQgYWxsIG1vbmV5IGZpZWxkcyBpbiB0aGUgcmVjb3JkIGZyb20gdGhlIGxvY2FsIGN1cnJlbmN5IHRvIHRoZSBzeXN0ZW0ncyBkZWZhdWx0IGN1cnJlbmN5LlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnZXhjaGFuZ2VyYXRlJyk6IFhybS5BdHRyaWJ1dGVzLk51bWJlckF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBTaG93cyB0aGUgY29udmVyc2lvbiByYXRlIG9mIHRoZSByZWNvcmQncyBjdXJyZW5jeS4gVGhlIGV4Y2hhbmdlIHJhdGUgaXMgdXNlZCB0byBjb252ZXJ0IGFsbCBtb25leSBmaWVsZHMgaW4gdGhlIHJlY29yZCBmcm9tIHRoZSBsb2NhbCBjdXJyZW5jeSB0byB0aGUgc3lzdGVtJ3MgZGVmYXVsdCBjdXJyZW5jeS5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdleGNoYW5nZXJhdGUnKTogWHJtLkNvbnRyb2xzLk51bWJlckNvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgSWRlbnRpZmllciBmb3IgYW4gZXh0ZXJuYWwgdXNlci5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2V4dGVybmFsdXNlcmlkZW50aWZpZXInKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIElkZW50aWZpZXIgZm9yIGFuIGV4dGVybmFsIHVzZXIuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnZXh0ZXJuYWx1c2VyaWRlbnRpZmllcicpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTZWxlY3QgdGhlIG1hcml0YWwgc3RhdHVzIG9mIHRoZSBjb250YWN0IGZvciByZWZlcmVuY2UgaW4gZm9sbG93LXVwIHBob25lIGNhbGxzIGFuZCBvdGhlciBjb21tdW5pY2F0aW9ucy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2ZhbWlseXN0YXR1c2NvZGUnKTogWHJtLkF0dHJpYnV0ZXMuT3B0aW9uU2V0QXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB0aGUgbWFyaXRhbCBzdGF0dXMgb2YgdGhlIGNvbnRhY3QgZm9yIHJlZmVyZW5jZSBpbiBmb2xsb3ctdXAgcGhvbmUgY2FsbHMgYW5kIG90aGVyIGNvbW11bmljYXRpb25zLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2ZhbWlseXN0YXR1c2NvZGUnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgZmF4IG51bWJlciBmb3IgdGhlIGNvbnRhY3QuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdmYXgnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGZheCBudW1iZXIgZm9yIHRoZSBjb250YWN0LlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2ZheCcpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBjb250YWN0J3MgZmlyc3QgbmFtZSB0byBtYWtlIHN1cmUgdGhlIGNvbnRhY3QgaXMgYWRkcmVzc2VkIGNvcnJlY3RseSBpbiBzYWxlcyBjYWxscywgZW1haWwsIGFuZCBtYXJrZXRpbmcgY2FtcGFpZ25zLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnZmlyc3RuYW1lJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBjb250YWN0J3MgZmlyc3QgbmFtZSB0byBtYWtlIHN1cmUgdGhlIGNvbnRhY3QgaXMgYWRkcmVzc2VkIGNvcnJlY3RseSBpbiBzYWxlcyBjYWxscywgZW1haWwsIGFuZCBtYXJrZXRpbmcgY2FtcGFpZ25zLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2ZpcnN0bmFtZScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBJbmZvcm1hdGlvbiBhYm91dCB3aGV0aGVyIHRvIGFsbG93IGZvbGxvd2luZyBlbWFpbCBhY3Rpdml0eSBsaWtlIG9wZW5zLCBhdHRhY2htZW50IHZpZXdzIGFuZCBsaW5rIGNsaWNrcyBmb3IgZW1haWxzIHNlbnQgdG8gdGhlIGNvbnRhY3QuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdmb2xsb3dlbWFpbCcpOiBYcm0uQXR0cmlidXRlcy5Cb29sZWFuQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIEluZm9ybWF0aW9uIGFib3V0IHdoZXRoZXIgdG8gYWxsb3cgZm9sbG93aW5nIGVtYWlsIGFjdGl2aXR5IGxpa2Ugb3BlbnMsIGF0dGFjaG1lbnQgdmlld3MgYW5kIGxpbmsgY2xpY2tzIGZvciBlbWFpbHMgc2VudCB0byB0aGUgY29udGFjdC5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdmb2xsb3dlbWFpbCcpOiBYcm0uQ29udHJvbHMuT3B0aW9uU2V0Q29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBVUkwgZm9yIHRoZSBjb250YWN0J3MgRlRQIHNpdGUgdG8gZW5hYmxlIHVzZXJzIHRvIGFjY2VzcyBkYXRhIGFuZCBzaGFyZSBkb2N1bWVudHMuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdmdHBzaXRldXJsJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBVUkwgZm9yIHRoZSBjb250YWN0J3MgRlRQIHNpdGUgdG8gZW5hYmxlIHVzZXJzIHRvIGFjY2VzcyBkYXRhIGFuZCBzaGFyZSBkb2N1bWVudHMuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnZnRwc2l0ZXVybCcpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBDb21iaW5lcyBhbmQgc2hvd3MgdGhlIGNvbnRhY3QncyBmaXJzdCBhbmQgbGFzdCBuYW1lcyBzbyB0aGF0IHRoZSBmdWxsIG5hbWUgY2FuIGJlIGRpc3BsYXllZCBpbiB2aWV3cyBhbmQgcmVwb3J0cy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2Z1bGxuYW1lJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBDb21iaW5lcyBhbmQgc2hvd3MgdGhlIGNvbnRhY3QncyBmaXJzdCBhbmQgbGFzdCBuYW1lcyBzbyB0aGF0IHRoZSBmdWxsIG5hbWUgY2FuIGJlIGRpc3BsYXllZCBpbiB2aWV3cyBhbmQgcmVwb3J0cy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdmdWxsbmFtZScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTZWxlY3QgdGhlIGNvbnRhY3QncyBnZW5kZXIgdG8gbWFrZSBzdXJlIHRoZSBjb250YWN0IGlzIGFkZHJlc3NlZCBjb3JyZWN0bHkgaW4gc2FsZXMgY2FsbHMsIGVtYWlsLCBhbmQgbWFya2V0aW5nIGNhbXBhaWducy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2dlbmRlcmNvZGUnKTogWHJtLkF0dHJpYnV0ZXMuT3B0aW9uU2V0QXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB0aGUgY29udGFjdCdzIGdlbmRlciB0byBtYWtlIHN1cmUgdGhlIGNvbnRhY3QgaXMgYWRkcmVzc2VkIGNvcnJlY3RseSBpbiBzYWxlcyBjYWxscywgZW1haWwsIGFuZCBtYXJrZXRpbmcgY2FtcGFpZ25zLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2dlbmRlcmNvZGUnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgcGFzc3BvcnQgbnVtYmVyIG9yIG90aGVyIGdvdmVybm1lbnQgSUQgZm9yIHRoZSBjb250YWN0IGZvciB1c2UgaW4gZG9jdW1lbnRzIG9yIHJlcG9ydHMuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdnb3Zlcm5tZW50aWQnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHBhc3Nwb3J0IG51bWJlciBvciBvdGhlciBnb3Zlcm5tZW50IElEIGZvciB0aGUgY29udGFjdCBmb3IgdXNlIGluIGRvY3VtZW50cyBvciByZXBvcnRzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2dvdmVybm1lbnRpZCcpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTZWxlY3Qgd2hldGhlciB0aGUgY29udGFjdCBoYXMgYW55IGNoaWxkcmVuIGZvciByZWZlcmVuY2UgaW4gZm9sbG93LXVwIHBob25lIGNhbGxzIGFuZCBvdGhlciBjb21tdW5pY2F0aW9ucy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2hhc2NoaWxkcmVuY29kZScpOiBYcm0uQXR0cmlidXRlcy5PcHRpb25TZXRBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHdoZXRoZXIgdGhlIGNvbnRhY3QgaGFzIGFueSBjaGlsZHJlbiBmb3IgcmVmZXJlbmNlIGluIGZvbGxvdy11cCBwaG9uZSBjYWxscyBhbmQgb3RoZXIgY29tbXVuaWNhdGlvbnMuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnaGFzY2hpbGRyZW5jb2RlJyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgYSBzZWNvbmQgaG9tZSBwaG9uZSBudW1iZXIgZm9yIHRoaXMgY29udGFjdC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2hvbWUyJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIGEgc2Vjb25kIGhvbWUgcGhvbmUgbnVtYmVyIGZvciB0aGlzIGNvbnRhY3QuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnaG9tZTInKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIGRhdGEgaW1wb3J0IG9yIGRhdGEgbWlncmF0aW9uIHRoYXQgY3JlYXRlZCB0aGlzIHJlY29yZC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2ltcG9ydHNlcXVlbmNlbnVtYmVyJyk6IFhybS5BdHRyaWJ1dGVzLk51bWJlckF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBVbmlxdWUgaWRlbnRpZmllciBvZiB0aGUgZGF0YSBpbXBvcnQgb3IgZGF0YSBtaWdyYXRpb24gdGhhdCBjcmVhdGVkIHRoaXMgcmVjb3JkLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2ltcG9ydHNlcXVlbmNlbnVtYmVyJyk6IFhybS5Db250cm9scy5OdW1iZXJDb250cm9sO1xyXG4gICAgLypcclxuICAgIEluZm9ybWF0aW9uIGFib3V0IHdoZXRoZXIgdGhlIGNvbnRhY3Qgd2FzIGF1dG8tY3JlYXRlZCB3aGVuIHByb21vdGluZyBhbiBlbWFpbCBvciBhbiBhcHBvaW50bWVudC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2lzYXV0b2NyZWF0ZScpOiBYcm0uQXR0cmlidXRlcy5Cb29sZWFuQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIEluZm9ybWF0aW9uIGFib3V0IHdoZXRoZXIgdGhlIGNvbnRhY3Qgd2FzIGF1dG8tY3JlYXRlZCB3aGVuIHByb21vdGluZyBhbiBlbWFpbCBvciBhbiBhcHBvaW50bWVudC5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdpc2F1dG9jcmVhdGUnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHdoZXRoZXIgdGhlIGNvbnRhY3QgZXhpc3RzIGluIGEgc2VwYXJhdGUgYWNjb3VudGluZyBvciBvdGhlciBzeXN0ZW0sIHN1Y2ggYXMgTWljcm9zb2Z0IER5bmFtaWNzIEdQIG9yIGFub3RoZXIgRVJQIGRhdGFiYXNlLCBmb3IgdXNlIGluIGludGVncmF0aW9uIHByb2Nlc3Nlcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2lzYmFja29mZmljZWN1c3RvbWVyJyk6IFhybS5BdHRyaWJ1dGVzLkJvb2xlYW5BdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHdoZXRoZXIgdGhlIGNvbnRhY3QgZXhpc3RzIGluIGEgc2VwYXJhdGUgYWNjb3VudGluZyBvciBvdGhlciBzeXN0ZW0sIHN1Y2ggYXMgTWljcm9zb2Z0IER5bmFtaWNzIEdQIG9yIGFub3RoZXIgRVJQIGRhdGFiYXNlLCBmb3IgdXNlIGluIGludGVncmF0aW9uIHByb2Nlc3Nlcy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdpc2JhY2tvZmZpY2VjdXN0b21lcicpOiBYcm0uQ29udHJvbHMuT3B0aW9uU2V0Q29udHJvbDtcclxuICAgIC8qXHJcbiAgICBcclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2lzcHJpdmF0ZScpOiBYcm0uQXR0cmlidXRlcy5Cb29sZWFuQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2lzcHJpdmF0ZScpOiBYcm0uQ29udHJvbHMuT3B0aW9uU2V0Q29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBqb2IgdGl0bGUgb2YgdGhlIGNvbnRhY3QgdG8gbWFrZSBzdXJlIHRoZSBjb250YWN0IGlzIGFkZHJlc3NlZCBjb3JyZWN0bHkgaW4gc2FsZXMgY2FsbHMsIGVtYWlsLCBhbmQgbWFya2V0aW5nIGNhbXBhaWducy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2pvYnRpdGxlJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBqb2IgdGl0bGUgb2YgdGhlIGNvbnRhY3QgdG8gbWFrZSBzdXJlIHRoZSBjb250YWN0IGlzIGFkZHJlc3NlZCBjb3JyZWN0bHkgaW4gc2FsZXMgY2FsbHMsIGVtYWlsLCBhbmQgbWFya2V0aW5nIGNhbXBhaWducy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdqb2J0aXRsZScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBjb250YWN0J3MgbGFzdCBuYW1lIHRvIG1ha2Ugc3VyZSB0aGUgY29udGFjdCBpcyBhZGRyZXNzZWQgY29ycmVjdGx5IGluIHNhbGVzIGNhbGxzLCBlbWFpbCwgYW5kIG1hcmtldGluZyBjYW1wYWlnbnMuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdsYXN0bmFtZScpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgY29udGFjdCdzIGxhc3QgbmFtZSB0byBtYWtlIHN1cmUgdGhlIGNvbnRhY3QgaXMgYWRkcmVzc2VkIGNvcnJlY3RseSBpbiBzYWxlcyBjYWxscywgZW1haWwsIGFuZCBtYXJrZXRpbmcgY2FtcGFpZ25zLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2xhc3RuYW1lJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIENvbnRhaW5zIHRoZSBkYXRlIGFuZCB0aW1lIHN0YW1wIG9mIHRoZSBsYXN0IG9uIGhvbGQgdGltZS5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2xhc3RvbmhvbGR0aW1lJyk6IFhybS5BdHRyaWJ1dGVzLkRhdGVBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgQ29udGFpbnMgdGhlIGRhdGUgYW5kIHRpbWUgc3RhbXAgb2YgdGhlIGxhc3Qgb24gaG9sZCB0aW1lLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2xhc3RvbmhvbGR0aW1lJyk6IFhybS5Db250cm9scy5EYXRlQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTaG93cyB0aGUgZGF0ZSB3aGVuIHRoZSBjb250YWN0IHdhcyBsYXN0IGluY2x1ZGVkIGluIGEgbWFya2V0aW5nIGNhbXBhaWduIG9yIHF1aWNrIGNhbXBhaWduLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnbGFzdHVzZWRpbmNhbXBhaWduJyk6IFhybS5BdHRyaWJ1dGVzLkRhdGVBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgU2hvd3MgdGhlIGRhdGUgd2hlbiB0aGUgY29udGFjdCB3YXMgbGFzdCBpbmNsdWRlZCBpbiBhIG1hcmtldGluZyBjYW1wYWlnbiBvciBxdWljayBjYW1wYWlnbi5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdsYXN0dXNlZGluY2FtcGFpZ24nKTogWHJtLkNvbnRyb2xzLkRhdGVDb250cm9sO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB0aGUgcHJpbWFyeSBtYXJrZXRpbmcgc291cmNlIHRoYXQgZGlyZWN0ZWQgdGhlIGNvbnRhY3QgdG8geW91ciBvcmdhbml6YXRpb24uXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdsZWFkc291cmNlY29kZScpOiBYcm0uQXR0cmlidXRlcy5PcHRpb25TZXRBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHRoZSBwcmltYXJ5IG1hcmtldGluZyBzb3VyY2UgdGhhdCBkaXJlY3RlZCB0aGUgY29udGFjdCB0byB5b3VyIG9yZ2FuaXphdGlvbi5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdsZWFkc291cmNlY29kZScpOiBYcm0uQ29udHJvbHMuT3B0aW9uU2V0Q29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBuYW1lIG9mIHRoZSBjb250YWN0J3MgbWFuYWdlciBmb3IgdXNlIGluIGVzY2FsYXRpbmcgaXNzdWVzIG9yIG90aGVyIGZvbGxvdy11cCBjb21tdW5pY2F0aW9ucyB3aXRoIHRoZSBjb250YWN0LlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnbWFuYWdlcm5hbWUnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIG5hbWUgb2YgdGhlIGNvbnRhY3QncyBtYW5hZ2VyIGZvciB1c2UgaW4gZXNjYWxhdGluZyBpc3N1ZXMgb3Igb3RoZXIgZm9sbG93LXVwIGNvbW11bmljYXRpb25zIHdpdGggdGhlIGNvbnRhY3QuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnbWFuYWdlcm5hbWUnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgcGhvbmUgbnVtYmVyIGZvciB0aGUgY29udGFjdCdzIG1hbmFnZXIuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdtYW5hZ2VycGhvbmUnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHBob25lIG51bWJlciBmb3IgdGhlIGNvbnRhY3QncyBtYW5hZ2VyLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ21hbmFnZXJwaG9uZScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBXaGV0aGVyIGlzIG9ubHkgZm9yIG1hcmtldGluZ1xyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnbWFya2V0aW5nb25seScpOiBYcm0uQXR0cmlidXRlcy5Cb29sZWFuQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFdoZXRoZXIgaXMgb25seSBmb3IgbWFya2V0aW5nXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnbWFya2V0aW5nb25seScpOiBYcm0uQ29udHJvbHMuT3B0aW9uU2V0Q29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTaG93cyB3aGV0aGVyIHRoZSBhY2NvdW50IGhhcyBiZWVuIG1lcmdlZCB3aXRoIGEgbWFzdGVyIGNvbnRhY3QuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdtZXJnZWQnKTogWHJtLkF0dHJpYnV0ZXMuQm9vbGVhbkF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBTaG93cyB3aGV0aGVyIHRoZSBhY2NvdW50IGhhcyBiZWVuIG1lcmdlZCB3aXRoIGEgbWFzdGVyIGNvbnRhY3QuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnbWVyZ2VkJyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGNvbnRhY3QncyBtaWRkbGUgbmFtZSBvciBpbml0aWFsIHRvIG1ha2Ugc3VyZSB0aGUgY29udGFjdCBpcyBhZGRyZXNzZWQgY29ycmVjdGx5LlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnbWlkZGxlbmFtZScpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgY29udGFjdCdzIG1pZGRsZSBuYW1lIG9yIGluaXRpYWwgdG8gbWFrZSBzdXJlIHRoZSBjb250YWN0IGlzIGFkZHJlc3NlZCBjb3JyZWN0bHkuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnbWlkZGxlbmFtZScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBtb2JpbGUgcGhvbmUgbnVtYmVyIGZvciB0aGUgY29udGFjdC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ21vYmlsZXBob25lJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBtb2JpbGUgcGhvbmUgbnVtYmVyIGZvciB0aGUgY29udGFjdC5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdtb2JpbGVwaG9uZScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTaG93cyB0aGUgZGF0ZSBhbmQgdGltZSB3aGVuIHRoZSByZWNvcmQgd2FzIGxhc3QgdXBkYXRlZC4gVGhlIGRhdGUgYW5kIHRpbWUgYXJlIGRpc3BsYXllZCBpbiB0aGUgdGltZSB6b25lIHNlbGVjdGVkIGluIE1pY3Jvc29mdCBEeW5hbWljcyAzNjUgb3B0aW9ucy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ21vZGlmaWVkb24nKTogWHJtLkF0dHJpYnV0ZXMuRGF0ZUF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBTaG93cyB0aGUgZGF0ZSBhbmQgdGltZSB3aGVuIHRoZSByZWNvcmQgd2FzIGxhc3QgdXBkYXRlZC4gVGhlIGRhdGUgYW5kIHRpbWUgYXJlIGRpc3BsYXllZCBpbiB0aGUgdGltZSB6b25lIHNlbGVjdGVkIGluIE1pY3Jvc29mdCBEeW5hbWljcyAzNjUgb3B0aW9ucy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdtb2RpZmllZG9uJyk6IFhybS5Db250cm9scy5EYXRlQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBEZXNjcmliZXMgd2hldGhlciBjb250YWN0IGlzIG9wdGVkIG91dCBvciBub3RcclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ21zZHluX2dkcHJvcHRvdXQnKTogWHJtLkF0dHJpYnV0ZXMuQm9vbGVhbkF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBEZXNjcmliZXMgd2hldGhlciBjb250YWN0IGlzIG9wdGVkIG91dCBvciBub3RcclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdtc2R5bl9nZHByb3B0b3V0Jyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFdoZXRoZXIgb3Igbm90IHRoZSBjb250YWN0IGJlbG9uZ3MgdG8gdGhlIGFzc29jaWF0ZWQgYWNjb3VudFxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnbXNkeW5fb3JnY2hhbmdlc3RhdHVzJyk6IFhybS5BdHRyaWJ1dGVzLk9wdGlvblNldEF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBXaGV0aGVyIG9yIG5vdCB0aGUgY29udGFjdCBiZWxvbmdzIHRvIHRoZSBhc3NvY2lhdGVkIGFjY291bnRcclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdtc2R5bl9vcmdjaGFuZ2VzdGF0dXMnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdtc2R5bmNybV9pbnNpZ2h0c19wbGFjZWhvbGRlcicpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnbXNkeW5jcm1faW5zaWdodHNfcGxhY2Vob2xkZXInKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdtc2R5bmNybV9tYXJrZXRpbmdmb3Jtc3VibWlzc2lvbmRhdGVwcmVjaXNlJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBcclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdtc2R5bmNybV9tYXJrZXRpbmdmb3Jtc3VibWlzc2lvbmRhdGVwcmVjaXNlJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnbXNkeW5jcm1fcmVtZW1iZXJtZScpOiBYcm0uQXR0cmlidXRlcy5Cb29sZWFuQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ21zZHluY3JtX3JlbWVtYmVybWUnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdtc2V2dG1ndF9hYWRvYmplY3RpZCcpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnbXNldnRtZ3RfYWFkb2JqZWN0aWQnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IHdoZXRoZXIgY29udGFjdCBhbGxvd3MgdHJhY2tpbmcgaW50ZXJhY3Rpb24gZGF0YS4gSWYgRG8gTm90IEFsbG93IGlzIHNlbGVjdGVkLCBNaWNyb3NvZnQgRHluYW1pY3MgMzY1IHdpbGwgbm90IHNhdmUgaW50ZXJhY3Rpb24gZGF0YSBmb3IgdGhlIGNvbnRhY3QuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdtc2dkcHJfZG9ub3R0cmFjaycpOiBYcm0uQXR0cmlidXRlcy5Cb29sZWFuQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB3aGV0aGVyIGNvbnRhY3QgYWxsb3dzIHRyYWNraW5nIGludGVyYWN0aW9uIGRhdGEuIElmIERvIE5vdCBBbGxvdyBpcyBzZWxlY3RlZCwgTWljcm9zb2Z0IER5bmFtaWNzIDM2NSB3aWxsIG5vdCBzYXZlIGludGVyYWN0aW9uIGRhdGEgZm9yIHRoZSBjb250YWN0LlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ21zZ2Rwcl9kb25vdHRyYWNrJyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnbXNnZHByX2dkcHJjb25zZW50Jyk6IFhybS5BdHRyaWJ1dGVzLk9wdGlvblNldEF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBcclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdtc2dkcHJfZ2RwcmNvbnNlbnQnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdtc2dkcHJfZ2RwcmlzY2hpbGQnKTogWHJtLkF0dHJpYnV0ZXMuQm9vbGVhbkF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBcclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdtc2dkcHJfZ2RwcmlzY2hpbGQnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgY29udGFjdCdzIG5pY2tuYW1lLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnbmlja25hbWUnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGNvbnRhY3QncyBuaWNrbmFtZS5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICduaWNrbmFtZScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBudW1iZXIgb2YgY2hpbGRyZW4gdGhlIGNvbnRhY3QgaGFzIGZvciByZWZlcmVuY2UgaW4gZm9sbG93LXVwIHBob25lIGNhbGxzIGFuZCBvdGhlciBjb21tdW5pY2F0aW9ucy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ251bWJlcm9mY2hpbGRyZW4nKTogWHJtLkF0dHJpYnV0ZXMuTnVtYmVyQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIG51bWJlciBvZiBjaGlsZHJlbiB0aGUgY29udGFjdCBoYXMgZm9yIHJlZmVyZW5jZSBpbiBmb2xsb3ctdXAgcGhvbmUgY2FsbHMgYW5kIG90aGVyIGNvbW11bmljYXRpb25zLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ251bWJlcm9mY2hpbGRyZW4nKTogWHJtLkNvbnRyb2xzLk51bWJlckNvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgU2hvd3MgaG93IGxvbmcsIGluIG1pbnV0ZXMsIHRoYXQgdGhlIHJlY29yZCB3YXMgb24gaG9sZC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ29uaG9sZHRpbWUnKTogWHJtLkF0dHJpYnV0ZXMuTnVtYmVyQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNob3dzIGhvdyBsb25nLCBpbiBtaW51dGVzLCB0aGF0IHRoZSByZWNvcmQgd2FzIG9uIGhvbGQuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnb25ob2xkdGltZScpOiBYcm0uQ29udHJvbHMuTnVtYmVyQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBEYXRlIGFuZCB0aW1lIHRoYXQgdGhlIHJlY29yZCB3YXMgbWlncmF0ZWQuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdvdmVycmlkZGVuY3JlYXRlZG9uJyk6IFhybS5BdHRyaWJ1dGVzLkRhdGVBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgRGF0ZSBhbmQgdGltZSB0aGF0IHRoZSByZWNvcmQgd2FzIG1pZ3JhdGVkLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ292ZXJyaWRkZW5jcmVhdGVkb24nKTogWHJtLkNvbnRyb2xzLkRhdGVDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHBhZ2VyIG51bWJlciBmb3IgdGhlIGNvbnRhY3QuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdwYWdlcicpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgcGFnZXIgbnVtYmVyIGZvciB0aGUgY29udGFjdC5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdwYWdlcicpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBTaG93cyB3aGV0aGVyIHRoZSBjb250YWN0IHBhcnRpY2lwYXRlcyBpbiB3b3JrZmxvdyBydWxlcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ3BhcnRpY2lwYXRlc2lud29ya2Zsb3cnKTogWHJtLkF0dHJpYnV0ZXMuQm9vbGVhbkF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBTaG93cyB3aGV0aGVyIHRoZSBjb250YWN0IHBhcnRpY2lwYXRlcyBpbiB3b3JrZmxvdyBydWxlcy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdwYXJ0aWNpcGF0ZXNpbndvcmtmbG93Jyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB0aGUgcGF5bWVudCB0ZXJtcyB0byBpbmRpY2F0ZSB3aGVuIHRoZSBjdXN0b21lciBuZWVkcyB0byBwYXkgdGhlIHRvdGFsIGFtb3VudC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ3BheW1lbnR0ZXJtc2NvZGUnKTogWHJtLkF0dHJpYnV0ZXMuT3B0aW9uU2V0QXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB0aGUgcGF5bWVudCB0ZXJtcyB0byBpbmRpY2F0ZSB3aGVuIHRoZSBjdXN0b21lciBuZWVkcyB0byBwYXkgdGhlIHRvdGFsIGFtb3VudC5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdwYXltZW50dGVybXNjb2RlJyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB0aGUgcHJlZmVycmVkIGRheSBvZiB0aGUgd2VlayBmb3Igc2VydmljZSBhcHBvaW50bWVudHMuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdwcmVmZXJyZWRhcHBvaW50bWVudGRheWNvZGUnKTogWHJtLkF0dHJpYnV0ZXMuT3B0aW9uU2V0QXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB0aGUgcHJlZmVycmVkIGRheSBvZiB0aGUgd2VlayBmb3Igc2VydmljZSBhcHBvaW50bWVudHMuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAncHJlZmVycmVkYXBwb2ludG1lbnRkYXljb2RlJyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB0aGUgcHJlZmVycmVkIHRpbWUgb2YgZGF5IGZvciBzZXJ2aWNlIGFwcG9pbnRtZW50cy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ3ByZWZlcnJlZGFwcG9pbnRtZW50dGltZWNvZGUnKTogWHJtLkF0dHJpYnV0ZXMuT3B0aW9uU2V0QXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB0aGUgcHJlZmVycmVkIHRpbWUgb2YgZGF5IGZvciBzZXJ2aWNlIGFwcG9pbnRtZW50cy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdwcmVmZXJyZWRhcHBvaW50bWVudHRpbWVjb2RlJyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB0aGUgcHJlZmVycmVkIG1ldGhvZCBvZiBjb250YWN0LlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAncHJlZmVycmVkY29udGFjdG1ldGhvZGNvZGUnKTogWHJtLkF0dHJpYnV0ZXMuT3B0aW9uU2V0QXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCB0aGUgcHJlZmVycmVkIG1ldGhvZCBvZiBjb250YWN0LlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ3ByZWZlcnJlZGNvbnRhY3RtZXRob2Rjb2RlJyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHNhbHV0YXRpb24gb2YgdGhlIGNvbnRhY3QgdG8gbWFrZSBzdXJlIHRoZSBjb250YWN0IGlzIGFkZHJlc3NlZCBjb3JyZWN0bHkgaW4gc2FsZXMgY2FsbHMsIGVtYWlsIG1lc3NhZ2VzLCBhbmQgbWFya2V0aW5nIGNhbXBhaWducy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ3NhbHV0YXRpb24nKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHNhbHV0YXRpb24gb2YgdGhlIGNvbnRhY3QgdG8gbWFrZSBzdXJlIHRoZSBjb250YWN0IGlzIGFkZHJlc3NlZCBjb3JyZWN0bHkgaW4gc2FsZXMgY2FsbHMsIGVtYWlsIG1lc3NhZ2VzLCBhbmQgbWFya2V0aW5nIGNhbXBhaWducy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdzYWx1dGF0aW9uJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFNlbGVjdCBhIHNoaXBwaW5nIG1ldGhvZCBmb3IgZGVsaXZlcmllcyBzZW50IHRvIHRoaXMgYWRkcmVzcy5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ3NoaXBwaW5nbWV0aG9kY29kZScpOiBYcm0uQXR0cmlidXRlcy5PcHRpb25TZXRBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IGEgc2hpcHBpbmcgbWV0aG9kIGZvciBkZWxpdmVyaWVzIHNlbnQgdG8gdGhpcyBhZGRyZXNzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ3NoaXBwaW5nbWV0aG9kY29kZScpOiBYcm0uQ29udHJvbHMuT3B0aW9uU2V0Q29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBuYW1lIG9mIHRoZSBjb250YWN0J3Mgc3BvdXNlIG9yIHBhcnRuZXIgZm9yIHJlZmVyZW5jZSBkdXJpbmcgY2FsbHMsIGV2ZW50cywgb3Igb3RoZXIgY29tbXVuaWNhdGlvbnMgd2l0aCB0aGUgY29udGFjdC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ3Nwb3VzZXNuYW1lJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBuYW1lIG9mIHRoZSBjb250YWN0J3Mgc3BvdXNlIG9yIHBhcnRuZXIgZm9yIHJlZmVyZW5jZSBkdXJpbmcgY2FsbHMsIGV2ZW50cywgb3Igb3RoZXIgY29tbXVuaWNhdGlvbnMgd2l0aCB0aGUgY29udGFjdC5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdzcG91c2VzbmFtZScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBzdWZmaXggdXNlZCBpbiB0aGUgY29udGFjdCdzIG5hbWUsIHN1Y2ggYXMgSnIuIG9yIFNyLiB0byBtYWtlIHN1cmUgdGhlIGNvbnRhY3QgaXMgYWRkcmVzc2VkIGNvcnJlY3RseSBpbiBzYWxlcyBjYWxscywgZW1haWwsIGFuZCBtYXJrZXRpbmcgY2FtcGFpZ25zLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnc3VmZml4Jyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBzdWZmaXggdXNlZCBpbiB0aGUgY29udGFjdCdzIG5hbWUsIHN1Y2ggYXMgSnIuIG9yIFNyLiB0byBtYWtlIHN1cmUgdGhlIGNvbnRhY3QgaXMgYWRkcmVzc2VkIGNvcnJlY3RseSBpbiBzYWxlcyBjYWxscywgZW1haWwsIGFuZCBtYXJrZXRpbmcgY2FtcGFpZ25zLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ3N1ZmZpeCcpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBOdW1iZXIgb2YgdXNlcnMgb3IgY29udmVyc2F0aW9ucyBmb2xsb3dlZCB0aGUgcmVjb3JkXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICd0ZWFtc2ZvbGxvd2VkJyk6IFhybS5BdHRyaWJ1dGVzLk51bWJlckF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBOdW1iZXIgb2YgdXNlcnMgb3IgY29udmVyc2F0aW9ucyBmb2xsb3dlZCB0aGUgcmVjb3JkXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAndGVhbXNmb2xsb3dlZCcpOiBYcm0uQ29udHJvbHMuTnVtYmVyQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBtYWluIHBob25lIG51bWJlciBmb3IgdGhpcyBjb250YWN0LlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAndGVsZXBob25lMScpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgbWFpbiBwaG9uZSBudW1iZXIgZm9yIHRoaXMgY29udGFjdC5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICd0ZWxlcGhvbmUxJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgYSBzZWNvbmQgcGhvbmUgbnVtYmVyIGZvciB0aGlzIGNvbnRhY3QuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICd0ZWxlcGhvbmUyJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBUeXBlIGEgc2Vjb25kIHBob25lIG51bWJlciBmb3IgdGhpcyBjb250YWN0LlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ3RlbGVwaG9uZTInKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSBhIHRoaXJkIHBob25lIG51bWJlciBmb3IgdGhpcyBjb250YWN0LlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAndGVsZXBob25lMycpOiBYcm0uQXR0cmlidXRlcy5TdHJpbmdBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVHlwZSBhIHRoaXJkIHBob25lIG51bWJlciBmb3IgdGhpcyBjb250YWN0LlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ3RlbGVwaG9uZTMnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IGEgcmVnaW9uIG9yIHRlcnJpdG9yeSBmb3IgdGhlIGNvbnRhY3QgZm9yIHVzZSBpbiBzZWdtZW50YXRpb24gYW5kIGFuYWx5c2lzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAndGVycml0b3J5Y29kZScpOiBYcm0uQXR0cmlidXRlcy5PcHRpb25TZXRBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgU2VsZWN0IGEgcmVnaW9uIG9yIHRlcnJpdG9yeSBmb3IgdGhlIGNvbnRhY3QgZm9yIHVzZSBpbiBzZWdtZW50YXRpb24gYW5kIGFuYWx5c2lzLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ3RlcnJpdG9yeWNvZGUnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVG90YWwgdGltZSBzcGVudCBmb3IgZW1haWxzIChyZWFkIGFuZCB3cml0ZSkgYW5kIG1lZXRpbmdzIGJ5IG1lIGluIHJlbGF0aW9uIHRvIHRoZSBjb250YWN0IHJlY29yZC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ3RpbWVzcGVudGJ5bWVvbmVtYWlsYW5kbWVldGluZ3MnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFRvdGFsIHRpbWUgc3BlbnQgZm9yIGVtYWlscyAocmVhZCBhbmQgd3JpdGUpIGFuZCBtZWV0aW5ncyBieSBtZSBpbiByZWxhdGlvbiB0byB0aGUgY29udGFjdCByZWNvcmQuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAndGltZXNwZW50YnltZW9uZW1haWxhbmRtZWV0aW5ncycpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBGb3IgaW50ZXJuYWwgdXNlIG9ubHkuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICd0aW1lem9uZXJ1bGV2ZXJzaW9ubnVtYmVyJyk6IFhybS5BdHRyaWJ1dGVzLk51bWJlckF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBGb3IgaW50ZXJuYWwgdXNlIG9ubHkuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAndGltZXpvbmVydWxldmVyc2lvbm51bWJlcicpOiBYcm0uQ29udHJvbHMuTnVtYmVyQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBGb3IgaW50ZXJuYWwgdXNlIG9ubHkuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICd0cmF2ZXJzZWRwYXRoJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBGb3IgaW50ZXJuYWwgdXNlIG9ubHkuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAndHJhdmVyc2VkcGF0aCcpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUaW1lIHpvbmUgY29kZSB0aGF0IHdhcyBpbiB1c2Ugd2hlbiB0aGUgcmVjb3JkIHdhcyBjcmVhdGVkLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAndXRjY29udmVyc2lvbnRpbWV6b25lY29kZScpOiBYcm0uQXR0cmlidXRlcy5OdW1iZXJBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgVGltZSB6b25lIGNvZGUgdGhhdCB3YXMgaW4gdXNlIHdoZW4gdGhlIHJlY29yZCB3YXMgY3JlYXRlZC5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICd1dGNjb252ZXJzaW9udGltZXpvbmVjb2RlJyk6IFhybS5Db250cm9scy5OdW1iZXJDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGNvbnRhY3QncyBwcm9mZXNzaW9uYWwgb3IgcGVyc29uYWwgd2Vic2l0ZSBvciBibG9nIFVSTC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ3dlYnNpdGV1cmwnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIGNvbnRhY3QncyBwcm9mZXNzaW9uYWwgb3IgcGVyc29uYWwgd2Vic2l0ZSBvciBibG9nIFVSTC5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICd3ZWJzaXRldXJsJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHBob25ldGljIHNwZWxsaW5nIG9mIHRoZSBjb250YWN0J3MgZmlyc3QgbmFtZSwgaWYgdGhlIG5hbWUgaXMgc3BlY2lmaWVkIGluIEphcGFuZXNlLCB0byBtYWtlIHN1cmUgdGhlIG5hbWUgaXMgcHJvbm91bmNlZCBjb3JyZWN0bHkgaW4gcGhvbmUgY2FsbHMgd2l0aCB0aGUgY29udGFjdC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ3lvbWlmaXJzdG5hbWUnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHBob25ldGljIHNwZWxsaW5nIG9mIHRoZSBjb250YWN0J3MgZmlyc3QgbmFtZSwgaWYgdGhlIG5hbWUgaXMgc3BlY2lmaWVkIGluIEphcGFuZXNlLCB0byBtYWtlIHN1cmUgdGhlIG5hbWUgaXMgcHJvbm91bmNlZCBjb3JyZWN0bHkgaW4gcGhvbmUgY2FsbHMgd2l0aCB0aGUgY29udGFjdC5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICd5b21pZmlyc3RuYW1lJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFNob3dzIHRoZSBjb21iaW5lZCBZb21pIGZpcnN0IGFuZCBsYXN0IG5hbWVzIG9mIHRoZSBjb250YWN0IHNvIHRoYXQgdGhlIGZ1bGwgcGhvbmV0aWMgbmFtZSBjYW4gYmUgZGlzcGxheWVkIGluIHZpZXdzIGFuZCByZXBvcnRzLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAneW9taWZ1bGxuYW1lJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBTaG93cyB0aGUgY29tYmluZWQgWW9taSBmaXJzdCBhbmQgbGFzdCBuYW1lcyBvZiB0aGUgY29udGFjdCBzbyB0aGF0IHRoZSBmdWxsIHBob25ldGljIG5hbWUgY2FuIGJlIGRpc3BsYXllZCBpbiB2aWV3cyBhbmQgcmVwb3J0cy5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICd5b21pZnVsbG5hbWUnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVHlwZSB0aGUgcGhvbmV0aWMgc3BlbGxpbmcgb2YgdGhlIGNvbnRhY3QncyBsYXN0IG5hbWUsIGlmIHRoZSBuYW1lIGlzIHNwZWNpZmllZCBpbiBKYXBhbmVzZSwgdG8gbWFrZSBzdXJlIHRoZSBuYW1lIGlzIHByb25vdW5jZWQgY29ycmVjdGx5IGluIHBob25lIGNhbGxzIHdpdGggdGhlIGNvbnRhY3QuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICd5b21pbGFzdG5hbWUnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHBob25ldGljIHNwZWxsaW5nIG9mIHRoZSBjb250YWN0J3MgbGFzdCBuYW1lLCBpZiB0aGUgbmFtZSBpcyBzcGVjaWZpZWQgaW4gSmFwYW5lc2UsIHRvIG1ha2Ugc3VyZSB0aGUgbmFtZSBpcyBwcm9ub3VuY2VkIGNvcnJlY3RseSBpbiBwaG9uZSBjYWxscyB3aXRoIHRoZSBjb250YWN0LlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ3lvbWlsYXN0bmFtZScpOiBYcm0uQ29udHJvbHMuU3RyaW5nQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBUeXBlIHRoZSBwaG9uZXRpYyBzcGVsbGluZyBvZiB0aGUgY29udGFjdCdzIG1pZGRsZSBuYW1lLCBpZiB0aGUgbmFtZSBpcyBzcGVjaWZpZWQgaW4gSmFwYW5lc2UsIHRvIG1ha2Ugc3VyZSB0aGUgbmFtZSBpcyBwcm9ub3VuY2VkIGNvcnJlY3RseSBpbiBwaG9uZSBjYWxscyB3aXRoIHRoZSBjb250YWN0LlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAneW9taW1pZGRsZW5hbWUnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFR5cGUgdGhlIHBob25ldGljIHNwZWxsaW5nIG9mIHRoZSBjb250YWN0J3MgbWlkZGxlIG5hbWUsIGlmIHRoZSBuYW1lIGlzIHNwZWNpZmllZCBpbiBKYXBhbmVzZSwgdG8gbWFrZSBzdXJlIHRoZSBuYW1lIGlzIHByb25vdW5jZWQgY29ycmVjdGx5IGluIHBob25lIGNhbGxzIHdpdGggdGhlIGNvbnRhY3QuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAneW9taW1pZGRsZW5hbWUnKTogWHJtLkNvbnRyb2xzLlN0cmluZ0NvbnRyb2w7XHJcbn1cclxuLy8gRW50aXR5IENvbnRhY3RcclxuZXhwb3J0IGNvbnN0IGNvbnRhY3RNZXRhZGF0YSA9IHtcclxuICB0eXBlTmFtZTogXCJtc2NybS5jb250YWN0XCIsXHJcbiAgbG9naWNhbE5hbWU6IFwiY29udGFjdFwiLFxyXG4gIGNvbGxlY3Rpb25OYW1lOiBcImNvbnRhY3RzXCIsXHJcbiAgcHJpbWFyeUlkQXR0cmlidXRlOiBcImNvbnRhY3RpZFwiLFxyXG4gIGF0dHJpYnV0ZVR5cGVzOiB7XHJcbiAgICAvLyBOdW1lcmljIFR5cGVzXHJcbiAgICBhZGRyZXNzMV9sYXRpdHVkZTogXCJEb3VibGVcIixcclxuICAgIGFkZHJlc3MxX2xvbmdpdHVkZTogXCJEb3VibGVcIixcclxuICAgIGFkZHJlc3MxX3V0Y29mZnNldDogXCJJbnRlZ2VyXCIsXHJcbiAgICBhZGRyZXNzMl9sYXRpdHVkZTogXCJEb3VibGVcIixcclxuICAgIGFkZHJlc3MyX2xvbmdpdHVkZTogXCJEb3VibGVcIixcclxuICAgIGFkZHJlc3MyX3V0Y29mZnNldDogXCJJbnRlZ2VyXCIsXHJcbiAgICBhZGRyZXNzM19sYXRpdHVkZTogXCJEb3VibGVcIixcclxuICAgIGFkZHJlc3MzX2xvbmdpdHVkZTogXCJEb3VibGVcIixcclxuICAgIGFkZHJlc3MzX3V0Y29mZnNldDogXCJJbnRlZ2VyXCIsXHJcbiAgICBhZ2luZzMwOiBcIk1vbmV5XCIsXHJcbiAgICBhZ2luZzMwX2Jhc2U6IFwiTW9uZXlcIixcclxuICAgIGFnaW5nNjA6IFwiTW9uZXlcIixcclxuICAgIGFnaW5nNjBfYmFzZTogXCJNb25leVwiLFxyXG4gICAgYWdpbmc5MDogXCJNb25leVwiLFxyXG4gICAgYWdpbmc5MF9iYXNlOiBcIk1vbmV5XCIsXHJcbiAgICBhbm51YWxpbmNvbWU6IFwiTW9uZXlcIixcclxuICAgIGFubnVhbGluY29tZV9iYXNlOiBcIk1vbmV5XCIsXHJcbiAgICBiaXNfY2lzaWQ6IFwiSW50ZWdlclwiLFxyXG4gICAgY3JlZGl0bGltaXQ6IFwiTW9uZXlcIixcclxuICAgIGNyZWRpdGxpbWl0X2Jhc2U6IFwiTW9uZXlcIixcclxuICAgIGVudGl0eWltYWdlX3RpbWVzdGFtcDogXCJCaWdJbnRcIixcclxuICAgIGV4Y2hhbmdlcmF0ZTogXCJEZWNpbWFsXCIsXHJcbiAgICBpbXBvcnRzZXF1ZW5jZW51bWJlcjogXCJJbnRlZ2VyXCIsXHJcbiAgICBudW1iZXJvZmNoaWxkcmVuOiBcIkludGVnZXJcIixcclxuICAgIG9uaG9sZHRpbWU6IFwiSW50ZWdlclwiLFxyXG4gICAgdGVhbXNmb2xsb3dlZDogXCJJbnRlZ2VyXCIsXHJcbiAgICB0aW1lem9uZXJ1bGV2ZXJzaW9ubnVtYmVyOiBcIkludGVnZXJcIixcclxuICAgIHV0Y2NvbnZlcnNpb250aW1lem9uZWNvZGU6IFwiSW50ZWdlclwiLFxyXG4gICAgdmVyc2lvbm51bWJlcjogXCJCaWdJbnRcIixcclxuICAgIC8vIE9wdGlvbnNldHNcclxuICAgIGFjY291bnRyb2xlY29kZTogXCJPcHRpb25zZXRcIixcclxuICAgIGFkZHJlc3MxX2FkZHJlc3N0eXBlY29kZTogXCJPcHRpb25zZXRcIixcclxuICAgIGFkZHJlc3MxX2ZyZWlnaHR0ZXJtc2NvZGU6IFwiT3B0aW9uc2V0XCIsXHJcbiAgICBhZGRyZXNzMV9zaGlwcGluZ21ldGhvZGNvZGU6IFwiT3B0aW9uc2V0XCIsXHJcbiAgICBhZGRyZXNzMl9hZGRyZXNzdHlwZWNvZGU6IFwiT3B0aW9uc2V0XCIsXHJcbiAgICBhZGRyZXNzMl9mcmVpZ2h0dGVybXNjb2RlOiBcIk9wdGlvbnNldFwiLFxyXG4gICAgYWRkcmVzczJfc2hpcHBpbmdtZXRob2Rjb2RlOiBcIk9wdGlvbnNldFwiLFxyXG4gICAgYWRkcmVzczNfYWRkcmVzc3R5cGVjb2RlOiBcIk9wdGlvbnNldFwiLFxyXG4gICAgYWRkcmVzczNfZnJlaWdodHRlcm1zY29kZTogXCJPcHRpb25zZXRcIixcclxuICAgIGFkZHJlc3MzX3NoaXBwaW5nbWV0aG9kY29kZTogXCJPcHRpb25zZXRcIixcclxuICAgIGJpc19jb250YWN0dHlwZTogXCJPcHRpb25zZXRcIixcclxuICAgIGJpc19jcG1pZmllbGRvZmV4cGVydGlzZTogXCJPcHRpb25zZXRcIixcclxuICAgIGJpc19jcmVhdGlvbnNvdXJjZTogXCJPcHRpb25zZXRcIixcclxuICAgIGJpc19sYW5ndWFnZXNwb2tlbjogXCJNdWx0aVNlbGVjdFwiLFxyXG4gICAgYmlzX3ByZWZpeDogXCJPcHRpb25zZXRcIixcclxuICAgIGJpc19zYWx1dGF0aW9uOiBcIk9wdGlvbnNldFwiLFxyXG4gICAgY3VzdG9tZXJzaXplY29kZTogXCJPcHRpb25zZXRcIixcclxuICAgIGN1c3RvbWVydHlwZWNvZGU6IFwiT3B0aW9uc2V0XCIsXHJcbiAgICBlZHVjYXRpb25jb2RlOiBcIk9wdGlvbnNldFwiLFxyXG4gICAgZmFtaWx5c3RhdHVzY29kZTogXCJPcHRpb25zZXRcIixcclxuICAgIGdlbmRlcmNvZGU6IFwiT3B0aW9uc2V0XCIsXHJcbiAgICBoYXNjaGlsZHJlbmNvZGU6IFwiT3B0aW9uc2V0XCIsXHJcbiAgICBsZWFkc291cmNlY29kZTogXCJPcHRpb25zZXRcIixcclxuICAgIG1zZHluX29yZ2NoYW5nZXN0YXR1czogXCJPcHRpb25zZXRcIixcclxuICAgIG1zZ2Rwcl9nZHByY29uc2VudDogXCJPcHRpb25zZXRcIixcclxuICAgIHBheW1lbnR0ZXJtc2NvZGU6IFwiT3B0aW9uc2V0XCIsXHJcbiAgICBwcmVmZXJyZWRhcHBvaW50bWVudGRheWNvZGU6IFwiT3B0aW9uc2V0XCIsXHJcbiAgICBwcmVmZXJyZWRhcHBvaW50bWVudHRpbWVjb2RlOiBcIk9wdGlvbnNldFwiLFxyXG4gICAgcHJlZmVycmVkY29udGFjdG1ldGhvZGNvZGU6IFwiT3B0aW9uc2V0XCIsXHJcbiAgICBzaGlwcGluZ21ldGhvZGNvZGU6IFwiT3B0aW9uc2V0XCIsXHJcbiAgICBzdGF0ZWNvZGU6IFwiT3B0aW9uc2V0XCIsXHJcbiAgICBzdGF0dXNjb2RlOiBcIk9wdGlvbnNldFwiLFxyXG4gICAgdGVycml0b3J5Y29kZTogXCJPcHRpb25zZXRcIixcclxuICAgIC8vIERhdGUgRm9ybWF0c1xyXG4gICAgYW5uaXZlcnNhcnk6IFwiRGF0ZU9ubHk6RGF0ZU9ubHlcIixcclxuICAgIGJpcnRoZGF0ZTogXCJEYXRlT25seTpEYXRlT25seVwiLFxyXG4gICAgYmlzX2VtYmFyZ29yZXNwZWN0dHJhY2tkYXRlOiBcIkRhdGVPbmx5OlVzZXJMb2NhbFwiLFxyXG4gICAgYmlzX3Rjc2lnbmF0dXJlZGF0ZTogXCJEYXRlT25seTpVc2VyTG9jYWxcIixcclxuICAgIGNyZWF0ZWRvbjogXCJEYXRlQW5kVGltZTpVc2VyTG9jYWxcIixcclxuICAgIGxhc3RvbmhvbGR0aW1lOiBcIkRhdGVBbmRUaW1lOlVzZXJMb2NhbFwiLFxyXG4gICAgbGFzdHVzZWRpbmNhbXBhaWduOiBcIkRhdGVPbmx5OlVzZXJMb2NhbFwiLFxyXG4gICAgbW9kaWZpZWRvbjogXCJEYXRlQW5kVGltZTpVc2VyTG9jYWxcIixcclxuICAgIG92ZXJyaWRkZW5jcmVhdGVkb246IFwiRGF0ZU9ubHk6VXNlckxvY2FsXCIsXHJcbiAgfSxcclxuICBuYXZpZ2F0aW9uOiB7XHJcbiAgICBiaXNfYWN0aXZpdHk6IFtcIm1zY3JtLmNvbnRhY3RcIl0sXHJcbiAgICBiaXNfYWN0aXZpdHljYXRlZ29yeTogW1wibXNjcm0uYmlzX2FjdGl2aXR5Y2F0ZWdvcnlcIl0sXHJcbiAgICBiaXNfYWN0aXZpdHlzdWJjYXRlZ29yeTogW1wibXNjcm0uY29udGFjdFwiXSxcclxuICAgIGJpc19iYW5raW5nZnVuY3Rpb246IFtcIm1zY3JtLmJpc19iYW5raW5nZnVuY3Rpb25cIl0sXHJcbiAgICBiaXNfY29udGluZ2VuY3lhcnJhbmdlbWVudHM6IFtcIm1zY3JtLmJpc19jb250aW5nZW5jeWFycmFuZ2VtZW50XCJdLFxyXG4gICAgYmlzX2NwbWlpbnRlcm5hbGNvbnRhY3Q6IFtcIm1zY3JtLmNvbnRhY3RcIl0sXHJcbiAgICBiaXNfaW5zdGl0dXRpb25ncm91cDogW1wibXNjcm0uYmlzX2luc3RpdHV0aW9uZ3JvdXBcIl0sXHJcbiAgICBiaXNfbmF0aW9uYWxpdHk6IFtcIm1zY3JtLmJpc19uYXRpb25hbGl0eVwiXSxcclxuICAgIGJpc19wYXJlbnRpbnN0aXR1dGlvbjogW1wibXNjcm0uYWNjb3VudFwiXSxcclxuICAgIGJpc19yYW5raW5nOiBbXCJtc2NybS5iaXNfcmFua2luZ1wiXSxcclxuICAgIGJpc19yZXBvcnRzdG86IFtcIm1zY3JtLmNvbnRhY3RcIl0sXHJcbiAgICBjcmVhdGVkYnk6IFtcIm1zY3JtLnN5c3RlbXVzZXJcIl0sXHJcbiAgICBjcmVhdGVkb25iZWhhbGZieTogW1wibXNjcm0uc3lzdGVtdXNlclwiXSxcclxuICAgIGRlZmF1bHRwcmljZWxldmVsaWQ6IFtcIm1zY3JtLnByaWNlbGV2ZWxcIl0sXHJcbiAgICBtYXN0ZXJpZDogW1wibXNjcm0uY29udGFjdFwiXSxcclxuICAgIG1vZGlmaWVkYnk6IFtcIm1zY3JtLnN5c3RlbXVzZXJcIl0sXHJcbiAgICBtb2RpZmllZG9uYmVoYWxmYnk6IFtcIm1zY3JtLnN5c3RlbXVzZXJcIl0sXHJcbiAgICBtc2R5bl9zZWdtZW50aWQ6IFtcIm1zY3JtLm1zZHluX3NlZ21lbnRcIl0sXHJcbiAgICBtc2R5bmNybV9Db250YWN0SWQ6IFtcIm1zY3JtLm1zZHluY3JtX3F1aWNrc2VuZGVtYWlsXCJdLFxyXG4gICAgbXNkeW5jcm1fU2VnbWVudE1lbWJlcklkOiBbXCJtc2NybS5tc2R5bmNybV9zZWdtZW50XCJdLFxyXG4gICAgbXNkeW5jcm1fY3VzdG9tZXJqb3VybmV5aWQ6IFtcIm1zY3JtLm1zZHluY3JtX2N1c3RvbWVyam91cm5leVwiXSxcclxuICAgIG1zZHluY3JtX2VtYWlsaWQ6IFtcIm1zY3JtLm1zZHluY3JtX21hcmtldGluZ2VtYWlsXCJdLFxyXG4gICAgbXNkeW5jcm1fbWFya2V0aW5nZm9ybWlkOiBbXCJtc2NybS5tc2R5bmNybV9tYXJrZXRpbmdmb3JtXCJdLFxyXG4gICAgbXNkeW5jcm1fbWFya2V0aW5ncGFnZWlkOiBbXCJtc2NybS5tc2R5bmNybV9tYXJrZXRpbmdwYWdlXCJdLFxyXG4gICAgbXNldnRtZ3RfQ29udGFjdElkOiBbXCJtc2NybS5tc2V2dG1ndF9jaGVja2luXCJdLFxyXG4gICAgbXNldnRtZ3Rfb3JpZ2luYXRpbmdldmVudGlkOiBbXCJtc2NybS5tc2V2dG1ndF9ldmVudFwiXSxcclxuICAgIG1zZ2Rwcl9HRFBSUGFyZW50SWQ6IFtcIm1zY3JtLmNvbnRhY3RcIl0sXHJcbiAgICBtc2dkcHJfY29uc2VudGNoYW5nZXNvdXJjZWZvcm1JZDogW1wibXNjcm0ubXNkeW5jcm1fbWFya2V0aW5nZm9ybVwiXSxcclxuICAgIG9yaWdpbmF0aW5nbGVhZGlkOiBbXCJtc2NybS5sZWFkXCJdLFxyXG4gICAgb3duZXJpZDogW1wibXNjcm0ucHJpbmNpcGFsXCJdLFxyXG4gICAgb3duaW5nYnVzaW5lc3N1bml0OiBbXCJtc2NybS5idXNpbmVzc3VuaXRcIl0sXHJcbiAgICBvd25pbmd0ZWFtOiBbXCJtc2NybS50ZWFtXCJdLFxyXG4gICAgb3duaW5ndXNlcjogW1wibXNjcm0uc3lzdGVtdXNlclwiXSxcclxuICAgIHByZWZlcnJlZGVxdWlwbWVudGlkOiBbXCJtc2NybS5lcXVpcG1lbnRcIl0sXHJcbiAgICBwcmVmZXJyZWRzZXJ2aWNlaWQ6IFtcIm1zY3JtLnNlcnZpY2VcIl0sXHJcbiAgICBwcmVmZXJyZWRzeXN0ZW11c2VyaWQ6IFtcIm1zY3JtLnN5c3RlbXVzZXJcIl0sXHJcbiAgICBzbGFfY29udGFjdF9zbGE6IFtcIm1zY3JtLnNsYVwiXSxcclxuICAgIHN0YWdlaWRfcHJvY2Vzc3N0YWdlOiBbXCJtc2NybS5wcm9jZXNzc3RhZ2VcIl0sXHJcbiAgICB0cmFuc2FjdGlvbmN1cnJlbmN5aWQ6IFtcIm1zY3JtLnRyYW5zYWN0aW9uY3VycmVuY3lcIl0sXHJcbiAgICBwYXJlbnRjdXN0b21lcmlkOiBbXCJhY2NvdW50XCIsXCJjb250YWN0XCJdLFxyXG4gICAgc2xhaW52b2tlZGlkOiBbXCJzbGFcIl0sXHJcbiAgfSxcclxufTtcclxuXHJcbi8vIEF0dHJpYnV0ZSBjb25zdGFudHNcclxuZXhwb3J0IGNvbnN0IGVudW0gQ29udGFjdEF0dHJpYnV0ZXMge1xyXG4gIEFjY291bnRJZCA9IFwiYWNjb3VudGlkXCIsXHJcbiAgQWNjb3VudElkTmFtZSA9IFwiYWNjb3VudGlkbmFtZVwiLFxyXG4gIEFjY291bnRJZFlvbWlOYW1lID0gXCJhY2NvdW50aWR5b21pbmFtZVwiLFxyXG4gIEFjY291bnRSb2xlQ29kZSA9IFwiYWNjb3VudHJvbGVjb2RlXCIsXHJcbiAgQWRkcmVzczFfQWRkcmVzc0lkID0gXCJhZGRyZXNzMV9hZGRyZXNzaWRcIixcclxuICBBZGRyZXNzMV9BZGRyZXNzVHlwZUNvZGUgPSBcImFkZHJlc3MxX2FkZHJlc3N0eXBlY29kZVwiLFxyXG4gIEFkZHJlc3MxX0NpdHkgPSBcImFkZHJlc3MxX2NpdHlcIixcclxuICBBZGRyZXNzMV9Db21wb3NpdGUgPSBcImFkZHJlc3MxX2NvbXBvc2l0ZVwiLFxyXG4gIEFkZHJlc3MxX0NvdW50cnkgPSBcImFkZHJlc3MxX2NvdW50cnlcIixcclxuICBBZGRyZXNzMV9Db3VudHkgPSBcImFkZHJlc3MxX2NvdW50eVwiLFxyXG4gIEFkZHJlc3MxX0ZheCA9IFwiYWRkcmVzczFfZmF4XCIsXHJcbiAgQWRkcmVzczFfRnJlaWdodFRlcm1zQ29kZSA9IFwiYWRkcmVzczFfZnJlaWdodHRlcm1zY29kZVwiLFxyXG4gIEFkZHJlc3MxX0xhdGl0dWRlID0gXCJhZGRyZXNzMV9sYXRpdHVkZVwiLFxyXG4gIEFkZHJlc3MxX0xpbmUxID0gXCJhZGRyZXNzMV9saW5lMVwiLFxyXG4gIEFkZHJlc3MxX0xpbmUyID0gXCJhZGRyZXNzMV9saW5lMlwiLFxyXG4gIEFkZHJlc3MxX0xpbmUzID0gXCJhZGRyZXNzMV9saW5lM1wiLFxyXG4gIEFkZHJlc3MxX0xvbmdpdHVkZSA9IFwiYWRkcmVzczFfbG9uZ2l0dWRlXCIsXHJcbiAgQWRkcmVzczFfTmFtZSA9IFwiYWRkcmVzczFfbmFtZVwiLFxyXG4gIEFkZHJlc3MxX1Bvc3RhbENvZGUgPSBcImFkZHJlc3MxX3Bvc3RhbGNvZGVcIixcclxuICBBZGRyZXNzMV9Qb3N0T2ZmaWNlQm94ID0gXCJhZGRyZXNzMV9wb3N0b2ZmaWNlYm94XCIsXHJcbiAgQWRkcmVzczFfUHJpbWFyeUNvbnRhY3ROYW1lID0gXCJhZGRyZXNzMV9wcmltYXJ5Y29udGFjdG5hbWVcIixcclxuICBBZGRyZXNzMV9TaGlwcGluZ01ldGhvZENvZGUgPSBcImFkZHJlc3MxX3NoaXBwaW5nbWV0aG9kY29kZVwiLFxyXG4gIEFkZHJlc3MxX1N0YXRlT3JQcm92aW5jZSA9IFwiYWRkcmVzczFfc3RhdGVvcnByb3ZpbmNlXCIsXHJcbiAgQWRkcmVzczFfVGVsZXBob25lMSA9IFwiYWRkcmVzczFfdGVsZXBob25lMVwiLFxyXG4gIEFkZHJlc3MxX1RlbGVwaG9uZTIgPSBcImFkZHJlc3MxX3RlbGVwaG9uZTJcIixcclxuICBBZGRyZXNzMV9UZWxlcGhvbmUzID0gXCJhZGRyZXNzMV90ZWxlcGhvbmUzXCIsXHJcbiAgQWRkcmVzczFfVVBTWm9uZSA9IFwiYWRkcmVzczFfdXBzem9uZVwiLFxyXG4gIEFkZHJlc3MxX1VUQ09mZnNldCA9IFwiYWRkcmVzczFfdXRjb2Zmc2V0XCIsXHJcbiAgQWRkcmVzczJfQWRkcmVzc0lkID0gXCJhZGRyZXNzMl9hZGRyZXNzaWRcIixcclxuICBBZGRyZXNzMl9BZGRyZXNzVHlwZUNvZGUgPSBcImFkZHJlc3MyX2FkZHJlc3N0eXBlY29kZVwiLFxyXG4gIEFkZHJlc3MyX0NpdHkgPSBcImFkZHJlc3MyX2NpdHlcIixcclxuICBBZGRyZXNzMl9Db21wb3NpdGUgPSBcImFkZHJlc3MyX2NvbXBvc2l0ZVwiLFxyXG4gIEFkZHJlc3MyX0NvdW50cnkgPSBcImFkZHJlc3MyX2NvdW50cnlcIixcclxuICBBZGRyZXNzMl9Db3VudHkgPSBcImFkZHJlc3MyX2NvdW50eVwiLFxyXG4gIEFkZHJlc3MyX0ZheCA9IFwiYWRkcmVzczJfZmF4XCIsXHJcbiAgQWRkcmVzczJfRnJlaWdodFRlcm1zQ29kZSA9IFwiYWRkcmVzczJfZnJlaWdodHRlcm1zY29kZVwiLFxyXG4gIEFkZHJlc3MyX0xhdGl0dWRlID0gXCJhZGRyZXNzMl9sYXRpdHVkZVwiLFxyXG4gIEFkZHJlc3MyX0xpbmUxID0gXCJhZGRyZXNzMl9saW5lMVwiLFxyXG4gIEFkZHJlc3MyX0xpbmUyID0gXCJhZGRyZXNzMl9saW5lMlwiLFxyXG4gIEFkZHJlc3MyX0xpbmUzID0gXCJhZGRyZXNzMl9saW5lM1wiLFxyXG4gIEFkZHJlc3MyX0xvbmdpdHVkZSA9IFwiYWRkcmVzczJfbG9uZ2l0dWRlXCIsXHJcbiAgQWRkcmVzczJfTmFtZSA9IFwiYWRkcmVzczJfbmFtZVwiLFxyXG4gIEFkZHJlc3MyX1Bvc3RhbENvZGUgPSBcImFkZHJlc3MyX3Bvc3RhbGNvZGVcIixcclxuICBBZGRyZXNzMl9Qb3N0T2ZmaWNlQm94ID0gXCJhZGRyZXNzMl9wb3N0b2ZmaWNlYm94XCIsXHJcbiAgQWRkcmVzczJfUHJpbWFyeUNvbnRhY3ROYW1lID0gXCJhZGRyZXNzMl9wcmltYXJ5Y29udGFjdG5hbWVcIixcclxuICBBZGRyZXNzMl9TaGlwcGluZ01ldGhvZENvZGUgPSBcImFkZHJlc3MyX3NoaXBwaW5nbWV0aG9kY29kZVwiLFxyXG4gIEFkZHJlc3MyX1N0YXRlT3JQcm92aW5jZSA9IFwiYWRkcmVzczJfc3RhdGVvcnByb3ZpbmNlXCIsXHJcbiAgQWRkcmVzczJfVGVsZXBob25lMSA9IFwiYWRkcmVzczJfdGVsZXBob25lMVwiLFxyXG4gIEFkZHJlc3MyX1RlbGVwaG9uZTIgPSBcImFkZHJlc3MyX3RlbGVwaG9uZTJcIixcclxuICBBZGRyZXNzMl9UZWxlcGhvbmUzID0gXCJhZGRyZXNzMl90ZWxlcGhvbmUzXCIsXHJcbiAgQWRkcmVzczJfVVBTWm9uZSA9IFwiYWRkcmVzczJfdXBzem9uZVwiLFxyXG4gIEFkZHJlc3MyX1VUQ09mZnNldCA9IFwiYWRkcmVzczJfdXRjb2Zmc2V0XCIsXHJcbiAgQWRkcmVzczNfQWRkcmVzc0lkID0gXCJhZGRyZXNzM19hZGRyZXNzaWRcIixcclxuICBBZGRyZXNzM19BZGRyZXNzVHlwZUNvZGUgPSBcImFkZHJlc3MzX2FkZHJlc3N0eXBlY29kZVwiLFxyXG4gIEFkZHJlc3MzX0NpdHkgPSBcImFkZHJlc3MzX2NpdHlcIixcclxuICBBZGRyZXNzM19Db21wb3NpdGUgPSBcImFkZHJlc3MzX2NvbXBvc2l0ZVwiLFxyXG4gIEFkZHJlc3MzX0NvdW50cnkgPSBcImFkZHJlc3MzX2NvdW50cnlcIixcclxuICBBZGRyZXNzM19Db3VudHkgPSBcImFkZHJlc3MzX2NvdW50eVwiLFxyXG4gIEFkZHJlc3MzX0ZheCA9IFwiYWRkcmVzczNfZmF4XCIsXHJcbiAgQWRkcmVzczNfRnJlaWdodFRlcm1zQ29kZSA9IFwiYWRkcmVzczNfZnJlaWdodHRlcm1zY29kZVwiLFxyXG4gIEFkZHJlc3MzX0xhdGl0dWRlID0gXCJhZGRyZXNzM19sYXRpdHVkZVwiLFxyXG4gIEFkZHJlc3MzX0xpbmUxID0gXCJhZGRyZXNzM19saW5lMVwiLFxyXG4gIEFkZHJlc3MzX0xpbmUyID0gXCJhZGRyZXNzM19saW5lMlwiLFxyXG4gIEFkZHJlc3MzX0xpbmUzID0gXCJhZGRyZXNzM19saW5lM1wiLFxyXG4gIEFkZHJlc3MzX0xvbmdpdHVkZSA9IFwiYWRkcmVzczNfbG9uZ2l0dWRlXCIsXHJcbiAgQWRkcmVzczNfTmFtZSA9IFwiYWRkcmVzczNfbmFtZVwiLFxyXG4gIEFkZHJlc3MzX1Bvc3RhbENvZGUgPSBcImFkZHJlc3MzX3Bvc3RhbGNvZGVcIixcclxuICBBZGRyZXNzM19Qb3N0T2ZmaWNlQm94ID0gXCJhZGRyZXNzM19wb3N0b2ZmaWNlYm94XCIsXHJcbiAgQWRkcmVzczNfUHJpbWFyeUNvbnRhY3ROYW1lID0gXCJhZGRyZXNzM19wcmltYXJ5Y29udGFjdG5hbWVcIixcclxuICBBZGRyZXNzM19TaGlwcGluZ01ldGhvZENvZGUgPSBcImFkZHJlc3MzX3NoaXBwaW5nbWV0aG9kY29kZVwiLFxyXG4gIEFkZHJlc3MzX1N0YXRlT3JQcm92aW5jZSA9IFwiYWRkcmVzczNfc3RhdGVvcnByb3ZpbmNlXCIsXHJcbiAgQWRkcmVzczNfVGVsZXBob25lMSA9IFwiYWRkcmVzczNfdGVsZXBob25lMVwiLFxyXG4gIEFkZHJlc3MzX1RlbGVwaG9uZTIgPSBcImFkZHJlc3MzX3RlbGVwaG9uZTJcIixcclxuICBBZGRyZXNzM19UZWxlcGhvbmUzID0gXCJhZGRyZXNzM190ZWxlcGhvbmUzXCIsXHJcbiAgQWRkcmVzczNfVVBTWm9uZSA9IFwiYWRkcmVzczNfdXBzem9uZVwiLFxyXG4gIEFkZHJlc3MzX1VUQ09mZnNldCA9IFwiYWRkcmVzczNfdXRjb2Zmc2V0XCIsXHJcbiAgQWdpbmczMCA9IFwiYWdpbmczMFwiLFxyXG4gIEFnaW5nMzBfQmFzZSA9IFwiYWdpbmczMF9iYXNlXCIsXHJcbiAgQWdpbmc2MCA9IFwiYWdpbmc2MFwiLFxyXG4gIEFnaW5nNjBfQmFzZSA9IFwiYWdpbmc2MF9iYXNlXCIsXHJcbiAgQWdpbmc5MCA9IFwiYWdpbmc5MFwiLFxyXG4gIEFnaW5nOTBfQmFzZSA9IFwiYWdpbmc5MF9iYXNlXCIsXHJcbiAgQW5uaXZlcnNhcnkgPSBcImFubml2ZXJzYXJ5XCIsXHJcbiAgQW5udWFsSW5jb21lID0gXCJhbm51YWxpbmNvbWVcIixcclxuICBBbm51YWxJbmNvbWVfQmFzZSA9IFwiYW5udWFsaW5jb21lX2Jhc2VcIixcclxuICBBc3Npc3RhbnROYW1lID0gXCJhc3Npc3RhbnRuYW1lXCIsXHJcbiAgQXNzaXN0YW50UGhvbmUgPSBcImFzc2lzdGFudHBob25lXCIsXHJcbiAgQmlydGhEYXRlID0gXCJiaXJ0aGRhdGVcIixcclxuICBiaXNfYWN0aXZpdHkgPSBcImJpc19hY3Rpdml0eVwiLFxyXG4gIGJpc19hY3Rpdml0eWNhdGVnb3J5ID0gXCJiaXNfYWN0aXZpdHljYXRlZ29yeVwiLFxyXG4gIGJpc19hY3Rpdml0eWNhdGVnb3J5TmFtZSA9IFwiYmlzX2FjdGl2aXR5Y2F0ZWdvcnluYW1lXCIsXHJcbiAgYmlzX2FjdGl2aXR5TmFtZSA9IFwiYmlzX2FjdGl2aXR5bmFtZVwiLFxyXG4gIGJpc19hY3Rpdml0eXN1YmNhdGVnb3J5ID0gXCJiaXNfYWN0aXZpdHlzdWJjYXRlZ29yeVwiLFxyXG4gIGJpc19hY3Rpdml0eXN1YmNhdGVnb3J5TmFtZSA9IFwiYmlzX2FjdGl2aXR5c3ViY2F0ZWdvcnluYW1lXCIsXHJcbiAgYmlzX2FjdGl2aXR5c3ViY2F0ZWdvcnlZb21pTmFtZSA9IFwiYmlzX2FjdGl2aXR5c3ViY2F0ZWdvcnl5b21pbmFtZVwiLFxyXG4gIGJpc19hY3Rpdml0eVlvbWlOYW1lID0gXCJiaXNfYWN0aXZpdHl5b21pbmFtZVwiLFxyXG4gIGJpc19hc2lhbm5hbWUgPSBcImJpc19hc2lhbm5hbWVcIixcclxuICBiaXNfYmFua2luZ2Z1bmN0aW9uID0gXCJiaXNfYmFua2luZ2Z1bmN0aW9uXCIsXHJcbiAgYmlzX2JhbmtpbmdmdW5jdGlvbk5hbWUgPSBcImJpc19iYW5raW5nZnVuY3Rpb25uYW1lXCIsXHJcbiAgYmlzX2NpYW1hY2NvdW50aWQgPSBcImJpc19jaWFtYWNjb3VudGlkXCIsXHJcbiAgYmlzX2Npc2lkID0gXCJiaXNfY2lzaWRcIixcclxuICBiaXNfY29udGFjdHR5cGUgPSBcImJpc19jb250YWN0dHlwZVwiLFxyXG4gIGJpc19jb250aW5nZW5jeWFycmFuZ2VtZW50cyA9IFwiYmlzX2NvbnRpbmdlbmN5YXJyYW5nZW1lbnRzXCIsXHJcbiAgYmlzX2NvbnRpbmdlbmN5YXJyYW5nZW1lbnRzTmFtZSA9IFwiYmlzX2NvbnRpbmdlbmN5YXJyYW5nZW1lbnRzbmFtZVwiLFxyXG4gIGJpc19jcG1pZmllbGRvZmV4cGVydGlzZSA9IFwiYmlzX2NwbWlmaWVsZG9mZXhwZXJ0aXNlXCIsXHJcbiAgYmlzX2NwbWlpbnRlcm5hbGNvbnRhY3QgPSBcImJpc19jcG1paW50ZXJuYWxjb250YWN0XCIsXHJcbiAgYmlzX2NwbWlpbnRlcm5hbGNvbnRhY3ROYW1lID0gXCJiaXNfY3BtaWludGVybmFsY29udGFjdG5hbWVcIixcclxuICBiaXNfY3BtaWludGVybmFsY29udGFjdFlvbWlOYW1lID0gXCJiaXNfY3BtaWludGVybmFsY29udGFjdHlvbWluYW1lXCIsXHJcbiAgYmlzX2NyZWF0aW9uc291cmNlID0gXCJiaXNfY3JlYXRpb25zb3VyY2VcIixcclxuICBiaXNfY3JtaWQgPSBcImJpc19jcm1pZFwiLFxyXG4gIGJpc19kZXBhcnRtZW50ID0gXCJiaXNfZGVwYXJ0bWVudFwiLFxyXG4gIGJpc19lbWJhcmdvcmVzcGVjdCA9IFwiYmlzX2VtYmFyZ29yZXNwZWN0XCIsXHJcbiAgYmlzX2VtYmFyZ29yZXNwZWN0dHJhY2tkYXRlID0gXCJiaXNfZW1iYXJnb3Jlc3BlY3R0cmFja2RhdGVcIixcclxuICBiaXNfaW5zdGl0dXRpb25ncm91cCA9IFwiYmlzX2luc3RpdHV0aW9uZ3JvdXBcIixcclxuICBiaXNfaW5zdGl0dXRpb25ncm91cE5hbWUgPSBcImJpc19pbnN0aXR1dGlvbmdyb3VwbmFtZVwiLFxyXG4gIGJpc19pbnRlcm5hdGlvbmFscHJpbnRhZGRyZXNzID0gXCJiaXNfaW50ZXJuYXRpb25hbHByaW50YWRkcmVzc1wiLFxyXG4gIGJpc19sYW5ndWFnZXNwb2tlbiA9IFwiYmlzX2xhbmd1YWdlc3Bva2VuXCIsXHJcbiAgYmlzX25hdGlvbmFsaXR5ID0gXCJiaXNfbmF0aW9uYWxpdHlcIixcclxuICBiaXNfbmF0aW9uYWxpdHlOYW1lID0gXCJiaXNfbmF0aW9uYWxpdHluYW1lXCIsXHJcbiAgYmlzX3BhcmVudGluc3RpdHV0aW9uID0gXCJiaXNfcGFyZW50aW5zdGl0dXRpb25cIixcclxuICBiaXNfcGFyZW50aW5zdGl0dXRpb25OYW1lID0gXCJiaXNfcGFyZW50aW5zdGl0dXRpb25uYW1lXCIsXHJcbiAgYmlzX3BhcmVudGluc3RpdHV0aW9uWW9taU5hbWUgPSBcImJpc19wYXJlbnRpbnN0aXR1dGlvbnlvbWluYW1lXCIsXHJcbiAgYmlzX3ByZWZpeCA9IFwiYmlzX3ByZWZpeFwiLFxyXG4gIGJpc19yYW5raW5nID0gXCJiaXNfcmFua2luZ1wiLFxyXG4gIGJpc19yYW5raW5nTmFtZSA9IFwiYmlzX3JhbmtpbmduYW1lXCIsXHJcbiAgYmlzX3JlcG9ydHN0byA9IFwiYmlzX3JlcG9ydHN0b1wiLFxyXG4gIGJpc19yZXBvcnRzdG9OYW1lID0gXCJiaXNfcmVwb3J0c3RvbmFtZVwiLFxyXG4gIGJpc19yZXBvcnRzdG9Zb21pTmFtZSA9IFwiYmlzX3JlcG9ydHN0b3lvbWluYW1lXCIsXHJcbiAgYmlzX3NhbHV0YXRpb24gPSBcImJpc19zYWx1dGF0aW9uXCIsXHJcbiAgYmlzX3NhbmMgPSBcImJpc19zYW5jXCIsXHJcbiAgYmlzX3NlY3Rpb251bml0ID0gXCJiaXNfc2VjdGlvbnVuaXRcIixcclxuICBiaXNfc2lnbmVkdGN2ZXJzaW9uID0gXCJiaXNfc2lnbmVkdGN2ZXJzaW9uXCIsXHJcbiAgYmlzX3N0YWtlaG9sZGVyYW5hbHlzaXMgPSBcImJpc19zdGFrZWhvbGRlcmFuYWx5c2lzXCIsXHJcbiAgYmlzX3Rjc2lnbmF0dXJlZGF0ZSA9IFwiYmlzX3Rjc2lnbmF0dXJlZGF0ZVwiLFxyXG4gIGJpc190Y3ZlcnNpb25zaWduZWQgPSBcImJpc190Y3ZlcnNpb25zaWduZWRcIixcclxuICBCdXNpbmVzczIgPSBcImJ1c2luZXNzMlwiLFxyXG4gIEJ1c2luZXNzQ2FyZCA9IFwiYnVzaW5lc3NjYXJkXCIsXHJcbiAgQnVzaW5lc3NDYXJkQXR0cmlidXRlcyA9IFwiYnVzaW5lc3NjYXJkYXR0cmlidXRlc1wiLFxyXG4gIENhbGxiYWNrID0gXCJjYWxsYmFja1wiLFxyXG4gIENoaWxkcmVuc05hbWVzID0gXCJjaGlsZHJlbnNuYW1lc1wiLFxyXG4gIENvbXBhbnkgPSBcImNvbXBhbnlcIixcclxuICBDb250YWN0SWQgPSBcImNvbnRhY3RpZFwiLFxyXG4gIENyZWF0ZWRCeSA9IFwiY3JlYXRlZGJ5XCIsXHJcbiAgQ3JlYXRlZEJ5RXh0ZXJuYWxQYXJ0eSA9IFwiY3JlYXRlZGJ5ZXh0ZXJuYWxwYXJ0eVwiLFxyXG4gIENyZWF0ZWRCeUV4dGVybmFsUGFydHlOYW1lID0gXCJjcmVhdGVkYnlleHRlcm5hbHBhcnR5bmFtZVwiLFxyXG4gIENyZWF0ZWRCeUV4dGVybmFsUGFydHlZb21pTmFtZSA9IFwiY3JlYXRlZGJ5ZXh0ZXJuYWxwYXJ0eXlvbWluYW1lXCIsXHJcbiAgQ3JlYXRlZEJ5TmFtZSA9IFwiY3JlYXRlZGJ5bmFtZVwiLFxyXG4gIENyZWF0ZWRCeVlvbWlOYW1lID0gXCJjcmVhdGVkYnl5b21pbmFtZVwiLFxyXG4gIENyZWF0ZWRPbiA9IFwiY3JlYXRlZG9uXCIsXHJcbiAgQ3JlYXRlZE9uQmVoYWxmQnkgPSBcImNyZWF0ZWRvbmJlaGFsZmJ5XCIsXHJcbiAgQ3JlYXRlZE9uQmVoYWxmQnlOYW1lID0gXCJjcmVhdGVkb25iZWhhbGZieW5hbWVcIixcclxuICBDcmVhdGVkT25CZWhhbGZCeVlvbWlOYW1lID0gXCJjcmVhdGVkb25iZWhhbGZieXlvbWluYW1lXCIsXHJcbiAgQ3JlZGl0TGltaXQgPSBcImNyZWRpdGxpbWl0XCIsXHJcbiAgQ3JlZGl0TGltaXRfQmFzZSA9IFwiY3JlZGl0bGltaXRfYmFzZVwiLFxyXG4gIENyZWRpdE9uSG9sZCA9IFwiY3JlZGl0b25ob2xkXCIsXHJcbiAgQ3VzdG9tZXJTaXplQ29kZSA9IFwiY3VzdG9tZXJzaXplY29kZVwiLFxyXG4gIEN1c3RvbWVyVHlwZUNvZGUgPSBcImN1c3RvbWVydHlwZWNvZGVcIixcclxuICBEZWZhdWx0UHJpY2VMZXZlbElkID0gXCJkZWZhdWx0cHJpY2VsZXZlbGlkXCIsXHJcbiAgRGVmYXVsdFByaWNlTGV2ZWxJZE5hbWUgPSBcImRlZmF1bHRwcmljZWxldmVsaWRuYW1lXCIsXHJcbiAgRGVwYXJ0bWVudCA9IFwiZGVwYXJ0bWVudFwiLFxyXG4gIERlc2NyaXB0aW9uID0gXCJkZXNjcmlwdGlvblwiLFxyXG4gIERvTm90QnVsa0VNYWlsID0gXCJkb25vdGJ1bGtlbWFpbFwiLFxyXG4gIERvTm90QnVsa1Bvc3RhbE1haWwgPSBcImRvbm90YnVsa3Bvc3RhbG1haWxcIixcclxuICBEb05vdEVNYWlsID0gXCJkb25vdGVtYWlsXCIsXHJcbiAgRG9Ob3RGYXggPSBcImRvbm90ZmF4XCIsXHJcbiAgRG9Ob3RQaG9uZSA9IFwiZG9ub3RwaG9uZVwiLFxyXG4gIERvTm90UG9zdGFsTWFpbCA9IFwiZG9ub3Rwb3N0YWxtYWlsXCIsXHJcbiAgRG9Ob3RTZW5kTU0gPSBcImRvbm90c2VuZG1tXCIsXHJcbiAgRWR1Y2F0aW9uQ29kZSA9IFwiZWR1Y2F0aW9uY29kZVwiLFxyXG4gIEVNYWlsQWRkcmVzczEgPSBcImVtYWlsYWRkcmVzczFcIixcclxuICBFTWFpbEFkZHJlc3MyID0gXCJlbWFpbGFkZHJlc3MyXCIsXHJcbiAgRU1haWxBZGRyZXNzMyA9IFwiZW1haWxhZGRyZXNzM1wiLFxyXG4gIEVtcGxveWVlSWQgPSBcImVtcGxveWVlaWRcIixcclxuICBFbnRpdHlJbWFnZSA9IFwiZW50aXR5aW1hZ2VcIixcclxuICBFbnRpdHlJbWFnZV9UaW1lc3RhbXAgPSBcImVudGl0eWltYWdlX3RpbWVzdGFtcFwiLFxyXG4gIEVudGl0eUltYWdlX1VSTCA9IFwiZW50aXR5aW1hZ2VfdXJsXCIsXHJcbiAgRW50aXR5SW1hZ2VJZCA9IFwiZW50aXR5aW1hZ2VpZFwiLFxyXG4gIEV4Y2hhbmdlUmF0ZSA9IFwiZXhjaGFuZ2VyYXRlXCIsXHJcbiAgRXh0ZXJuYWxVc2VySWRlbnRpZmllciA9IFwiZXh0ZXJuYWx1c2VyaWRlbnRpZmllclwiLFxyXG4gIEZhbWlseVN0YXR1c0NvZGUgPSBcImZhbWlseXN0YXR1c2NvZGVcIixcclxuICBGYXggPSBcImZheFwiLFxyXG4gIEZpcnN0TmFtZSA9IFwiZmlyc3RuYW1lXCIsXHJcbiAgRm9sbG93RW1haWwgPSBcImZvbGxvd2VtYWlsXCIsXHJcbiAgRnRwU2l0ZVVybCA9IFwiZnRwc2l0ZXVybFwiLFxyXG4gIEZ1bGxOYW1lID0gXCJmdWxsbmFtZVwiLFxyXG4gIEdlbmRlckNvZGUgPSBcImdlbmRlcmNvZGVcIixcclxuICBHb3Zlcm5tZW50SWQgPSBcImdvdmVybm1lbnRpZFwiLFxyXG4gIEhhc0NoaWxkcmVuQ29kZSA9IFwiaGFzY2hpbGRyZW5jb2RlXCIsXHJcbiAgSG9tZTIgPSBcImhvbWUyXCIsXHJcbiAgSW1wb3J0U2VxdWVuY2VOdW1iZXIgPSBcImltcG9ydHNlcXVlbmNlbnVtYmVyXCIsXHJcbiAgSXNBdXRvQ3JlYXRlID0gXCJpc2F1dG9jcmVhdGVcIixcclxuICBJc0JhY2tvZmZpY2VDdXN0b21lciA9IFwiaXNiYWNrb2ZmaWNlY3VzdG9tZXJcIixcclxuICBJc1ByaXZhdGUgPSBcImlzcHJpdmF0ZVwiLFxyXG4gIEpvYlRpdGxlID0gXCJqb2J0aXRsZVwiLFxyXG4gIExhc3ROYW1lID0gXCJsYXN0bmFtZVwiLFxyXG4gIExhc3RPbkhvbGRUaW1lID0gXCJsYXN0b25ob2xkdGltZVwiLFxyXG4gIExhc3RVc2VkSW5DYW1wYWlnbiA9IFwibGFzdHVzZWRpbmNhbXBhaWduXCIsXHJcbiAgTGVhZFNvdXJjZUNvZGUgPSBcImxlYWRzb3VyY2Vjb2RlXCIsXHJcbiAgTWFuYWdlck5hbWUgPSBcIm1hbmFnZXJuYW1lXCIsXHJcbiAgTWFuYWdlclBob25lID0gXCJtYW5hZ2VycGhvbmVcIixcclxuICBNYXJrZXRpbmdPbmx5ID0gXCJtYXJrZXRpbmdvbmx5XCIsXHJcbiAgTWFzdGVyQ29udGFjdElkTmFtZSA9IFwibWFzdGVyY29udGFjdGlkbmFtZVwiLFxyXG4gIE1hc3RlckNvbnRhY3RJZFlvbWlOYW1lID0gXCJtYXN0ZXJjb250YWN0aWR5b21pbmFtZVwiLFxyXG4gIE1hc3RlcklkID0gXCJtYXN0ZXJpZFwiLFxyXG4gIE1lcmdlZCA9IFwibWVyZ2VkXCIsXHJcbiAgTWlkZGxlTmFtZSA9IFwibWlkZGxlbmFtZVwiLFxyXG4gIE1vYmlsZVBob25lID0gXCJtb2JpbGVwaG9uZVwiLFxyXG4gIE1vZGlmaWVkQnkgPSBcIm1vZGlmaWVkYnlcIixcclxuICBNb2RpZmllZEJ5RXh0ZXJuYWxQYXJ0eSA9IFwibW9kaWZpZWRieWV4dGVybmFscGFydHlcIixcclxuICBNb2RpZmllZEJ5RXh0ZXJuYWxQYXJ0eU5hbWUgPSBcIm1vZGlmaWVkYnlleHRlcm5hbHBhcnR5bmFtZVwiLFxyXG4gIE1vZGlmaWVkQnlFeHRlcm5hbFBhcnR5WW9taU5hbWUgPSBcIm1vZGlmaWVkYnlleHRlcm5hbHBhcnR5eW9taW5hbWVcIixcclxuICBNb2RpZmllZEJ5TmFtZSA9IFwibW9kaWZpZWRieW5hbWVcIixcclxuICBNb2RpZmllZEJ5WW9taU5hbWUgPSBcIm1vZGlmaWVkYnl5b21pbmFtZVwiLFxyXG4gIE1vZGlmaWVkT24gPSBcIm1vZGlmaWVkb25cIixcclxuICBNb2RpZmllZE9uQmVoYWxmQnkgPSBcIm1vZGlmaWVkb25iZWhhbGZieVwiLFxyXG4gIE1vZGlmaWVkT25CZWhhbGZCeU5hbWUgPSBcIm1vZGlmaWVkb25iZWhhbGZieW5hbWVcIixcclxuICBNb2RpZmllZE9uQmVoYWxmQnlZb21pTmFtZSA9IFwibW9kaWZpZWRvbmJlaGFsZmJ5eW9taW5hbWVcIixcclxuICBtc2R5bl9nZHByb3B0b3V0ID0gXCJtc2R5bl9nZHByb3B0b3V0XCIsXHJcbiAgbXNkeW5fb3JnY2hhbmdlc3RhdHVzID0gXCJtc2R5bl9vcmdjaGFuZ2VzdGF0dXNcIixcclxuICBtc2R5bl9zZWdtZW50aWQgPSBcIm1zZHluX3NlZ21lbnRpZFwiLFxyXG4gIG1zZHluX3NlZ21lbnRpZE5hbWUgPSBcIm1zZHluX3NlZ21lbnRpZG5hbWVcIixcclxuICBtc2R5bmNybV9Db250YWN0SWQgPSBcIm1zZHluY3JtX2NvbnRhY3RpZFwiLFxyXG4gIG1zZHluY3JtX0NvbnRhY3RJZE5hbWUgPSBcIm1zZHluY3JtX2NvbnRhY3RpZG5hbWVcIixcclxuICBtc2R5bmNybV9jdXN0b21lcmpvdXJuZXlpZCA9IFwibXNkeW5jcm1fY3VzdG9tZXJqb3VybmV5aWRcIixcclxuICBtc2R5bmNybV9jdXN0b21lcmpvdXJuZXlpZE5hbWUgPSBcIm1zZHluY3JtX2N1c3RvbWVyam91cm5leWlkbmFtZVwiLFxyXG4gIG1zZHluY3JtX2VtYWlsaWQgPSBcIm1zZHluY3JtX2VtYWlsaWRcIixcclxuICBtc2R5bmNybV9lbWFpbGlkTmFtZSA9IFwibXNkeW5jcm1fZW1haWxpZG5hbWVcIixcclxuICBtc2R5bmNybV9pbnNpZ2h0c19wbGFjZWhvbGRlciA9IFwibXNkeW5jcm1faW5zaWdodHNfcGxhY2Vob2xkZXJcIixcclxuICBtc2R5bmNybV9tYXJrZXRpbmdmb3JtaWQgPSBcIm1zZHluY3JtX21hcmtldGluZ2Zvcm1pZFwiLFxyXG4gIG1zZHluY3JtX21hcmtldGluZ2Zvcm1pZE5hbWUgPSBcIm1zZHluY3JtX21hcmtldGluZ2Zvcm1pZG5hbWVcIixcclxuICBtc2R5bmNybV9tYXJrZXRpbmdmb3Jtc3VibWlzc2lvbmRhdGVwcmVjaXNlID0gXCJtc2R5bmNybV9tYXJrZXRpbmdmb3Jtc3VibWlzc2lvbmRhdGVwcmVjaXNlXCIsXHJcbiAgbXNkeW5jcm1fbWFya2V0aW5ncGFnZWlkID0gXCJtc2R5bmNybV9tYXJrZXRpbmdwYWdlaWRcIixcclxuICBtc2R5bmNybV9tYXJrZXRpbmdwYWdlaWROYW1lID0gXCJtc2R5bmNybV9tYXJrZXRpbmdwYWdlaWRuYW1lXCIsXHJcbiAgbXNkeW5jcm1fcmVtZW1iZXJNZSA9IFwibXNkeW5jcm1fcmVtZW1iZXJtZVwiLFxyXG4gIG1zZHluY3JtX1NlZ21lbnRNZW1iZXJJZCA9IFwibXNkeW5jcm1fc2VnbWVudG1lbWJlcmlkXCIsXHJcbiAgbXNkeW5jcm1fU2VnbWVudE1lbWJlcklkTmFtZSA9IFwibXNkeW5jcm1fc2VnbWVudG1lbWJlcmlkbmFtZVwiLFxyXG4gIG1zZXZ0bWd0X2FhZG9iamVjdGlkID0gXCJtc2V2dG1ndF9hYWRvYmplY3RpZFwiLFxyXG4gIG1zZXZ0bWd0X0NvbnRhY3RJZCA9IFwibXNldnRtZ3RfY29udGFjdGlkXCIsXHJcbiAgbXNldnRtZ3RfQ29udGFjdElkTmFtZSA9IFwibXNldnRtZ3RfY29udGFjdGlkbmFtZVwiLFxyXG4gIG1zZXZ0bWd0X29yaWdpbmF0aW5nZXZlbnRpZCA9IFwibXNldnRtZ3Rfb3JpZ2luYXRpbmdldmVudGlkXCIsXHJcbiAgbXNldnRtZ3Rfb3JpZ2luYXRpbmdldmVudGlkTmFtZSA9IFwibXNldnRtZ3Rfb3JpZ2luYXRpbmdldmVudGlkbmFtZVwiLFxyXG4gIG1zZ2Rwcl9jb25zZW50Y2hhbmdlc291cmNlZm9ybUlkID0gXCJtc2dkcHJfY29uc2VudGNoYW5nZXNvdXJjZWZvcm1pZFwiLFxyXG4gIG1zZ2Rwcl9jb25zZW50Y2hhbmdlc291cmNlZm9ybUlkTmFtZSA9IFwibXNnZHByX2NvbnNlbnRjaGFuZ2Vzb3VyY2Vmb3JtaWRuYW1lXCIsXHJcbiAgbXNnZHByX2Rvbm90dHJhY2sgPSBcIm1zZ2Rwcl9kb25vdHRyYWNrXCIsXHJcbiAgbXNnZHByX2dkcHJjb25zZW50ID0gXCJtc2dkcHJfZ2RwcmNvbnNlbnRcIixcclxuICBtc2dkcHJfZ2RwcmlzY2hpbGQgPSBcIm1zZ2Rwcl9nZHByaXNjaGlsZFwiLFxyXG4gIG1zZ2Rwcl9HRFBSUGFyZW50SWQgPSBcIm1zZ2Rwcl9nZHBycGFyZW50aWRcIixcclxuICBtc2dkcHJfR0RQUlBhcmVudElkTmFtZSA9IFwibXNnZHByX2dkcHJwYXJlbnRpZG5hbWVcIixcclxuICBtc2dkcHJfR0RQUlBhcmVudElkWW9taU5hbWUgPSBcIm1zZ2Rwcl9nZHBycGFyZW50aWR5b21pbmFtZVwiLFxyXG4gIE5pY2tOYW1lID0gXCJuaWNrbmFtZVwiLFxyXG4gIE51bWJlck9mQ2hpbGRyZW4gPSBcIm51bWJlcm9mY2hpbGRyZW5cIixcclxuICBPbkhvbGRUaW1lID0gXCJvbmhvbGR0aW1lXCIsXHJcbiAgT3JpZ2luYXRpbmdMZWFkSWQgPSBcIm9yaWdpbmF0aW5nbGVhZGlkXCIsXHJcbiAgT3JpZ2luYXRpbmdMZWFkSWROYW1lID0gXCJvcmlnaW5hdGluZ2xlYWRpZG5hbWVcIixcclxuICBPcmlnaW5hdGluZ0xlYWRJZFlvbWlOYW1lID0gXCJvcmlnaW5hdGluZ2xlYWRpZHlvbWluYW1lXCIsXHJcbiAgT3ZlcnJpZGRlbkNyZWF0ZWRPbiA9IFwib3ZlcnJpZGRlbmNyZWF0ZWRvblwiLFxyXG4gIE93bmVySWQgPSBcIm93bmVyaWRcIixcclxuICBPd25lcklkTmFtZSA9IFwib3duZXJpZG5hbWVcIixcclxuICBPd25lcklkVHlwZSA9IFwib3duZXJpZHR5cGVcIixcclxuICBPd25lcklkWW9taU5hbWUgPSBcIm93bmVyaWR5b21pbmFtZVwiLFxyXG4gIE93bmluZ0J1c2luZXNzVW5pdCA9IFwib3duaW5nYnVzaW5lc3N1bml0XCIsXHJcbiAgT3duaW5nQnVzaW5lc3NVbml0TmFtZSA9IFwib3duaW5nYnVzaW5lc3N1bml0bmFtZVwiLFxyXG4gIE93bmluZ1RlYW0gPSBcIm93bmluZ3RlYW1cIixcclxuICBPd25pbmdVc2VyID0gXCJvd25pbmd1c2VyXCIsXHJcbiAgUGFnZXIgPSBcInBhZ2VyXCIsXHJcbiAgUGFyZW50Q29udGFjdElkID0gXCJwYXJlbnRjb250YWN0aWRcIixcclxuICBQYXJlbnRDb250YWN0SWROYW1lID0gXCJwYXJlbnRjb250YWN0aWRuYW1lXCIsXHJcbiAgUGFyZW50Q29udGFjdElkWW9taU5hbWUgPSBcInBhcmVudGNvbnRhY3RpZHlvbWluYW1lXCIsXHJcbiAgUGFyZW50Q3VzdG9tZXJJZCA9IFwicGFyZW50Y3VzdG9tZXJpZFwiLFxyXG4gIFBhcmVudEN1c3RvbWVySWROYW1lID0gXCJwYXJlbnRjdXN0b21lcmlkbmFtZVwiLFxyXG4gIFBhcmVudEN1c3RvbWVySWRUeXBlID0gXCJwYXJlbnRjdXN0b21lcmlkdHlwZVwiLFxyXG4gIFBhcmVudEN1c3RvbWVySWRZb21pTmFtZSA9IFwicGFyZW50Y3VzdG9tZXJpZHlvbWluYW1lXCIsXHJcbiAgUGFydGljaXBhdGVzSW5Xb3JrZmxvdyA9IFwicGFydGljaXBhdGVzaW53b3JrZmxvd1wiLFxyXG4gIFBheW1lbnRUZXJtc0NvZGUgPSBcInBheW1lbnR0ZXJtc2NvZGVcIixcclxuICBQcmVmZXJyZWRBcHBvaW50bWVudERheUNvZGUgPSBcInByZWZlcnJlZGFwcG9pbnRtZW50ZGF5Y29kZVwiLFxyXG4gIFByZWZlcnJlZEFwcG9pbnRtZW50VGltZUNvZGUgPSBcInByZWZlcnJlZGFwcG9pbnRtZW50dGltZWNvZGVcIixcclxuICBQcmVmZXJyZWRDb250YWN0TWV0aG9kQ29kZSA9IFwicHJlZmVycmVkY29udGFjdG1ldGhvZGNvZGVcIixcclxuICBQcmVmZXJyZWRFcXVpcG1lbnRJZCA9IFwicHJlZmVycmVkZXF1aXBtZW50aWRcIixcclxuICBQcmVmZXJyZWRFcXVpcG1lbnRJZE5hbWUgPSBcInByZWZlcnJlZGVxdWlwbWVudGlkbmFtZVwiLFxyXG4gIFByZWZlcnJlZFNlcnZpY2VJZCA9IFwicHJlZmVycmVkc2VydmljZWlkXCIsXHJcbiAgUHJlZmVycmVkU2VydmljZUlkTmFtZSA9IFwicHJlZmVycmVkc2VydmljZWlkbmFtZVwiLFxyXG4gIFByZWZlcnJlZFN5c3RlbVVzZXJJZCA9IFwicHJlZmVycmVkc3lzdGVtdXNlcmlkXCIsXHJcbiAgUHJlZmVycmVkU3lzdGVtVXNlcklkTmFtZSA9IFwicHJlZmVycmVkc3lzdGVtdXNlcmlkbmFtZVwiLFxyXG4gIFByZWZlcnJlZFN5c3RlbVVzZXJJZFlvbWlOYW1lID0gXCJwcmVmZXJyZWRzeXN0ZW11c2VyaWR5b21pbmFtZVwiLFxyXG4gIFByb2Nlc3NJZCA9IFwicHJvY2Vzc2lkXCIsXHJcbiAgU2FsdXRhdGlvbiA9IFwic2FsdXRhdGlvblwiLFxyXG4gIFNoaXBwaW5nTWV0aG9kQ29kZSA9IFwic2hpcHBpbmdtZXRob2Rjb2RlXCIsXHJcbiAgU0xBSWQgPSBcInNsYWlkXCIsXHJcbiAgU0xBSW52b2tlZElkID0gXCJzbGFpbnZva2VkaWRcIixcclxuICBTTEFJbnZva2VkSWROYW1lID0gXCJzbGFpbnZva2VkaWRuYW1lXCIsXHJcbiAgU0xBTmFtZSA9IFwic2xhbmFtZVwiLFxyXG4gIFNwb3VzZXNOYW1lID0gXCJzcG91c2VzbmFtZVwiLFxyXG4gIFN0YWdlSWQgPSBcInN0YWdlaWRcIixcclxuICBTdGF0ZUNvZGUgPSBcInN0YXRlY29kZVwiLFxyXG4gIFN0YXR1c0NvZGUgPSBcInN0YXR1c2NvZGVcIixcclxuICBTdWJzY3JpcHRpb25JZCA9IFwic3Vic2NyaXB0aW9uaWRcIixcclxuICBTdWZmaXggPSBcInN1ZmZpeFwiLFxyXG4gIFRlYW1zRm9sbG93ZWQgPSBcInRlYW1zZm9sbG93ZWRcIixcclxuICBUZWxlcGhvbmUxID0gXCJ0ZWxlcGhvbmUxXCIsXHJcbiAgVGVsZXBob25lMiA9IFwidGVsZXBob25lMlwiLFxyXG4gIFRlbGVwaG9uZTMgPSBcInRlbGVwaG9uZTNcIixcclxuICBUZXJyaXRvcnlDb2RlID0gXCJ0ZXJyaXRvcnljb2RlXCIsXHJcbiAgVGltZVNwZW50QnlNZU9uRW1haWxBbmRNZWV0aW5ncyA9IFwidGltZXNwZW50YnltZW9uZW1haWxhbmRtZWV0aW5nc1wiLFxyXG4gIFRpbWVab25lUnVsZVZlcnNpb25OdW1iZXIgPSBcInRpbWV6b25lcnVsZXZlcnNpb25udW1iZXJcIixcclxuICBUcmFuc2FjdGlvbkN1cnJlbmN5SWQgPSBcInRyYW5zYWN0aW9uY3VycmVuY3lpZFwiLFxyXG4gIFRyYW5zYWN0aW9uQ3VycmVuY3lJZE5hbWUgPSBcInRyYW5zYWN0aW9uY3VycmVuY3lpZG5hbWVcIixcclxuICBUcmF2ZXJzZWRQYXRoID0gXCJ0cmF2ZXJzZWRwYXRoXCIsXHJcbiAgVVRDQ29udmVyc2lvblRpbWVab25lQ29kZSA9IFwidXRjY29udmVyc2lvbnRpbWV6b25lY29kZVwiLFxyXG4gIFZlcnNpb25OdW1iZXIgPSBcInZlcnNpb25udW1iZXJcIixcclxuICBXZWJTaXRlVXJsID0gXCJ3ZWJzaXRldXJsXCIsXHJcbiAgWW9taUZpcnN0TmFtZSA9IFwieW9taWZpcnN0bmFtZVwiLFxyXG4gIFlvbWlGdWxsTmFtZSA9IFwieW9taWZ1bGxuYW1lXCIsXHJcbiAgWW9taUxhc3ROYW1lID0gXCJ5b21pbGFzdG5hbWVcIixcclxuICBZb21pTWlkZGxlTmFtZSA9IFwieW9taW1pZGRsZW5hbWVcIixcclxufVxyXG4vLyBFYXJseSBCb3VuZCBJbnRlcmZhY2VcclxuZXhwb3J0IGludGVyZmFjZSBDb250YWN0IGV4dGVuZHMgSUVudGl0eSB7XHJcbiAgLypcclxuICBBY2NvdW50IExvb2t1cFR5cGUgVW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIGFjY291bnQgd2l0aCB3aGljaCB0aGUgY29udGFjdCBpcyBhc3NvY2lhdGVkLlxyXG4gICovXHJcbiAgYWNjb3VudGlkPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGFjY291bnRpZG5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGFjY291bnRpZHlvbWluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIFJvbGUgY29udGFjdF9jb250YWN0X2FjY291bnRyb2xlY29kZSBTZWxlY3QgdGhlIGNvbnRhY3QncyByb2xlIHdpdGhpbiB0aGUgY29tcGFueSBvciBzYWxlcyBwcm9jZXNzLCBzdWNoIGFzIGRlY2lzaW9uIG1ha2VyLCBlbXBsb3llZSwgb3IgaW5mbHVlbmNlci5cclxuICAqL1xyXG4gIGFjY291bnRyb2xlY29kZT86IGltcG9ydChcIi4uL2VudW1zL2NvbnRhY3RfY29udGFjdF9hY2NvdW50cm9sZWNvZGVcIikuY29udGFjdF9jb250YWN0X2FjY291bnRyb2xlY29kZSB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDE6IElEIFVuaXF1ZWlkZW50aWZpZXJUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIGZvciBhZGRyZXNzIDEuXHJcbiAgKi9cclxuICBhZGRyZXNzMV9hZGRyZXNzaWQ/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkd1aWQgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAxOiBBZGRyZXNzIFR5cGUgY29udGFjdF9jb250YWN0X2FkZHJlc3MxX2FkZHJlc3N0eXBlY29kZSBTZWxlY3QgdGhlIHByaW1hcnkgYWRkcmVzcyB0eXBlLlxyXG4gICovXHJcbiAgYWRkcmVzczFfYWRkcmVzc3R5cGVjb2RlPzogaW1wb3J0KFwiLi4vZW51bXMvY29udGFjdF9jb250YWN0X2FkZHJlc3MxX2FkZHJlc3N0eXBlY29kZVwiKS5jb250YWN0X2NvbnRhY3RfYWRkcmVzczFfYWRkcmVzc3R5cGVjb2RlIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMTogQ2l0eSBTdHJpbmdUeXBlIFR5cGUgdGhlIGNpdHkgZm9yIHRoZSBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgKi9cclxuICBhZGRyZXNzMV9jaXR5Pzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMSBNZW1vVHlwZSBTaG93cyB0aGUgY29tcGxldGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczFfY29tcG9zaXRlPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMTogQ291bnRyeS9SZWdpb24gU3RyaW5nVHlwZSBUeXBlIHRoZSBjb3VudHJ5IG9yIHJlZ2lvbiBmb3IgdGhlIHByaW1hcnkgYWRkcmVzcy5cclxuICAqL1xyXG4gIGFkZHJlc3MxX2NvdW50cnk/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAxOiBDb3VudHkgU3RyaW5nVHlwZSBUeXBlIHRoZSBjb3VudHkgZm9yIHRoZSBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgKi9cclxuICBhZGRyZXNzMV9jb3VudHk/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAxOiBGYXggU3RyaW5nVHlwZSBUeXBlIHRoZSBmYXggbnVtYmVyIGFzc29jaWF0ZWQgd2l0aCB0aGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczFfZmF4Pzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMTogRnJlaWdodCBUZXJtcyBjb250YWN0X2NvbnRhY3RfYWRkcmVzczFfZnJlaWdodHRlcm1zY29kZSBTZWxlY3QgdGhlIGZyZWlnaHQgdGVybXMgZm9yIHRoZSBwcmltYXJ5IGFkZHJlc3MgdG8gbWFrZSBzdXJlIHNoaXBwaW5nIG9yZGVycyBhcmUgcHJvY2Vzc2VkIGNvcnJlY3RseS5cclxuICAqL1xyXG4gIGFkZHJlc3MxX2ZyZWlnaHR0ZXJtc2NvZGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9jb250YWN0X2NvbnRhY3RfYWRkcmVzczFfZnJlaWdodHRlcm1zY29kZVwiKS5jb250YWN0X2NvbnRhY3RfYWRkcmVzczFfZnJlaWdodHRlcm1zY29kZSB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDE6IExhdGl0dWRlIERvdWJsZVR5cGUgVHlwZSB0aGUgbGF0aXR1ZGUgdmFsdWUgZm9yIHRoZSBwcmltYXJ5IGFkZHJlc3MgZm9yIHVzZSBpbiBtYXBwaW5nIGFuZCBvdGhlciBhcHBsaWNhdGlvbnMuXHJcbiAgKi9cclxuICBhZGRyZXNzMV9sYXRpdHVkZT86IG51bWJlciB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDE6IFN0cmVldCAxIFN0cmluZ1R5cGUgVHlwZSB0aGUgZmlyc3QgbGluZSBvZiB0aGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczFfbGluZTE/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAxOiBTdHJlZXQgMiBTdHJpbmdUeXBlIFR5cGUgdGhlIHNlY29uZCBsaW5lIG9mIHRoZSBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgKi9cclxuICBhZGRyZXNzMV9saW5lMj86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDE6IFN0cmVldCAzIFN0cmluZ1R5cGUgVHlwZSB0aGUgdGhpcmQgbGluZSBvZiB0aGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczFfbGluZTM/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAxOiBMb25naXR1ZGUgRG91YmxlVHlwZSBUeXBlIHRoZSBsb25naXR1ZGUgdmFsdWUgZm9yIHRoZSBwcmltYXJ5IGFkZHJlc3MgZm9yIHVzZSBpbiBtYXBwaW5nIGFuZCBvdGhlciBhcHBsaWNhdGlvbnMuXHJcbiAgKi9cclxuICBhZGRyZXNzMV9sb25naXR1ZGU/OiBudW1iZXIgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAxOiBOYW1lIFN0cmluZ1R5cGUgVHlwZSBhIGRlc2NyaXB0aXZlIG5hbWUgZm9yIHRoZSBwcmltYXJ5IGFkZHJlc3MsIHN1Y2ggYXMgQ29ycG9yYXRlIEhlYWRxdWFydGVycy5cclxuICAqL1xyXG4gIGFkZHJlc3MxX25hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAxOiBaSVAvUG9zdGFsIENvZGUgU3RyaW5nVHlwZSBUeXBlIHRoZSBaSVAgQ29kZSBvciBwb3N0YWwgY29kZSBmb3IgdGhlIHByaW1hcnkgYWRkcmVzcy5cclxuICAqL1xyXG4gIGFkZHJlc3MxX3Bvc3RhbGNvZGU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAxOiBQb3N0IE9mZmljZSBCb3ggU3RyaW5nVHlwZSBUeXBlIHRoZSBwb3N0IG9mZmljZSBib3ggbnVtYmVyIG9mIHRoZSBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgKi9cclxuICBhZGRyZXNzMV9wb3N0b2ZmaWNlYm94Pzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMTogUHJpbWFyeSBDb250YWN0IE5hbWUgU3RyaW5nVHlwZSBUeXBlIHRoZSBuYW1lIG9mIHRoZSBtYWluIGNvbnRhY3QgYXQgdGhlIGFjY291bnQncyBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgKi9cclxuICBhZGRyZXNzMV9wcmltYXJ5Y29udGFjdG5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAxOiBTaGlwcGluZyBNZXRob2QgY29udGFjdF9jb250YWN0X2FkZHJlc3MxX3NoaXBwaW5nbWV0aG9kY29kZSBTZWxlY3QgYSBzaGlwcGluZyBtZXRob2QgZm9yIGRlbGl2ZXJpZXMgc2VudCB0byB0aGlzIGFkZHJlc3MuXHJcbiAgKi9cclxuICBhZGRyZXNzMV9zaGlwcGluZ21ldGhvZGNvZGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9jb250YWN0X2NvbnRhY3RfYWRkcmVzczFfc2hpcHBpbmdtZXRob2Rjb2RlXCIpLmNvbnRhY3RfY29udGFjdF9hZGRyZXNzMV9zaGlwcGluZ21ldGhvZGNvZGUgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAxOiBTdGF0ZS9Qcm92aW5jZSBTdHJpbmdUeXBlIFR5cGUgdGhlIHN0YXRlIG9yIHByb3ZpbmNlIG9mIHRoZSBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgKi9cclxuICBhZGRyZXNzMV9zdGF0ZW9ycHJvdmluY2U/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAxOiBQaG9uZSBTdHJpbmdUeXBlIFR5cGUgdGhlIG1haW4gcGhvbmUgbnVtYmVyIGFzc29jaWF0ZWQgd2l0aCB0aGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczFfdGVsZXBob25lMT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDE6IFRlbGVwaG9uZSAyIFN0cmluZ1R5cGUgVHlwZSBhIHNlY29uZCBwaG9uZSBudW1iZXIgYXNzb2NpYXRlZCB3aXRoIHRoZSBwcmltYXJ5IGFkZHJlc3MuXHJcbiAgKi9cclxuICBhZGRyZXNzMV90ZWxlcGhvbmUyPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMTogVGVsZXBob25lIDMgU3RyaW5nVHlwZSBUeXBlIGEgdGhpcmQgcGhvbmUgbnVtYmVyIGFzc29jaWF0ZWQgd2l0aCB0aGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczFfdGVsZXBob25lMz86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDE6IFVQUyBab25lIFN0cmluZ1R5cGUgVHlwZSB0aGUgVVBTIHpvbmUgb2YgdGhlIHByaW1hcnkgYWRkcmVzcyB0byBtYWtlIHN1cmUgc2hpcHBpbmcgY2hhcmdlcyBhcmUgY2FsY3VsYXRlZCBjb3JyZWN0bHkgYW5kIGRlbGl2ZXJpZXMgYXJlIG1hZGUgcHJvbXB0bHksIGlmIHNoaXBwZWQgYnkgVVBTLlxyXG4gICovXHJcbiAgYWRkcmVzczFfdXBzem9uZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDE6IFVUQyBPZmZzZXQgSW50ZWdlclR5cGUgU2VsZWN0IHRoZSB0aW1lIHpvbmUsIG9yIFVUQyBvZmZzZXQsIGZvciB0aGlzIGFkZHJlc3Mgc28gdGhhdCBvdGhlciBwZW9wbGUgY2FuIHJlZmVyZW5jZSBpdCB3aGVuIHRoZXkgY29udGFjdCBzb21lb25lIGF0IHRoaXMgYWRkcmVzcy5cclxuICAqL1xyXG4gIGFkZHJlc3MxX3V0Y29mZnNldD86IG51bWJlciB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDI6IElEIFVuaXF1ZWlkZW50aWZpZXJUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIGZvciBhZGRyZXNzIDIuXHJcbiAgKi9cclxuICBhZGRyZXNzMl9hZGRyZXNzaWQ/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkd1aWQgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAyOiBBZGRyZXNzIFR5cGUgY29udGFjdF9jb250YWN0X2FkZHJlc3MyX2FkZHJlc3N0eXBlY29kZSBTZWxlY3QgdGhlIHNlY29uZGFyeSBhZGRyZXNzIHR5cGUuXHJcbiAgKi9cclxuICBhZGRyZXNzMl9hZGRyZXNzdHlwZWNvZGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9jb250YWN0X2NvbnRhY3RfYWRkcmVzczJfYWRkcmVzc3R5cGVjb2RlXCIpLmNvbnRhY3RfY29udGFjdF9hZGRyZXNzMl9hZGRyZXNzdHlwZWNvZGUgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAyOiBDaXR5IFN0cmluZ1R5cGUgVHlwZSB0aGUgY2l0eSBmb3IgdGhlIHNlY29uZGFyeSBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczJfY2l0eT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDIgTWVtb1R5cGUgU2hvd3MgdGhlIGNvbXBsZXRlIHNlY29uZGFyeSBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczJfY29tcG9zaXRlPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMjogQ291bnRyeS9SZWdpb24gU3RyaW5nVHlwZSBUeXBlIHRoZSBjb3VudHJ5IG9yIHJlZ2lvbiBmb3IgdGhlIHNlY29uZGFyeSBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczJfY291bnRyeT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDI6IENvdW50eSBTdHJpbmdUeXBlIFR5cGUgdGhlIGNvdW50eSBmb3IgdGhlIHNlY29uZGFyeSBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczJfY291bnR5Pzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMjogRmF4IFN0cmluZ1R5cGUgVHlwZSB0aGUgZmF4IG51bWJlciBhc3NvY2lhdGVkIHdpdGggdGhlIHNlY29uZGFyeSBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczJfZmF4Pzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMjogRnJlaWdodCBUZXJtcyBjb250YWN0X2NvbnRhY3RfYWRkcmVzczJfZnJlaWdodHRlcm1zY29kZSBTZWxlY3QgdGhlIGZyZWlnaHQgdGVybXMgZm9yIHRoZSBzZWNvbmRhcnkgYWRkcmVzcyB0byBtYWtlIHN1cmUgc2hpcHBpbmcgb3JkZXJzIGFyZSBwcm9jZXNzZWQgY29ycmVjdGx5LlxyXG4gICovXHJcbiAgYWRkcmVzczJfZnJlaWdodHRlcm1zY29kZT86IGltcG9ydChcIi4uL2VudW1zL2NvbnRhY3RfY29udGFjdF9hZGRyZXNzMl9mcmVpZ2h0dGVybXNjb2RlXCIpLmNvbnRhY3RfY29udGFjdF9hZGRyZXNzMl9mcmVpZ2h0dGVybXNjb2RlIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMjogTGF0aXR1ZGUgRG91YmxlVHlwZSBUeXBlIHRoZSBsYXRpdHVkZSB2YWx1ZSBmb3IgdGhlIHNlY29uZGFyeSBhZGRyZXNzIGZvciB1c2UgaW4gbWFwcGluZyBhbmQgb3RoZXIgYXBwbGljYXRpb25zLlxyXG4gICovXHJcbiAgYWRkcmVzczJfbGF0aXR1ZGU/OiBudW1iZXIgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAyOiBTdHJlZXQgMSBTdHJpbmdUeXBlIFR5cGUgdGhlIGZpcnN0IGxpbmUgb2YgdGhlIHNlY29uZGFyeSBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczJfbGluZTE/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAyOiBTdHJlZXQgMiBTdHJpbmdUeXBlIFR5cGUgdGhlIHNlY29uZCBsaW5lIG9mIHRoZSBzZWNvbmRhcnkgYWRkcmVzcy5cclxuICAqL1xyXG4gIGFkZHJlc3MyX2xpbmUyPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMjogU3RyZWV0IDMgU3RyaW5nVHlwZSBUeXBlIHRoZSB0aGlyZCBsaW5lIG9mIHRoZSBzZWNvbmRhcnkgYWRkcmVzcy5cclxuICAqL1xyXG4gIGFkZHJlc3MyX2xpbmUzPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMjogTG9uZ2l0dWRlIERvdWJsZVR5cGUgVHlwZSB0aGUgbG9uZ2l0dWRlIHZhbHVlIGZvciB0aGUgc2Vjb25kYXJ5IGFkZHJlc3MgZm9yIHVzZSBpbiBtYXBwaW5nIGFuZCBvdGhlciBhcHBsaWNhdGlvbnMuXHJcbiAgKi9cclxuICBhZGRyZXNzMl9sb25naXR1ZGU/OiBudW1iZXIgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAyOiBOYW1lIFN0cmluZ1R5cGUgVHlwZSBhIGRlc2NyaXB0aXZlIG5hbWUgZm9yIHRoZSBzZWNvbmRhcnkgYWRkcmVzcywgc3VjaCBhcyBDb3Jwb3JhdGUgSGVhZHF1YXJ0ZXJzLlxyXG4gICovXHJcbiAgYWRkcmVzczJfbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDI6IFpJUC9Qb3N0YWwgQ29kZSBTdHJpbmdUeXBlIFR5cGUgdGhlIFpJUCBDb2RlIG9yIHBvc3RhbCBjb2RlIGZvciB0aGUgc2Vjb25kYXJ5IGFkZHJlc3MuXHJcbiAgKi9cclxuICBhZGRyZXNzMl9wb3N0YWxjb2RlPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMjogUG9zdCBPZmZpY2UgQm94IFN0cmluZ1R5cGUgVHlwZSB0aGUgcG9zdCBvZmZpY2UgYm94IG51bWJlciBvZiB0aGUgc2Vjb25kYXJ5IGFkZHJlc3MuXHJcbiAgKi9cclxuICBhZGRyZXNzMl9wb3N0b2ZmaWNlYm94Pzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMjogUHJpbWFyeSBDb250YWN0IE5hbWUgU3RyaW5nVHlwZSBUeXBlIHRoZSBuYW1lIG9mIHRoZSBtYWluIGNvbnRhY3QgYXQgdGhlIGFjY291bnQncyBzZWNvbmRhcnkgYWRkcmVzcy5cclxuICAqL1xyXG4gIGFkZHJlc3MyX3ByaW1hcnljb250YWN0bmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDI6IFNoaXBwaW5nIE1ldGhvZCBjb250YWN0X2NvbnRhY3RfYWRkcmVzczJfc2hpcHBpbmdtZXRob2Rjb2RlIFNlbGVjdCBhIHNoaXBwaW5nIG1ldGhvZCBmb3IgZGVsaXZlcmllcyBzZW50IHRvIHRoaXMgYWRkcmVzcy5cclxuICAqL1xyXG4gIGFkZHJlc3MyX3NoaXBwaW5nbWV0aG9kY29kZT86IGltcG9ydChcIi4uL2VudW1zL2NvbnRhY3RfY29udGFjdF9hZGRyZXNzMl9zaGlwcGluZ21ldGhvZGNvZGVcIikuY29udGFjdF9jb250YWN0X2FkZHJlc3MyX3NoaXBwaW5nbWV0aG9kY29kZSB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDI6IFN0YXRlL1Byb3ZpbmNlIFN0cmluZ1R5cGUgVHlwZSB0aGUgc3RhdGUgb3IgcHJvdmluY2Ugb2YgdGhlIHNlY29uZGFyeSBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczJfc3RhdGVvcnByb3ZpbmNlPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMjogVGVsZXBob25lIDEgU3RyaW5nVHlwZSBUeXBlIHRoZSBtYWluIHBob25lIG51bWJlciBhc3NvY2lhdGVkIHdpdGggdGhlIHNlY29uZGFyeSBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczJfdGVsZXBob25lMT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDI6IFRlbGVwaG9uZSAyIFN0cmluZ1R5cGUgVHlwZSBhIHNlY29uZCBwaG9uZSBudW1iZXIgYXNzb2NpYXRlZCB3aXRoIHRoZSBzZWNvbmRhcnkgYWRkcmVzcy5cclxuICAqL1xyXG4gIGFkZHJlc3MyX3RlbGVwaG9uZTI/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAyOiBUZWxlcGhvbmUgMyBTdHJpbmdUeXBlIFR5cGUgYSB0aGlyZCBwaG9uZSBudW1iZXIgYXNzb2NpYXRlZCB3aXRoIHRoZSBzZWNvbmRhcnkgYWRkcmVzcy5cclxuICAqL1xyXG4gIGFkZHJlc3MyX3RlbGVwaG9uZTM/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAyOiBVUFMgWm9uZSBTdHJpbmdUeXBlIFR5cGUgdGhlIFVQUyB6b25lIG9mIHRoZSBzZWNvbmRhcnkgYWRkcmVzcyB0byBtYWtlIHN1cmUgc2hpcHBpbmcgY2hhcmdlcyBhcmUgY2FsY3VsYXRlZCBjb3JyZWN0bHkgYW5kIGRlbGl2ZXJpZXMgYXJlIG1hZGUgcHJvbXB0bHksIGlmIHNoaXBwZWQgYnkgVVBTLlxyXG4gICovXHJcbiAgYWRkcmVzczJfdXBzem9uZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDI6IFVUQyBPZmZzZXQgSW50ZWdlclR5cGUgU2VsZWN0IHRoZSB0aW1lIHpvbmUsIG9yIFVUQyBvZmZzZXQsIGZvciB0aGlzIGFkZHJlc3Mgc28gdGhhdCBvdGhlciBwZW9wbGUgY2FuIHJlZmVyZW5jZSBpdCB3aGVuIHRoZXkgY29udGFjdCBzb21lb25lIGF0IHRoaXMgYWRkcmVzcy5cclxuICAqL1xyXG4gIGFkZHJlc3MyX3V0Y29mZnNldD86IG51bWJlciB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDM6IElEIFVuaXF1ZWlkZW50aWZpZXJUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIGZvciBhZGRyZXNzIDMuXHJcbiAgKi9cclxuICBhZGRyZXNzM19hZGRyZXNzaWQ/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkd1aWQgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAzOiBBZGRyZXNzIFR5cGUgY29udGFjdF9jb250YWN0X2FkZHJlc3MzX2FkZHJlc3N0eXBlY29kZSBTZWxlY3QgdGhlIHRoaXJkIGFkZHJlc3MgdHlwZS5cclxuICAqL1xyXG4gIGFkZHJlc3MzX2FkZHJlc3N0eXBlY29kZT86IGltcG9ydChcIi4uL2VudW1zL2NvbnRhY3RfY29udGFjdF9hZGRyZXNzM19hZGRyZXNzdHlwZWNvZGVcIikuY29udGFjdF9jb250YWN0X2FkZHJlc3MzX2FkZHJlc3N0eXBlY29kZSB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDM6IENpdHkgU3RyaW5nVHlwZSBUeXBlIHRoZSBjaXR5IGZvciB0aGUgM3JkIGFkZHJlc3MuXHJcbiAgKi9cclxuICBhZGRyZXNzM19jaXR5Pzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMyBNZW1vVHlwZSBTaG93cyB0aGUgY29tcGxldGUgdGhpcmQgYWRkcmVzcy5cclxuICAqL1xyXG4gIGFkZHJlc3MzX2NvbXBvc2l0ZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzMzogQ291bnRyeS9SZWdpb24gU3RyaW5nVHlwZSB0aGUgY291bnRyeSBvciByZWdpb24gZm9yIHRoZSAzcmQgYWRkcmVzcy5cclxuICAqL1xyXG4gIGFkZHJlc3MzX2NvdW50cnk/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAzOiBDb3VudHkgU3RyaW5nVHlwZSBUeXBlIHRoZSBjb3VudHkgZm9yIHRoZSB0aGlyZCBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczNfY291bnR5Pzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMzogRmF4IFN0cmluZ1R5cGUgVHlwZSB0aGUgZmF4IG51bWJlciBhc3NvY2lhdGVkIHdpdGggdGhlIHRoaXJkIGFkZHJlc3MuXHJcbiAgKi9cclxuICBhZGRyZXNzM19mYXg/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAzOiBGcmVpZ2h0IFRlcm1zIGNvbnRhY3RfY29udGFjdF9hZGRyZXNzM19mcmVpZ2h0dGVybXNjb2RlIFNlbGVjdCB0aGUgZnJlaWdodCB0ZXJtcyBmb3IgdGhlIHRoaXJkIGFkZHJlc3MgdG8gbWFrZSBzdXJlIHNoaXBwaW5nIG9yZGVycyBhcmUgcHJvY2Vzc2VkIGNvcnJlY3RseS5cclxuICAqL1xyXG4gIGFkZHJlc3MzX2ZyZWlnaHR0ZXJtc2NvZGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9jb250YWN0X2NvbnRhY3RfYWRkcmVzczNfZnJlaWdodHRlcm1zY29kZVwiKS5jb250YWN0X2NvbnRhY3RfYWRkcmVzczNfZnJlaWdodHRlcm1zY29kZSB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDM6IExhdGl0dWRlIERvdWJsZVR5cGUgVHlwZSB0aGUgbGF0aXR1ZGUgdmFsdWUgZm9yIHRoZSB0aGlyZCBhZGRyZXNzIGZvciB1c2UgaW4gbWFwcGluZyBhbmQgb3RoZXIgYXBwbGljYXRpb25zLlxyXG4gICovXHJcbiAgYWRkcmVzczNfbGF0aXR1ZGU/OiBudW1iZXIgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzczM6IFN0cmVldCAxIFN0cmluZ1R5cGUgdGhlIGZpcnN0IGxpbmUgb2YgdGhlIDNyZCBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczNfbGluZTE/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzczM6IFN0cmVldCAyIFN0cmluZ1R5cGUgdGhlIHNlY29uZCBsaW5lIG9mIHRoZSAzcmQgYWRkcmVzcy5cclxuICAqL1xyXG4gIGFkZHJlc3MzX2xpbmUyPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MzOiBTdHJlZXQgMyBTdHJpbmdUeXBlIHRoZSB0aGlyZCBsaW5lIG9mIHRoZSAzcmQgYWRkcmVzcy5cclxuICAqL1xyXG4gIGFkZHJlc3MzX2xpbmUzPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMzogTG9uZ2l0dWRlIERvdWJsZVR5cGUgVHlwZSB0aGUgbG9uZ2l0dWRlIHZhbHVlIGZvciB0aGUgdGhpcmQgYWRkcmVzcyBmb3IgdXNlIGluIG1hcHBpbmcgYW5kIG90aGVyIGFwcGxpY2F0aW9ucy5cclxuICAqL1xyXG4gIGFkZHJlc3MzX2xvbmdpdHVkZT86IG51bWJlciB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDM6IE5hbWUgU3RyaW5nVHlwZSBUeXBlIGEgZGVzY3JpcHRpdmUgbmFtZSBmb3IgdGhlIHRoaXJkIGFkZHJlc3MsIHN1Y2ggYXMgQ29ycG9yYXRlIEhlYWRxdWFydGVycy5cclxuICAqL1xyXG4gIGFkZHJlc3MzX25hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzczM6IFpJUC9Qb3N0YWwgQ29kZSBTdHJpbmdUeXBlIHRoZSBaSVAgQ29kZSBvciBwb3N0YWwgY29kZSBmb3IgdGhlIDNyZCBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczNfcG9zdGFsY29kZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDM6IFBvc3QgT2ZmaWNlIEJveCBTdHJpbmdUeXBlIHRoZSBwb3N0IG9mZmljZSBib3ggbnVtYmVyIG9mIHRoZSAzcmQgYWRkcmVzcy5cclxuICAqL1xyXG4gIGFkZHJlc3MzX3Bvc3RvZmZpY2Vib3g/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAzOiBQcmltYXJ5IENvbnRhY3QgTmFtZSBTdHJpbmdUeXBlIFR5cGUgdGhlIG5hbWUgb2YgdGhlIG1haW4gY29udGFjdCBhdCB0aGUgYWNjb3VudCdzIHRoaXJkIGFkZHJlc3MuXHJcbiAgKi9cclxuICBhZGRyZXNzM19wcmltYXJ5Y29udGFjdG5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAzOiBTaGlwcGluZyBNZXRob2QgY29udGFjdF9jb250YWN0X2FkZHJlc3MzX3NoaXBwaW5nbWV0aG9kY29kZSBTZWxlY3QgYSBzaGlwcGluZyBtZXRob2QgZm9yIGRlbGl2ZXJpZXMgc2VudCB0byB0aGlzIGFkZHJlc3MuXHJcbiAgKi9cclxuICBhZGRyZXNzM19zaGlwcGluZ21ldGhvZGNvZGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9jb250YWN0X2NvbnRhY3RfYWRkcmVzczNfc2hpcHBpbmdtZXRob2Rjb2RlXCIpLmNvbnRhY3RfY29udGFjdF9hZGRyZXNzM19zaGlwcGluZ21ldGhvZGNvZGUgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzczM6IFN0YXRlL1Byb3ZpbmNlIFN0cmluZ1R5cGUgdGhlIHN0YXRlIG9yIHByb3ZpbmNlIG9mIHRoZSB0aGlyZCBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczNfc3RhdGVvcnByb3ZpbmNlPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEFkZHJlc3MgMzogVGVsZXBob25lMSBTdHJpbmdUeXBlIFR5cGUgdGhlIG1haW4gcGhvbmUgbnVtYmVyIGFzc29jaWF0ZWQgd2l0aCB0aGUgdGhpcmQgYWRkcmVzcy5cclxuICAqL1xyXG4gIGFkZHJlc3MzX3RlbGVwaG9uZTE/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAzOiBUZWxlcGhvbmUyIFN0cmluZ1R5cGUgVHlwZSBhIHNlY29uZCBwaG9uZSBudW1iZXIgYXNzb2NpYXRlZCB3aXRoIHRoZSB0aGlyZCBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczNfdGVsZXBob25lMj86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDM6IFRlbGVwaG9uZTMgU3RyaW5nVHlwZSBUeXBlIGEgdGhpcmQgcGhvbmUgbnVtYmVyIGFzc29jaWF0ZWQgd2l0aCB0aGUgcHJpbWFyeSBhZGRyZXNzLlxyXG4gICovXHJcbiAgYWRkcmVzczNfdGVsZXBob25lMz86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBBZGRyZXNzIDM6IFVQUyBab25lIFN0cmluZ1R5cGUgVHlwZSB0aGUgVVBTIHpvbmUgb2YgdGhlIHRoaXJkIGFkZHJlc3MgdG8gbWFrZSBzdXJlIHNoaXBwaW5nIGNoYXJnZXMgYXJlIGNhbGN1bGF0ZWQgY29ycmVjdGx5IGFuZCBkZWxpdmVyaWVzIGFyZSBtYWRlIHByb21wdGx5LCBpZiBzaGlwcGVkIGJ5IFVQUy5cclxuICAqL1xyXG4gIGFkZHJlc3MzX3Vwc3pvbmU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWRkcmVzcyAzOiBVVEMgT2Zmc2V0IEludGVnZXJUeXBlIFNlbGVjdCB0aGUgdGltZSB6b25lLCBvciBVVEMgb2Zmc2V0LCBmb3IgdGhpcyBhZGRyZXNzIHNvIHRoYXQgb3RoZXIgcGVvcGxlIGNhbiByZWZlcmVuY2UgaXQgd2hlbiB0aGV5IGNvbnRhY3Qgc29tZW9uZSBhdCB0aGlzIGFkZHJlc3MuXHJcbiAgKi9cclxuICBhZGRyZXNzM191dGNvZmZzZXQ/OiBudW1iZXIgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWdpbmcgMzAgTW9uZXlUeXBlIEZvciBzeXN0ZW0gdXNlIG9ubHkuXHJcbiAgKi9cclxuICBhZ2luZzMwPzogbnVtYmVyIHwgbnVsbDtcclxuICAvKlxyXG4gIEFnaW5nIDMwIChCYXNlKSBNb25leVR5cGUgU2hvd3MgdGhlIEFnaW5nIDMwIGZpZWxkIGNvbnZlcnRlZCB0byB0aGUgc3lzdGVtJ3MgZGVmYXVsdCBiYXNlIGN1cnJlbmN5LiBUaGUgY2FsY3VsYXRpb25zIHVzZSB0aGUgZXhjaGFuZ2UgcmF0ZSBzcGVjaWZpZWQgaW4gdGhlIEN1cnJlbmNpZXMgYXJlYS5cclxuICAqL1xyXG4gIGFnaW5nMzBfYmFzZT86IG51bWJlciB8IG51bGw7XHJcbiAgLypcclxuICBBZ2luZyA2MCBNb25leVR5cGUgRm9yIHN5c3RlbSB1c2Ugb25seS5cclxuICAqL1xyXG4gIGFnaW5nNjA/OiBudW1iZXIgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWdpbmcgNjAgKEJhc2UpIE1vbmV5VHlwZSBTaG93cyB0aGUgQWdpbmcgNjAgZmllbGQgY29udmVydGVkIHRvIHRoZSBzeXN0ZW0ncyBkZWZhdWx0IGJhc2UgY3VycmVuY3kuIFRoZSBjYWxjdWxhdGlvbnMgdXNlIHRoZSBleGNoYW5nZSByYXRlIHNwZWNpZmllZCBpbiB0aGUgQ3VycmVuY2llcyBhcmVhLlxyXG4gICovXHJcbiAgYWdpbmc2MF9iYXNlPzogbnVtYmVyIHwgbnVsbDtcclxuICAvKlxyXG4gIEFnaW5nIDkwIE1vbmV5VHlwZSBGb3Igc3lzdGVtIHVzZSBvbmx5LlxyXG4gICovXHJcbiAgYWdpbmc5MD86IG51bWJlciB8IG51bGw7XHJcbiAgLypcclxuICBBZ2luZyA5MCAoQmFzZSkgTW9uZXlUeXBlIFNob3dzIHRoZSBBZ2luZyA5MCBmaWVsZCBjb252ZXJ0ZWQgdG8gdGhlIHN5c3RlbSdzIGRlZmF1bHQgYmFzZSBjdXJyZW5jeS4gVGhlIGNhbGN1bGF0aW9ucyB1c2UgdGhlIGV4Y2hhbmdlIHJhdGUgc3BlY2lmaWVkIGluIHRoZSBDdXJyZW5jaWVzIGFyZWEuXHJcbiAgKi9cclxuICBhZ2luZzkwX2Jhc2U/OiBudW1iZXIgfCBudWxsO1xyXG4gIC8qXHJcbiAgQW5uaXZlcnNhcnkgRGF0ZVRpbWVUeXBlIEVudGVyIHRoZSBkYXRlIG9mIHRoZSBjb250YWN0J3Mgd2VkZGluZyBvciBzZXJ2aWNlIGFubml2ZXJzYXJ5IGZvciB1c2UgaW4gY3VzdG9tZXIgZ2lmdCBwcm9ncmFtcyBvciBvdGhlciBjb21tdW5pY2F0aW9ucy4gRGF0ZU9ubHk6RGF0ZU9ubHlcclxuICAqL1xyXG4gIGFubml2ZXJzYXJ5PzogRGF0ZSB8IG51bGw7XHJcbiAgLypcclxuICBBbm51YWwgSW5jb21lIE1vbmV5VHlwZSBUeXBlIHRoZSBjb250YWN0J3MgYW5udWFsIGluY29tZSBmb3IgdXNlIGluIHByb2ZpbGluZyBhbmQgZmluYW5jaWFsIGFuYWx5c2lzLlxyXG4gICovXHJcbiAgYW5udWFsaW5jb21lPzogbnVtYmVyIHwgbnVsbDtcclxuICAvKlxyXG4gIEFubnVhbCBJbmNvbWUgKEJhc2UpIE1vbmV5VHlwZSBTaG93cyB0aGUgQW5udWFsIEluY29tZSBmaWVsZCBjb252ZXJ0ZWQgdG8gdGhlIHN5c3RlbSdzIGRlZmF1bHQgYmFzZSBjdXJyZW5jeS4gVGhlIGNhbGN1bGF0aW9ucyB1c2UgdGhlIGV4Y2hhbmdlIHJhdGUgc3BlY2lmaWVkIGluIHRoZSBDdXJyZW5jaWVzIGFyZWEuXHJcbiAgKi9cclxuICBhbm51YWxpbmNvbWVfYmFzZT86IG51bWJlciB8IG51bGw7XHJcbiAgLypcclxuICBBc3Npc3RhbnQgU3RyaW5nVHlwZSBUeXBlIHRoZSBuYW1lIG9mIHRoZSBjb250YWN0J3MgYXNzaXN0YW50LlxyXG4gICovXHJcbiAgYXNzaXN0YW50bmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBBc3Npc3RhbnQgUGhvbmUgU3RyaW5nVHlwZSBUeXBlIHRoZSBwaG9uZSBudW1iZXIgZm9yIHRoZSBjb250YWN0J3MgYXNzaXN0YW50LlxyXG4gICovXHJcbiAgYXNzaXN0YW50cGhvbmU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQmlydGhkYXkgRGF0ZVRpbWVUeXBlIEVudGVyIHRoZSBjb250YWN0J3MgYmlydGhkYXkgZm9yIHVzZSBpbiBjdXN0b21lciBnaWZ0IHByb2dyYW1zIG9yIG90aGVyIGNvbW11bmljYXRpb25zLiBEYXRlT25seTpEYXRlT25seVxyXG4gICovXHJcbiAgYmlydGhkYXRlPzogRGF0ZSB8IG51bGw7XHJcbiAgLypcclxuICBBY3Rpdml0eSBMb29rdXBUeXBlXHJcbiAgKi9cclxuICBiaXNfYWN0aXZpdHk/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkVudGl0eVJlZmVyZW5jZSB8IG51bGw7XHJcbiAgLypcclxuICBBY3Rpdml0eSBDYXRlZ29yeSBMb29rdXBUeXBlXHJcbiAgKi9cclxuICBiaXNfYWN0aXZpdHljYXRlZ29yeT86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBiaXNfYWN0aXZpdHljYXRlZ29yeW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGJpc19hY3Rpdml0eW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQWN0aXZpdHkgU3ViIENhdGVnb3J5IExvb2t1cFR5cGVcclxuICAqL1xyXG4gIGJpc19hY3Rpdml0eXN1YmNhdGVnb3J5PzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGJpc19hY3Rpdml0eXN1YmNhdGVnb3J5bmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgYmlzX2FjdGl2aXR5c3ViY2F0ZWdvcnl5b21pbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgYmlzX2FjdGl2aXR5eW9taW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQXNpYW4gTmFtZSBCb29sZWFuVHlwZVxyXG4gICovXHJcbiAgYmlzX2FzaWFubmFtZT86IGJvb2xlYW4gfCBudWxsO1xyXG4gIC8qXHJcbiAgQmFua2luZyBGdW5jdGlvbiBMb29rdXBUeXBlXHJcbiAgKi9cclxuICBiaXNfYmFua2luZ2Z1bmN0aW9uPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGJpc19iYW5raW5nZnVuY3Rpb25uYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIENJQU0gQWNjb3VudCBJRCBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBiaXNfY2lhbWFjY291bnRpZD86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBDSVMgSUQgSW50ZWdlclR5cGVcclxuICAqL1xyXG4gIGJpc19jaXNpZD86IG51bWJlciB8IG51bGw7XHJcbiAgLypcclxuICBDb250YWN0IFR5cGUgYmlzX2NvbnRhY3R0eXBlXHJcbiAgKi9cclxuICBiaXNfY29udGFjdHR5cGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9iaXNfY29udGFjdHR5cGVcIikuYmlzX2NvbnRhY3R0eXBlIHwgbnVsbDtcclxuICAvKlxyXG4gIENvbnRpbmdlbmN5IEFycmFuZ2VtZW50cyBMb29rdXBUeXBlXHJcbiAgKi9cclxuICBiaXNfY29udGluZ2VuY3lhcnJhbmdlbWVudHM/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkVudGl0eVJlZmVyZW5jZSB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgYmlzX2NvbnRpbmdlbmN5YXJyYW5nZW1lbnRzbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBDUE1JIEZpZWxkIG9mIEV4cGVydGlzZSBiaXNfY29udGFjdGNwbWlmaWVsZG9mZXhwZXJ0aXNlXHJcbiAgKi9cclxuICBiaXNfY3BtaWZpZWxkb2ZleHBlcnRpc2U/OiBpbXBvcnQoXCIuLi9lbnVtcy9iaXNfY29udGFjdGNwbWlmaWVsZG9mZXhwZXJ0aXNlXCIpLmJpc19jb250YWN0Y3BtaWZpZWxkb2ZleHBlcnRpc2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgQ1BNSSBJbnRlcm5hbCBDb250YWN0IExvb2t1cFR5cGVcclxuICAqL1xyXG4gIGJpc19jcG1paW50ZXJuYWxjb250YWN0PzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGJpc19jcG1paW50ZXJuYWxjb250YWN0bmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgYmlzX2NwbWlpbnRlcm5hbGNvbnRhY3R5b21pbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBDcmVhdGlvbiBTb3VyY2UgYmlzX2NyZWF0aW9uc291cmNlXHJcbiAgKi9cclxuICBiaXNfY3JlYXRpb25zb3VyY2U/OiBpbXBvcnQoXCIuLi9lbnVtcy9iaXNfY3JlYXRpb25zb3VyY2VcIikuYmlzX2NyZWF0aW9uc291cmNlIHwgbnVsbDtcclxuICAvKlxyXG4gIENSTSBJRCBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBiaXNfY3JtaWQ/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgRGVwYXJ0bWVudCBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBiaXNfZGVwYXJ0bWVudD86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBFbWJhcmdvIFJlc3BlY3QgQm9vbGVhblR5cGVcclxuICAqL1xyXG4gIGJpc19lbWJhcmdvcmVzcGVjdD86IGJvb2xlYW4gfCBudWxsO1xyXG4gIC8qXHJcbiAgRW1iYXJnbyBSZXNwZWN0IFRyYWNrIERhdGUgRGF0ZVRpbWVUeXBlIERhdGVPbmx5OlVzZXJMb2NhbFxyXG4gICovXHJcbiAgYmlzX2VtYmFyZ29yZXNwZWN0dHJhY2tkYXRlPzogRGF0ZSB8IG51bGw7XHJcbiAgLypcclxuICBJbnN0aXR1dGlvbiBHcm91cCBMb29rdXBUeXBlXHJcbiAgKi9cclxuICBiaXNfaW5zdGl0dXRpb25ncm91cD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBiaXNfaW5zdGl0dXRpb25ncm91cG5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgSW50ZXJuYXRpb25hbCBQcmludCBBZGRyZXNzIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGJpc19pbnRlcm5hdGlvbmFscHJpbnRhZGRyZXNzPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIExhbmd1YWdlIFNwb2tlbiBiaXNfbGFuZ3VhZ2VzcG9rZW5cclxuICAqL1xyXG4gIGJpc19sYW5ndWFnZXNwb2tlbj86IGltcG9ydChcIi4uL2VudW1zL2Jpc19sYW5ndWFnZXNwb2tlblwiKS5iaXNfbGFuZ3VhZ2VzcG9rZW5bXSB8IG51bGw7XHJcbiAgLypcclxuICBOYXRpb25hbGl0eSBMb29rdXBUeXBlXHJcbiAgKi9cclxuICBiaXNfbmF0aW9uYWxpdHk/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkVudGl0eVJlZmVyZW5jZSB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgYmlzX25hdGlvbmFsaXR5bmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBQYXJlbnQgSW5zdGl0dXRpb24gTG9va3VwVHlwZVxyXG4gICovXHJcbiAgYmlzX3BhcmVudGluc3RpdHV0aW9uPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGJpc19wYXJlbnRpbnN0aXR1dGlvbm5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGJpc19wYXJlbnRpbnN0aXR1dGlvbnlvbWluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIFByZWZpeCBiaXNfcHJlZml4XHJcbiAgKi9cclxuICBiaXNfcHJlZml4PzogaW1wb3J0KFwiLi4vZW51bXMvYmlzX3ByZWZpeFwiKS5iaXNfcHJlZml4IHwgbnVsbDtcclxuICAvKlxyXG4gIFJhbmtpbmcgTG9va3VwVHlwZVxyXG4gICovXHJcbiAgYmlzX3Jhbmtpbmc/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkVudGl0eVJlZmVyZW5jZSB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgYmlzX3JhbmtpbmduYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIFJlcG9ydHMgVG8gTG9va3VwVHlwZVxyXG4gICovXHJcbiAgYmlzX3JlcG9ydHN0bz86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBiaXNfcmVwb3J0c3RvbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgYmlzX3JlcG9ydHN0b3lvbWluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIFNhbHV0YXRpb24gYmlzX3NhbHV0YXRpb25cclxuICAqL1xyXG4gIGJpc19zYWx1dGF0aW9uPzogaW1wb3J0KFwiLi4vZW51bXMvYmlzX3NhbHV0YXRpb25cIikuYmlzX3NhbHV0YXRpb24gfCBudWxsO1xyXG4gIC8qXHJcbiAgU0FOQyBCb29sZWFuVHlwZVxyXG4gICovXHJcbiAgYmlzX3NhbmM/OiBib29sZWFuIHwgbnVsbDtcclxuICAvKlxyXG4gIFNlY3Rpb24vVW5pdCBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBiaXNfc2VjdGlvbnVuaXQ/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgU2lnbmVkIFQmQyB2ZXJzaW9uIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGJpc19zaWduZWR0Y3ZlcnNpb24/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgU3Rha2Vob2xkZXIgQW5hbHlzaXMgTWVtb1R5cGVcclxuICAqL1xyXG4gIGJpc19zdGFrZWhvbGRlcmFuYWx5c2lzPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIFQmQyBzaWduYXR1cmUgZGF0ZSBEYXRlVGltZVR5cGUgRGF0ZU9ubHk6VXNlckxvY2FsXHJcbiAgKi9cclxuICBiaXNfdGNzaWduYXR1cmVkYXRlPzogRGF0ZSB8IG51bGw7XHJcbiAgLypcclxuICBUJkMgVmVyc2lvbiBTaWduZWQgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgYmlzX3RjdmVyc2lvbnNpZ25lZD86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBCdXNpbmVzcyBQaG9uZSAyIFN0cmluZ1R5cGUgVHlwZSBhIHNlY29uZCBidXNpbmVzcyBwaG9uZSBudW1iZXIgZm9yIHRoaXMgY29udGFjdC5cclxuICAqL1xyXG4gIGJ1c2luZXNzMj86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBCdXNpbmVzcyBDYXJkIE1lbW9UeXBlIFN0b3JlcyBJbWFnZSBvZiB0aGUgQnVzaW5lc3MgQ2FyZFxyXG4gICovXHJcbiAgYnVzaW5lc3NjYXJkPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEJ1c2luZXNzQ2FyZEF0dHJpYnV0ZXMgU3RyaW5nVHlwZSBTdG9yZXMgQnVzaW5lc3MgQ2FyZCBDb250cm9sIFByb3BlcnRpZXMuXHJcbiAgKi9cclxuICBidXNpbmVzc2NhcmRhdHRyaWJ1dGVzPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIENhbGxiYWNrIE51bWJlciBTdHJpbmdUeXBlIFR5cGUgYSBjYWxsYmFjayBwaG9uZSBudW1iZXIgZm9yIHRoaXMgY29udGFjdC5cclxuICAqL1xyXG4gIGNhbGxiYWNrPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIENoaWxkcmVuJ3MgTmFtZXMgU3RyaW5nVHlwZSBUeXBlIHRoZSBuYW1lcyBvZiB0aGUgY29udGFjdCdzIGNoaWxkcmVuIGZvciByZWZlcmVuY2UgaW4gY29tbXVuaWNhdGlvbnMgYW5kIGNsaWVudCBwcm9ncmFtcy5cclxuICAqL1xyXG4gIGNoaWxkcmVuc25hbWVzPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIENvbXBhbnkgUGhvbmUgU3RyaW5nVHlwZSBUeXBlIHRoZSBjb21wYW55IHBob25lIG9mIHRoZSBjb250YWN0LlxyXG4gICovXHJcbiAgY29tcGFueT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBDb250YWN0IFVuaXF1ZWlkZW50aWZpZXJUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBjb250YWN0LlxyXG4gICovXHJcbiAgY29udGFjdGlkPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5HdWlkIHwgbnVsbDtcclxuICAvKlxyXG4gIENyZWF0ZWQgQnkgTG9va3VwVHlwZSBTaG93cyB3aG8gY3JlYXRlZCB0aGUgcmVjb3JkLlxyXG4gICovXHJcbiAgY3JlYXRlZGJ5PzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgQ3JlYXRlZCBCeSAoRXh0ZXJuYWwgUGFydHkpIExvb2t1cFR5cGUgU2hvd3MgdGhlIGV4dGVybmFsIHBhcnR5IHdobyBjcmVhdGVkIHRoZSByZWNvcmQuXHJcbiAgKi9cclxuICBjcmVhdGVkYnlleHRlcm5hbHBhcnR5PzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGNyZWF0ZWRieWV4dGVybmFscGFydHluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBjcmVhdGVkYnlleHRlcm5hbHBhcnR5eW9taW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGNyZWF0ZWRieW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGNyZWF0ZWRieXlvbWluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIENyZWF0ZWQgT24gRGF0ZVRpbWVUeXBlIFNob3dzIHRoZSBkYXRlIGFuZCB0aW1lIHdoZW4gdGhlIHJlY29yZCB3YXMgY3JlYXRlZC4gVGhlIGRhdGUgYW5kIHRpbWUgYXJlIGRpc3BsYXllZCBpbiB0aGUgdGltZSB6b25lIHNlbGVjdGVkIGluIE1pY3Jvc29mdCBEeW5hbWljcyAzNjUgb3B0aW9ucy4gRGF0ZUFuZFRpbWU6VXNlckxvY2FsXHJcbiAgKi9cclxuICBjcmVhdGVkb24/OiBEYXRlIHwgbnVsbDtcclxuICAvKlxyXG4gIENyZWF0ZWQgQnkgKERlbGVnYXRlKSBMb29rdXBUeXBlIFNob3dzIHdobyBjcmVhdGVkIHRoZSByZWNvcmQgb24gYmVoYWxmIG9mIGFub3RoZXIgdXNlci5cclxuICAqL1xyXG4gIGNyZWF0ZWRvbmJlaGFsZmJ5PzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGNyZWF0ZWRvbmJlaGFsZmJ5bmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgY3JlYXRlZG9uYmVoYWxmYnl5b21pbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBDcmVkaXQgTGltaXQgTW9uZXlUeXBlIFR5cGUgdGhlIGNyZWRpdCBsaW1pdCBvZiB0aGUgY29udGFjdCBmb3IgcmVmZXJlbmNlIHdoZW4geW91IGFkZHJlc3MgaW52b2ljZSBhbmQgYWNjb3VudGluZyBpc3N1ZXMgd2l0aCB0aGUgY3VzdG9tZXIuXHJcbiAgKi9cclxuICBjcmVkaXRsaW1pdD86IG51bWJlciB8IG51bGw7XHJcbiAgLypcclxuICBDcmVkaXQgTGltaXQgKEJhc2UpIE1vbmV5VHlwZSBTaG93cyB0aGUgQ3JlZGl0IExpbWl0IGZpZWxkIGNvbnZlcnRlZCB0byB0aGUgc3lzdGVtJ3MgZGVmYXVsdCBiYXNlIGN1cnJlbmN5IGZvciByZXBvcnRpbmcgcHVycG9zZXMuIFRoZSBjYWxjdWxhdGlvbnMgdXNlIHRoZSBleGNoYW5nZSByYXRlIHNwZWNpZmllZCBpbiB0aGUgQ3VycmVuY2llcyBhcmVhLlxyXG4gICovXHJcbiAgY3JlZGl0bGltaXRfYmFzZT86IG51bWJlciB8IG51bGw7XHJcbiAgLypcclxuICBDcmVkaXQgSG9sZCBCb29sZWFuVHlwZSBTZWxlY3Qgd2hldGhlciB0aGUgY29udGFjdCBpcyBvbiBhIGNyZWRpdCBob2xkLCBmb3IgcmVmZXJlbmNlIHdoZW4gYWRkcmVzc2luZyBpbnZvaWNlIGFuZCBhY2NvdW50aW5nIGlzc3Vlcy5cclxuICAqL1xyXG4gIGNyZWRpdG9uaG9sZD86IGJvb2xlYW4gfCBudWxsO1xyXG4gIC8qXHJcbiAgQ3VzdG9tZXIgU2l6ZSBjb250YWN0X2NvbnRhY3RfY3VzdG9tZXJzaXplY29kZSBTZWxlY3QgdGhlIHNpemUgb2YgdGhlIGNvbnRhY3QncyBjb21wYW55IGZvciBzZWdtZW50YXRpb24gYW5kIHJlcG9ydGluZyBwdXJwb3Nlcy5cclxuICAqL1xyXG4gIGN1c3RvbWVyc2l6ZWNvZGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9jb250YWN0X2NvbnRhY3RfY3VzdG9tZXJzaXplY29kZVwiKS5jb250YWN0X2NvbnRhY3RfY3VzdG9tZXJzaXplY29kZSB8IG51bGw7XHJcbiAgLypcclxuICBSZWxhdGlvbnNoaXAgVHlwZSBjb250YWN0X2NvbnRhY3RfY3VzdG9tZXJ0eXBlY29kZSBTZWxlY3QgdGhlIGNhdGVnb3J5IHRoYXQgYmVzdCBkZXNjcmliZXMgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRoZSBjb250YWN0IGFuZCB5b3VyIG9yZ2FuaXphdGlvbi5cclxuICAqL1xyXG4gIGN1c3RvbWVydHlwZWNvZGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9jb250YWN0X2NvbnRhY3RfY3VzdG9tZXJ0eXBlY29kZVwiKS5jb250YWN0X2NvbnRhY3RfY3VzdG9tZXJ0eXBlY29kZSB8IG51bGw7XHJcbiAgLypcclxuICBQcmljZSBMaXN0IExvb2t1cFR5cGUgQ2hvb3NlIHRoZSBkZWZhdWx0IHByaWNlIGxpc3QgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb250YWN0IHRvIG1ha2Ugc3VyZSB0aGUgY29ycmVjdCBwcm9kdWN0IHByaWNlcyBmb3IgdGhpcyBjdXN0b21lciBhcmUgYXBwbGllZCBpbiBzYWxlcyBvcHBvcnR1bml0aWVzLCBxdW90ZXMsIGFuZCBvcmRlcnMuXHJcbiAgKi9cclxuICBkZWZhdWx0cHJpY2VsZXZlbGlkPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGRlZmF1bHRwcmljZWxldmVsaWRuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIERlcGFydG1lbnQgU3RyaW5nVHlwZSBUeXBlIHRoZSBkZXBhcnRtZW50IG9yIGJ1c2luZXNzIHVuaXQgd2hlcmUgdGhlIGNvbnRhY3Qgd29ya3MgaW4gdGhlIHBhcmVudCBjb21wYW55IG9yIGJ1c2luZXNzLlxyXG4gICovXHJcbiAgZGVwYXJ0bWVudD86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBEZXNjcmlwdGlvbiBNZW1vVHlwZSBUeXBlIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gdG8gZGVzY3JpYmUgdGhlIGNvbnRhY3QsIHN1Y2ggYXMgYW4gZXhjZXJwdCBmcm9tIHRoZSBjb21wYW55J3Mgd2Vic2l0ZS5cclxuICAqL1xyXG4gIGRlc2NyaXB0aW9uPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIERvIG5vdCBhbGxvdyBCdWxrIEVtYWlscyBCb29sZWFuVHlwZSBTZWxlY3Qgd2hldGhlciB0aGUgY29udGFjdCBhY2NlcHRzIGJ1bGsgZW1haWwgc2VudCB0aHJvdWdoIG1hcmtldGluZyBjYW1wYWlnbnMgb3IgcXVpY2sgY2FtcGFpZ25zLiBJZiBEbyBOb3QgQWxsb3cgaXMgc2VsZWN0ZWQsIHRoZSBjb250YWN0IGNhbiBiZSBhZGRlZCB0byBtYXJrZXRpbmcgbGlzdHMsIGJ1dCB3aWxsIGJlIGV4Y2x1ZGVkIGZyb20gdGhlIGVtYWlsLlxyXG4gICovXHJcbiAgZG9ub3RidWxrZW1haWw/OiBib29sZWFuIHwgbnVsbDtcclxuICAvKlxyXG4gIERvIG5vdCBhbGxvdyBCdWxrIE1haWxzIEJvb2xlYW5UeXBlIFNlbGVjdCB3aGV0aGVyIHRoZSBjb250YWN0IGFjY2VwdHMgYnVsayBwb3N0YWwgbWFpbCBzZW50IHRocm91Z2ggbWFya2V0aW5nIGNhbXBhaWducyBvciBxdWljayBjYW1wYWlnbnMuIElmIERvIE5vdCBBbGxvdyBpcyBzZWxlY3RlZCwgdGhlIGNvbnRhY3QgY2FuIGJlIGFkZGVkIHRvIG1hcmtldGluZyBsaXN0cywgYnV0IHdpbGwgYmUgZXhjbHVkZWQgZnJvbSB0aGUgbGV0dGVycy5cclxuICAqL1xyXG4gIGRvbm90YnVsa3Bvc3RhbG1haWw/OiBib29sZWFuIHwgbnVsbDtcclxuICAvKlxyXG4gIERvIG5vdCBhbGxvdyBFbWFpbHMgQm9vbGVhblR5cGUgU2VsZWN0IHdoZXRoZXIgdGhlIGNvbnRhY3QgYWxsb3dzIGRpcmVjdCBlbWFpbCBzZW50IGZyb20gTWljcm9zb2Z0IER5bmFtaWNzIDM2NS4gSWYgRG8gTm90IEFsbG93IGlzIHNlbGVjdGVkLCBNaWNyb3NvZnQgRHluYW1pY3MgMzY1IHdpbGwgbm90IHNlbmQgdGhlIGVtYWlsLlxyXG4gICovXHJcbiAgZG9ub3RlbWFpbD86IGJvb2xlYW4gfCBudWxsO1xyXG4gIC8qXHJcbiAgRG8gbm90IGFsbG93IEZheGVzIEJvb2xlYW5UeXBlIFNlbGVjdCB3aGV0aGVyIHRoZSBjb250YWN0IGFsbG93cyBmYXhlcy4gSWYgRG8gTm90IEFsbG93IGlzIHNlbGVjdGVkLCB0aGUgY29udGFjdCB3aWxsIGJlIGV4Y2x1ZGVkIGZyb20gYW55IGZheCBhY3Rpdml0aWVzIGRpc3RyaWJ1dGVkIGluIG1hcmtldGluZyBjYW1wYWlnbnMuXHJcbiAgKi9cclxuICBkb25vdGZheD86IGJvb2xlYW4gfCBudWxsO1xyXG4gIC8qXHJcbiAgRG8gbm90IGFsbG93IFBob25lIENhbGxzIEJvb2xlYW5UeXBlIFNlbGVjdCB3aGV0aGVyIHRoZSBjb250YWN0IGFjY2VwdHMgcGhvbmUgY2FsbHMuIElmIERvIE5vdCBBbGxvdyBpcyBzZWxlY3RlZCwgdGhlIGNvbnRhY3Qgd2lsbCBiZSBleGNsdWRlZCBmcm9tIGFueSBwaG9uZSBjYWxsIGFjdGl2aXRpZXMgZGlzdHJpYnV0ZWQgaW4gbWFya2V0aW5nIGNhbXBhaWducy5cclxuICAqL1xyXG4gIGRvbm90cGhvbmU/OiBib29sZWFuIHwgbnVsbDtcclxuICAvKlxyXG4gIERvIG5vdCBhbGxvdyBNYWlscyBCb29sZWFuVHlwZSBTZWxlY3Qgd2hldGhlciB0aGUgY29udGFjdCBhbGxvd3MgZGlyZWN0IG1haWwuIElmIERvIE5vdCBBbGxvdyBpcyBzZWxlY3RlZCwgdGhlIGNvbnRhY3Qgd2lsbCBiZSBleGNsdWRlZCBmcm9tIGxldHRlciBhY3Rpdml0aWVzIGRpc3RyaWJ1dGVkIGluIG1hcmtldGluZyBjYW1wYWlnbnMuXHJcbiAgKi9cclxuICBkb25vdHBvc3RhbG1haWw/OiBib29sZWFuIHwgbnVsbDtcclxuICAvKlxyXG4gIFNlbmQgTWFya2V0aW5nIE1hdGVyaWFscyBCb29sZWFuVHlwZSBTZWxlY3Qgd2hldGhlciB0aGUgY29udGFjdCBhY2NlcHRzIG1hcmtldGluZyBtYXRlcmlhbHMsIHN1Y2ggYXMgYnJvY2h1cmVzIG9yIGNhdGFsb2dzLiBDb250YWN0cyB0aGF0IG9wdCBvdXQgY2FuIGJlIGV4Y2x1ZGVkIGZyb20gbWFya2V0aW5nIGluaXRpYXRpdmVzLlxyXG4gICovXHJcbiAgZG9ub3RzZW5kbW0/OiBib29sZWFuIHwgbnVsbDtcclxuICAvKlxyXG4gIEVkdWNhdGlvbiBjb250YWN0X2NvbnRhY3RfZWR1Y2F0aW9uY29kZSBTZWxlY3QgdGhlIGNvbnRhY3QncyBoaWdoZXN0IGxldmVsIG9mIGVkdWNhdGlvbiBmb3IgdXNlIGluIHNlZ21lbnRhdGlvbiBhbmQgYW5hbHlzaXMuXHJcbiAgKi9cclxuICBlZHVjYXRpb25jb2RlPzogaW1wb3J0KFwiLi4vZW51bXMvY29udGFjdF9jb250YWN0X2VkdWNhdGlvbmNvZGVcIikuY29udGFjdF9jb250YWN0X2VkdWNhdGlvbmNvZGUgfCBudWxsO1xyXG4gIC8qXHJcbiAgRW1haWwgU3RyaW5nVHlwZSBUeXBlIHRoZSBwcmltYXJ5IGVtYWlsIGFkZHJlc3MgZm9yIHRoZSBjb250YWN0LlxyXG4gICovXHJcbiAgZW1haWxhZGRyZXNzMT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBFbWFpbCBBZGRyZXNzIDIgU3RyaW5nVHlwZSBUeXBlIHRoZSBzZWNvbmRhcnkgZW1haWwgYWRkcmVzcyBmb3IgdGhlIGNvbnRhY3QuXHJcbiAgKi9cclxuICBlbWFpbGFkZHJlc3MyPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEVtYWlsIEFkZHJlc3MgMyBTdHJpbmdUeXBlIFR5cGUgYW4gYWx0ZXJuYXRlIGVtYWlsIGFkZHJlc3MgZm9yIHRoZSBjb250YWN0LlxyXG4gICovXHJcbiAgZW1haWxhZGRyZXNzMz86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBFbXBsb3llZSBTdHJpbmdUeXBlIFR5cGUgdGhlIGVtcGxveWVlIElEIG9yIG51bWJlciBmb3IgdGhlIGNvbnRhY3QgZm9yIHJlZmVyZW5jZSBpbiBvcmRlcnMsIHNlcnZpY2UgY2FzZXMsIG9yIG90aGVyIGNvbW11bmljYXRpb25zIHdpdGggdGhlIGNvbnRhY3QncyBvcmdhbml6YXRpb24uXHJcbiAgKi9cclxuICBlbXBsb3llZWlkPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEVudGl0eSBJbWFnZSBJbWFnZVR5cGUgU2hvd3MgdGhlIGRlZmF1bHQgaW1hZ2UgZm9yIHRoZSByZWNvcmQuXHJcbiAgKi9cclxuICBlbnRpdHlpbWFnZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICAgQmlnSW50VHlwZVxyXG4gICovXHJcbiAgZW50aXR5aW1hZ2VfdGltZXN0YW1wPzogbnVtYmVyIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBlbnRpdHlpbWFnZV91cmw/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgRW50aXR5IEltYWdlIElkIFVuaXF1ZWlkZW50aWZpZXJUeXBlIEZvciBpbnRlcm5hbCB1c2Ugb25seS5cclxuICAqL1xyXG4gIGVudGl0eWltYWdlaWQ/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkd1aWQgfCBudWxsO1xyXG4gIC8qXHJcbiAgRXhjaGFuZ2UgUmF0ZSBEZWNpbWFsVHlwZSBTaG93cyB0aGUgY29udmVyc2lvbiByYXRlIG9mIHRoZSByZWNvcmQncyBjdXJyZW5jeS4gVGhlIGV4Y2hhbmdlIHJhdGUgaXMgdXNlZCB0byBjb252ZXJ0IGFsbCBtb25leSBmaWVsZHMgaW4gdGhlIHJlY29yZCBmcm9tIHRoZSBsb2NhbCBjdXJyZW5jeSB0byB0aGUgc3lzdGVtJ3MgZGVmYXVsdCBjdXJyZW5jeS5cclxuICAqL1xyXG4gIGV4Y2hhbmdlcmF0ZT86IG51bWJlciB8IG51bGw7XHJcbiAgLypcclxuICBFeHRlcm5hbCBVc2VyIElkZW50aWZpZXIgU3RyaW5nVHlwZSBJZGVudGlmaWVyIGZvciBhbiBleHRlcm5hbCB1c2VyLlxyXG4gICovXHJcbiAgZXh0ZXJuYWx1c2VyaWRlbnRpZmllcj86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBNYXJpdGFsIFN0YXR1cyBjb250YWN0X2NvbnRhY3RfZmFtaWx5c3RhdHVzY29kZSBTZWxlY3QgdGhlIG1hcml0YWwgc3RhdHVzIG9mIHRoZSBjb250YWN0IGZvciByZWZlcmVuY2UgaW4gZm9sbG93LXVwIHBob25lIGNhbGxzIGFuZCBvdGhlciBjb21tdW5pY2F0aW9ucy5cclxuICAqL1xyXG4gIGZhbWlseXN0YXR1c2NvZGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9jb250YWN0X2NvbnRhY3RfZmFtaWx5c3RhdHVzY29kZVwiKS5jb250YWN0X2NvbnRhY3RfZmFtaWx5c3RhdHVzY29kZSB8IG51bGw7XHJcbiAgLypcclxuICBGYXggU3RyaW5nVHlwZSBUeXBlIHRoZSBmYXggbnVtYmVyIGZvciB0aGUgY29udGFjdC5cclxuICAqL1xyXG4gIGZheD86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBGaXJzdCBOYW1lIFN0cmluZ1R5cGUgVHlwZSB0aGUgY29udGFjdCdzIGZpcnN0IG5hbWUgdG8gbWFrZSBzdXJlIHRoZSBjb250YWN0IGlzIGFkZHJlc3NlZCBjb3JyZWN0bHkgaW4gc2FsZXMgY2FsbHMsIGVtYWlsLCBhbmQgbWFya2V0aW5nIGNhbXBhaWducy5cclxuICAqL1xyXG4gIGZpcnN0bmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBGb2xsb3cgRW1haWwgQWN0aXZpdHkgQm9vbGVhblR5cGUgSW5mb3JtYXRpb24gYWJvdXQgd2hldGhlciB0byBhbGxvdyBmb2xsb3dpbmcgZW1haWwgYWN0aXZpdHkgbGlrZSBvcGVucywgYXR0YWNobWVudCB2aWV3cyBhbmQgbGluayBjbGlja3MgZm9yIGVtYWlscyBzZW50IHRvIHRoZSBjb250YWN0LlxyXG4gICovXHJcbiAgZm9sbG93ZW1haWw/OiBib29sZWFuIHwgbnVsbDtcclxuICAvKlxyXG4gIEZUUCBTaXRlIFN0cmluZ1R5cGUgVHlwZSB0aGUgVVJMIGZvciB0aGUgY29udGFjdCdzIEZUUCBzaXRlIHRvIGVuYWJsZSB1c2VycyB0byBhY2Nlc3MgZGF0YSBhbmQgc2hhcmUgZG9jdW1lbnRzLlxyXG4gICovXHJcbiAgZnRwc2l0ZXVybD86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBGdWxsIE5hbWUgU3RyaW5nVHlwZSBDb21iaW5lcyBhbmQgc2hvd3MgdGhlIGNvbnRhY3QncyBmaXJzdCBhbmQgbGFzdCBuYW1lcyBzbyB0aGF0IHRoZSBmdWxsIG5hbWUgY2FuIGJlIGRpc3BsYXllZCBpbiB2aWV3cyBhbmQgcmVwb3J0cy5cclxuICAqL1xyXG4gIGZ1bGxuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIEdlbmRlciBjb250YWN0X2NvbnRhY3RfZ2VuZGVyY29kZSBTZWxlY3QgdGhlIGNvbnRhY3QncyBnZW5kZXIgdG8gbWFrZSBzdXJlIHRoZSBjb250YWN0IGlzIGFkZHJlc3NlZCBjb3JyZWN0bHkgaW4gc2FsZXMgY2FsbHMsIGVtYWlsLCBhbmQgbWFya2V0aW5nIGNhbXBhaWducy5cclxuICAqL1xyXG4gIGdlbmRlcmNvZGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9jb250YWN0X2NvbnRhY3RfZ2VuZGVyY29kZVwiKS5jb250YWN0X2NvbnRhY3RfZ2VuZGVyY29kZSB8IG51bGw7XHJcbiAgLypcclxuICBHb3Zlcm5tZW50IFN0cmluZ1R5cGUgVHlwZSB0aGUgcGFzc3BvcnQgbnVtYmVyIG9yIG90aGVyIGdvdmVybm1lbnQgSUQgZm9yIHRoZSBjb250YWN0IGZvciB1c2UgaW4gZG9jdW1lbnRzIG9yIHJlcG9ydHMuXHJcbiAgKi9cclxuICBnb3Zlcm5tZW50aWQ/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgSGFzIENoaWxkcmVuIGNvbnRhY3RfY29udGFjdF9oYXNjaGlsZHJlbmNvZGUgU2VsZWN0IHdoZXRoZXIgdGhlIGNvbnRhY3QgaGFzIGFueSBjaGlsZHJlbiBmb3IgcmVmZXJlbmNlIGluIGZvbGxvdy11cCBwaG9uZSBjYWxscyBhbmQgb3RoZXIgY29tbXVuaWNhdGlvbnMuXHJcbiAgKi9cclxuICBoYXNjaGlsZHJlbmNvZGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9jb250YWN0X2NvbnRhY3RfaGFzY2hpbGRyZW5jb2RlXCIpLmNvbnRhY3RfY29udGFjdF9oYXNjaGlsZHJlbmNvZGUgfCBudWxsO1xyXG4gIC8qXHJcbiAgSG9tZSBQaG9uZSAyIFN0cmluZ1R5cGUgVHlwZSBhIHNlY29uZCBob21lIHBob25lIG51bWJlciBmb3IgdGhpcyBjb250YWN0LlxyXG4gICovXHJcbiAgaG9tZTI/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgSW1wb3J0IFNlcXVlbmNlIE51bWJlciBJbnRlZ2VyVHlwZSBVbmlxdWUgaWRlbnRpZmllciBvZiB0aGUgZGF0YSBpbXBvcnQgb3IgZGF0YSBtaWdyYXRpb24gdGhhdCBjcmVhdGVkIHRoaXMgcmVjb3JkLlxyXG4gICovXHJcbiAgaW1wb3J0c2VxdWVuY2VudW1iZXI/OiBudW1iZXIgfCBudWxsO1xyXG4gIC8qXHJcbiAgQXV0by1jcmVhdGVkIEJvb2xlYW5UeXBlIEluZm9ybWF0aW9uIGFib3V0IHdoZXRoZXIgdGhlIGNvbnRhY3Qgd2FzIGF1dG8tY3JlYXRlZCB3aGVuIHByb21vdGluZyBhbiBlbWFpbCBvciBhbiBhcHBvaW50bWVudC5cclxuICAqL1xyXG4gIGlzYXV0b2NyZWF0ZT86IGJvb2xlYW4gfCBudWxsO1xyXG4gIC8qXHJcbiAgQmFjayBPZmZpY2UgQ3VzdG9tZXIgQm9vbGVhblR5cGUgU2VsZWN0IHdoZXRoZXIgdGhlIGNvbnRhY3QgZXhpc3RzIGluIGEgc2VwYXJhdGUgYWNjb3VudGluZyBvciBvdGhlciBzeXN0ZW0sIHN1Y2ggYXMgTWljcm9zb2Z0IER5bmFtaWNzIEdQIG9yIGFub3RoZXIgRVJQIGRhdGFiYXNlLCBmb3IgdXNlIGluIGludGVncmF0aW9uIHByb2Nlc3Nlcy5cclxuICAqL1xyXG4gIGlzYmFja29mZmljZWN1c3RvbWVyPzogYm9vbGVhbiB8IG51bGw7XHJcbiAgLypcclxuICAgQm9vbGVhblR5cGVcclxuICAqL1xyXG4gIGlzcHJpdmF0ZT86IGJvb2xlYW4gfCBudWxsO1xyXG4gIC8qXHJcbiAgSm9iIFRpdGxlIFN0cmluZ1R5cGUgVHlwZSB0aGUgam9iIHRpdGxlIG9mIHRoZSBjb250YWN0IHRvIG1ha2Ugc3VyZSB0aGUgY29udGFjdCBpcyBhZGRyZXNzZWQgY29ycmVjdGx5IGluIHNhbGVzIGNhbGxzLCBlbWFpbCwgYW5kIG1hcmtldGluZyBjYW1wYWlnbnMuXHJcbiAgKi9cclxuICBqb2J0aXRsZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBMYXN0IE5hbWUgW1JlcXVpcmVkXSBTdHJpbmdUeXBlIFR5cGUgdGhlIGNvbnRhY3QncyBsYXN0IG5hbWUgdG8gbWFrZSBzdXJlIHRoZSBjb250YWN0IGlzIGFkZHJlc3NlZCBjb3JyZWN0bHkgaW4gc2FsZXMgY2FsbHMsIGVtYWlsLCBhbmQgbWFya2V0aW5nIGNhbXBhaWducy5cclxuICAqL1xyXG4gIGxhc3RuYW1lPzogc3RyaW5nO1xyXG4gIC8qXHJcbiAgTGFzdCBPbiBIb2xkIFRpbWUgRGF0ZVRpbWVUeXBlIENvbnRhaW5zIHRoZSBkYXRlIGFuZCB0aW1lIHN0YW1wIG9mIHRoZSBsYXN0IG9uIGhvbGQgdGltZS4gRGF0ZUFuZFRpbWU6VXNlckxvY2FsXHJcbiAgKi9cclxuICBsYXN0b25ob2xkdGltZT86IERhdGUgfCBudWxsO1xyXG4gIC8qXHJcbiAgTGFzdCBEYXRlIEluY2x1ZGVkIGluIENhbXBhaWduIERhdGVUaW1lVHlwZSBTaG93cyB0aGUgZGF0ZSB3aGVuIHRoZSBjb250YWN0IHdhcyBsYXN0IGluY2x1ZGVkIGluIGEgbWFya2V0aW5nIGNhbXBhaWduIG9yIHF1aWNrIGNhbXBhaWduLiBEYXRlT25seTpVc2VyTG9jYWxcclxuICAqL1xyXG4gIGxhc3R1c2VkaW5jYW1wYWlnbj86IERhdGUgfCBudWxsO1xyXG4gIC8qXHJcbiAgTGVhZCBTb3VyY2UgY29udGFjdF9jb250YWN0X2xlYWRzb3VyY2Vjb2RlIFNlbGVjdCB0aGUgcHJpbWFyeSBtYXJrZXRpbmcgc291cmNlIHRoYXQgZGlyZWN0ZWQgdGhlIGNvbnRhY3QgdG8geW91ciBvcmdhbml6YXRpb24uXHJcbiAgKi9cclxuICBsZWFkc291cmNlY29kZT86IGltcG9ydChcIi4uL2VudW1zL2NvbnRhY3RfY29udGFjdF9sZWFkc291cmNlY29kZVwiKS5jb250YWN0X2NvbnRhY3RfbGVhZHNvdXJjZWNvZGUgfCBudWxsO1xyXG4gIC8qXHJcbiAgTWFuYWdlciBTdHJpbmdUeXBlIFR5cGUgdGhlIG5hbWUgb2YgdGhlIGNvbnRhY3QncyBtYW5hZ2VyIGZvciB1c2UgaW4gZXNjYWxhdGluZyBpc3N1ZXMgb3Igb3RoZXIgZm9sbG93LXVwIGNvbW11bmljYXRpb25zIHdpdGggdGhlIGNvbnRhY3QuXHJcbiAgKi9cclxuICBtYW5hZ2VybmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBNYW5hZ2VyIFBob25lIFN0cmluZ1R5cGUgVHlwZSB0aGUgcGhvbmUgbnVtYmVyIGZvciB0aGUgY29udGFjdCdzIG1hbmFnZXIuXHJcbiAgKi9cclxuICBtYW5hZ2VycGhvbmU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgTWFya2V0aW5nIE9ubHkgQm9vbGVhblR5cGUgV2hldGhlciBpcyBvbmx5IGZvciBtYXJrZXRpbmdcclxuICAqL1xyXG4gIG1hcmtldGluZ29ubHk/OiBib29sZWFuIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBtYXN0ZXJjb250YWN0aWRuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBtYXN0ZXJjb250YWN0aWR5b21pbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBNYXN0ZXIgSUQgTG9va3VwVHlwZSBVbmlxdWUgaWRlbnRpZmllciBvZiB0aGUgbWFzdGVyIGNvbnRhY3QgZm9yIG1lcmdlLlxyXG4gICovXHJcbiAgbWFzdGVyaWQ/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkVudGl0eVJlZmVyZW5jZSB8IG51bGw7XHJcbiAgLypcclxuICBNZXJnZWQgQm9vbGVhblR5cGUgU2hvd3Mgd2hldGhlciB0aGUgYWNjb3VudCBoYXMgYmVlbiBtZXJnZWQgd2l0aCBhIG1hc3RlciBjb250YWN0LlxyXG4gICovXHJcbiAgbWVyZ2VkPzogYm9vbGVhbiB8IG51bGw7XHJcbiAgLypcclxuICBNaWRkbGUgTmFtZSBTdHJpbmdUeXBlIFR5cGUgdGhlIGNvbnRhY3QncyBtaWRkbGUgbmFtZSBvciBpbml0aWFsIHRvIG1ha2Ugc3VyZSB0aGUgY29udGFjdCBpcyBhZGRyZXNzZWQgY29ycmVjdGx5LlxyXG4gICovXHJcbiAgbWlkZGxlbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBNb2JpbGUgUGhvbmUgU3RyaW5nVHlwZSBUeXBlIHRoZSBtb2JpbGUgcGhvbmUgbnVtYmVyIGZvciB0aGUgY29udGFjdC5cclxuICAqL1xyXG4gIG1vYmlsZXBob25lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIE1vZGlmaWVkIEJ5IExvb2t1cFR5cGUgU2hvd3Mgd2hvIGxhc3QgdXBkYXRlZCB0aGUgcmVjb3JkLlxyXG4gICovXHJcbiAgbW9kaWZpZWRieT86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gIE1vZGlmaWVkIEJ5IChFeHRlcm5hbCBQYXJ0eSkgTG9va3VwVHlwZSBTaG93cyB0aGUgZXh0ZXJuYWwgcGFydHkgd2hvIG1vZGlmaWVkIHRoZSByZWNvcmQuXHJcbiAgKi9cclxuICBtb2RpZmllZGJ5ZXh0ZXJuYWxwYXJ0eT86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBtb2RpZmllZGJ5ZXh0ZXJuYWxwYXJ0eW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIG1vZGlmaWVkYnlleHRlcm5hbHBhcnR5eW9taW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIG1vZGlmaWVkYnluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBtb2RpZmllZGJ5eW9taW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgTW9kaWZpZWQgT24gRGF0ZVRpbWVUeXBlIFNob3dzIHRoZSBkYXRlIGFuZCB0aW1lIHdoZW4gdGhlIHJlY29yZCB3YXMgbGFzdCB1cGRhdGVkLiBUaGUgZGF0ZSBhbmQgdGltZSBhcmUgZGlzcGxheWVkIGluIHRoZSB0aW1lIHpvbmUgc2VsZWN0ZWQgaW4gTWljcm9zb2Z0IER5bmFtaWNzIDM2NSBvcHRpb25zLiBEYXRlQW5kVGltZTpVc2VyTG9jYWxcclxuICAqL1xyXG4gIG1vZGlmaWVkb24/OiBEYXRlIHwgbnVsbDtcclxuICAvKlxyXG4gIE1vZGlmaWVkIEJ5IChEZWxlZ2F0ZSkgTG9va3VwVHlwZSBTaG93cyB3aG8gbGFzdCB1cGRhdGVkIHRoZSByZWNvcmQgb24gYmVoYWxmIG9mIGFub3RoZXIgdXNlci5cclxuICAqL1xyXG4gIG1vZGlmaWVkb25iZWhhbGZieT86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBtb2RpZmllZG9uYmVoYWxmYnluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBtb2RpZmllZG9uYmVoYWxmYnl5b21pbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBHRFBSIE9wdG91dCBCb29sZWFuVHlwZSBEZXNjcmliZXMgd2hldGhlciBjb250YWN0IGlzIG9wdGVkIG91dCBvciBub3RcclxuICAqL1xyXG4gIG1zZHluX2dkcHJvcHRvdXQ/OiBib29sZWFuIHwgbnVsbDtcclxuICAvKlxyXG4gIE5vdCBhdCBDb21wYW55IEZsYWcgY29udGFjdF9jb250YWN0X21zZHluX29yZ2NoYW5nZXN0YXR1cyBXaGV0aGVyIG9yIG5vdCB0aGUgY29udGFjdCBiZWxvbmdzIHRvIHRoZSBhc3NvY2lhdGVkIGFjY291bnRcclxuICAqL1xyXG4gIG1zZHluX29yZ2NoYW5nZXN0YXR1cz86IGltcG9ydChcIi4uL2VudW1zL2NvbnRhY3RfY29udGFjdF9tc2R5bl9vcmdjaGFuZ2VzdGF0dXNcIikuY29udGFjdF9jb250YWN0X21zZHluX29yZ2NoYW5nZXN0YXR1cyB8IG51bGw7XHJcbiAgLypcclxuICBTZWdtZW50IElkIExvb2t1cFR5cGUgVW5pcXVlIGlkZW50aWZpZXIgZm9yIFNlZ21lbnQgYXNzb2NpYXRlZCB3aXRoIGNvbnRhY3QuXHJcbiAgKi9cclxuICBtc2R5bl9zZWdtZW50aWQ/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkVudGl0eVJlZmVyZW5jZSB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgbXNkeW5fc2VnbWVudGlkbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBTZW5kTm93IENvbnRhY3QgTG9va3VwVHlwZSBVbmlxdWUgaWRlbnRpZmllciBmb3IgUXVpY2sgU2VuZCBFbWFpbCBhc3NvY2lhdGVkIHdpdGggQ29udGFjdC5cclxuICAqL1xyXG4gIG1zZHluY3JtX2NvbnRhY3RpZD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBtc2R5bmNybV9jb250YWN0aWRuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIFNvdXJjZSBjdXN0b21lciBqb3VybmV5IExvb2t1cFR5cGVcclxuICAqL1xyXG4gIG1zZHluY3JtX2N1c3RvbWVyam91cm5leWlkPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIG1zZHluY3JtX2N1c3RvbWVyam91cm5leWlkbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBTb3VyY2UgZW1haWwgTG9va3VwVHlwZVxyXG4gICovXHJcbiAgbXNkeW5jcm1fZW1haWxpZD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBtc2R5bmNybV9lbWFpbGlkbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBJbnNpZ2h0cyBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBtc2R5bmNybV9pbnNpZ2h0c19wbGFjZWhvbGRlcj86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBTb3VyY2UgZm9ybSBMb29rdXBUeXBlXHJcbiAgKi9cclxuICBtc2R5bmNybV9tYXJrZXRpbmdmb3JtaWQ/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkVudGl0eVJlZmVyZW5jZSB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgbXNkeW5jcm1fbWFya2V0aW5nZm9ybWlkbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICB0aW1lc3RhbXAgb2YgZm9ybSBzdWJtaXNzaW9uIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIG1zZHluY3JtX21hcmtldGluZ2Zvcm1zdWJtaXNzaW9uZGF0ZXByZWNpc2U/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgU291cmNlIGxhbmRpbmcgcGFnZSBMb29rdXBUeXBlXHJcbiAgKi9cclxuICBtc2R5bmNybV9tYXJrZXRpbmdwYWdlaWQ/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkVudGl0eVJlZmVyZW5jZSB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgbXNkeW5jcm1fbWFya2V0aW5ncGFnZWlkbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBSZW1lbWJlciBtZSBCb29sZWFuVHlwZVxyXG4gICovXHJcbiAgbXNkeW5jcm1fcmVtZW1iZXJtZT86IGJvb2xlYW4gfCBudWxsO1xyXG4gIC8qXHJcbiAgU2VnbWVudE1lbWJlciBMb29rdXBUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIGZvciBTZWdtZW50IGFzc29jaWF0ZWQgd2l0aCBDb250YWN0LlxyXG4gICovXHJcbiAgbXNkeW5jcm1fc2VnbWVudG1lbWJlcmlkPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIG1zZHluY3JtX3NlZ21lbnRtZW1iZXJpZG5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgQUFEIG9iamVjdCBJRCBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBtc2V2dG1ndF9hYWRvYmplY3RpZD86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBDb250YWN0IExvb2t1cFR5cGUgVW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSBjaGVjay1pbiBhc3NvY2lhdGVkIHdpdGggdGhlIGNvbnRhY3RcclxuICAqL1xyXG4gIG1zZXZ0bWd0X2NvbnRhY3RpZD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBtc2V2dG1ndF9jb250YWN0aWRuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIE9yaWdpbmF0aW5nIGV2ZW50IExvb2t1cFR5cGUgRm9yIGNvbnRhY3RzIGNyZWF0ZWQgYnkgcmVnaXN0ZXJpbmcgZm9yIGFuIGV2ZW50IGluIE1pY3Jvc29mdCBEeW5hbWljcyAzNjUsIHRoaXMgaWRlbnRpZmllcyB0aGUgcmVsZXZhbnQgZXZlbnQuIFRoaXMgaXMgdXNlZCB0byByZWxhdGUgdGhlIGNvbnRhY3QgdG8gdGhlIGRhdGEgb24gdGhlIG9yaWdpbmF0aW5nIGV2ZW50LlxyXG4gICovXHJcbiAgbXNldnRtZ3Rfb3JpZ2luYXRpbmdldmVudGlkPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIG1zZXZ0bWd0X29yaWdpbmF0aW5nZXZlbnRpZG5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgY29uc2VudCBjaGFuZ2Ugc291cmNlIGZvcm0gSWQgTG9va3VwVHlwZVxyXG4gICovXHJcbiAgbXNnZHByX2NvbnNlbnRjaGFuZ2Vzb3VyY2Vmb3JtaWQ/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkVudGl0eVJlZmVyZW5jZSB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgbXNnZHByX2NvbnNlbnRjaGFuZ2Vzb3VyY2Vmb3JtaWRuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIERvIG5vdCB0cmFjayBCb29sZWFuVHlwZSBTZWxlY3Qgd2hldGhlciBjb250YWN0IGFsbG93cyB0cmFja2luZyBpbnRlcmFjdGlvbiBkYXRhLiBJZiBEbyBOb3QgQWxsb3cgaXMgc2VsZWN0ZWQsIE1pY3Jvc29mdCBEeW5hbWljcyAzNjUgd2lsbCBub3Qgc2F2ZSBpbnRlcmFjdGlvbiBkYXRhIGZvciB0aGUgY29udGFjdC5cclxuICAqL1xyXG4gIG1zZ2Rwcl9kb25vdHRyYWNrPzogYm9vbGVhbiB8IG51bGw7XHJcbiAgLypcclxuICBDb25zZW50IGdpdmVuIG1zZ2Rwcl9nZHByX2NvbnNlbnRfb3B0aW9uX3NldFxyXG4gICovXHJcbiAgbXNnZHByX2dkcHJjb25zZW50PzogaW1wb3J0KFwiLi4vZW51bXMvbXNnZHByX2dkcHJfY29uc2VudF9vcHRpb25fc2V0XCIpLm1zZ2Rwcl9nZHByX2NvbnNlbnRfb3B0aW9uX3NldCB8IG51bGw7XHJcbiAgLypcclxuICBHRFBSIGlzIGNoaWxkIEJvb2xlYW5UeXBlXHJcbiAgKi9cclxuICBtc2dkcHJfZ2RwcmlzY2hpbGQ/OiBib29sZWFuIHwgbnVsbDtcclxuICAvKlxyXG4gIFBhcmVudCBvciBjdXN0b2RpYW4gTG9va3VwVHlwZSBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIGNvbnRhY3QgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb250YWN0XHJcbiAgKi9cclxuICBtc2dkcHJfZ2RwcnBhcmVudGlkPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIG1zZ2Rwcl9nZHBycGFyZW50aWRuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBtc2dkcHJfZ2RwcnBhcmVudGlkeW9taW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgTmlja25hbWUgU3RyaW5nVHlwZSBUeXBlIHRoZSBjb250YWN0J3Mgbmlja25hbWUuXHJcbiAgKi9cclxuICBuaWNrbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBOby4gb2YgQ2hpbGRyZW4gSW50ZWdlclR5cGUgVHlwZSB0aGUgbnVtYmVyIG9mIGNoaWxkcmVuIHRoZSBjb250YWN0IGhhcyBmb3IgcmVmZXJlbmNlIGluIGZvbGxvdy11cCBwaG9uZSBjYWxscyBhbmQgb3RoZXIgY29tbXVuaWNhdGlvbnMuXHJcbiAgKi9cclxuICBudW1iZXJvZmNoaWxkcmVuPzogbnVtYmVyIHwgbnVsbDtcclxuICAvKlxyXG4gIE9uIEhvbGQgVGltZSAoTWludXRlcykgSW50ZWdlclR5cGUgU2hvd3MgaG93IGxvbmcsIGluIG1pbnV0ZXMsIHRoYXQgdGhlIHJlY29yZCB3YXMgb24gaG9sZC5cclxuICAqL1xyXG4gIG9uaG9sZHRpbWU/OiBudW1iZXIgfCBudWxsO1xyXG4gIC8qXHJcbiAgT3JpZ2luYXRpbmcgTGVhZCBMb29rdXBUeXBlIFNob3dzIHRoZSBsZWFkIHRoYXQgdGhlIGNvbnRhY3Qgd2FzIGNyZWF0ZWQgaWYgdGhlIGNvbnRhY3Qgd2FzIGNyZWF0ZWQgYnkgY29udmVydGluZyBhIGxlYWQgaW4gTWljcm9zb2Z0IER5bmFtaWNzIDM2NS4gVGhpcyBpcyB1c2VkIHRvIHJlbGF0ZSB0aGUgY29udGFjdCB0byB0aGUgZGF0YSBvbiB0aGUgb3JpZ2luYXRpbmcgbGVhZCBmb3IgdXNlIGluIHJlcG9ydGluZyBhbmQgYW5hbHl0aWNzLlxyXG4gICovXHJcbiAgb3JpZ2luYXRpbmdsZWFkaWQ/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkVudGl0eVJlZmVyZW5jZSB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgb3JpZ2luYXRpbmdsZWFkaWRuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBvcmlnaW5hdGluZ2xlYWRpZHlvbWluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIFJlY29yZCBDcmVhdGVkIE9uIERhdGVUaW1lVHlwZSBEYXRlIGFuZCB0aW1lIHRoYXQgdGhlIHJlY29yZCB3YXMgbWlncmF0ZWQuIERhdGVPbmx5OlVzZXJMb2NhbFxyXG4gICovXHJcbiAgb3ZlcnJpZGRlbmNyZWF0ZWRvbj86IERhdGUgfCBudWxsO1xyXG4gIC8qXHJcbiAgT3duZXIgT3duZXJUeXBlIEVudGVyIHRoZSB1c2VyIG9yIHRlYW0gd2hvIGlzIGFzc2lnbmVkIHRvIG1hbmFnZSB0aGUgcmVjb3JkLiBUaGlzIGZpZWxkIGlzIHVwZGF0ZWQgZXZlcnkgdGltZSB0aGUgcmVjb3JkIGlzIGFzc2lnbmVkIHRvIGEgZGlmZmVyZW50IHVzZXIuXHJcbiAgKi9cclxuICBvd25lcmlkPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIG93bmVyaWRuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gICBFbnRpdHlOYW1lVHlwZVxyXG4gICovXHJcbiAgb3duZXJpZHR5cGU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIG93bmVyaWR5b21pbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBPd25pbmcgQnVzaW5lc3MgVW5pdCBMb29rdXBUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBidXNpbmVzcyB1bml0IHRoYXQgb3ducyB0aGUgY29udGFjdC5cclxuICAqL1xyXG4gIG93bmluZ2J1c2luZXNzdW5pdD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBvd25pbmdidXNpbmVzc3VuaXRuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIE93bmluZyBUZWFtIExvb2t1cFR5cGUgVW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIHRlYW0gd2hvIG93bnMgdGhlIGNvbnRhY3QuXHJcbiAgKi9cclxuICBvd25pbmd0ZWFtPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgT3duaW5nIFVzZXIgTG9va3VwVHlwZSBVbmlxdWUgaWRlbnRpZmllciBvZiB0aGUgdXNlciB3aG8gb3ducyB0aGUgY29udGFjdC5cclxuICAqL1xyXG4gIG93bmluZ3VzZXI/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkVudGl0eVJlZmVyZW5jZSB8IG51bGw7XHJcbiAgLypcclxuICBQYWdlciBTdHJpbmdUeXBlIFR5cGUgdGhlIHBhZ2VyIG51bWJlciBmb3IgdGhlIGNvbnRhY3QuXHJcbiAgKi9cclxuICBwYWdlcj86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBQYXJlbnQgQ29udGFjdCBMb29rdXBUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBwYXJlbnQgY29udGFjdC5cclxuICAqL1xyXG4gIHBhcmVudGNvbnRhY3RpZD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBwYXJlbnRjb250YWN0aWRuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBwYXJlbnRjb250YWN0aWR5b21pbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBDb21wYW55IE5hbWUgQ3VzdG9tZXJUeXBlIFNlbGVjdCB0aGUgcGFyZW50IGFjY291bnQgb3IgcGFyZW50IGNvbnRhY3QgZm9yIHRoZSBjb250YWN0IHRvIHByb3ZpZGUgYSBxdWljayBsaW5rIHRvIGFkZGl0aW9uYWwgZGV0YWlscywgc3VjaCBhcyBmaW5hbmNpYWwgaW5mb3JtYXRpb24sIGFjdGl2aXRpZXMsIGFuZCBvcHBvcnR1bml0aWVzLlxyXG4gICovXHJcbiAgcGFyZW50Y3VzdG9tZXJpZD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBbUmVxdWlyZWRdIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIHBhcmVudGN1c3RvbWVyaWRuYW1lPzogc3RyaW5nO1xyXG4gIC8qXHJcbiAgUGFyZW50IEN1c3RvbWVyIFR5cGUgRW50aXR5TmFtZVR5cGVcclxuICAqL1xyXG4gIHBhcmVudGN1c3RvbWVyaWR0eXBlPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gICBbUmVxdWlyZWRdIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIHBhcmVudGN1c3RvbWVyaWR5b21pbmFtZT86IHN0cmluZztcclxuICAvKlxyXG4gIFBhcnRpY2lwYXRlcyBpbiBXb3JrZmxvdyBCb29sZWFuVHlwZSBTaG93cyB3aGV0aGVyIHRoZSBjb250YWN0IHBhcnRpY2lwYXRlcyBpbiB3b3JrZmxvdyBydWxlcy5cclxuICAqL1xyXG4gIHBhcnRpY2lwYXRlc2lud29ya2Zsb3c/OiBib29sZWFuIHwgbnVsbDtcclxuICAvKlxyXG4gIFBheW1lbnQgVGVybXMgY29udGFjdF9jb250YWN0X3BheW1lbnR0ZXJtc2NvZGUgU2VsZWN0IHRoZSBwYXltZW50IHRlcm1zIHRvIGluZGljYXRlIHdoZW4gdGhlIGN1c3RvbWVyIG5lZWRzIHRvIHBheSB0aGUgdG90YWwgYW1vdW50LlxyXG4gICovXHJcbiAgcGF5bWVudHRlcm1zY29kZT86IGltcG9ydChcIi4uL2VudW1zL2NvbnRhY3RfY29udGFjdF9wYXltZW50dGVybXNjb2RlXCIpLmNvbnRhY3RfY29udGFjdF9wYXltZW50dGVybXNjb2RlIHwgbnVsbDtcclxuICAvKlxyXG4gIFByZWZlcnJlZCBEYXkgY29udGFjdF9jb250YWN0X3ByZWZlcnJlZGFwcG9pbnRtZW50ZGF5Y29kZSBTZWxlY3QgdGhlIHByZWZlcnJlZCBkYXkgb2YgdGhlIHdlZWsgZm9yIHNlcnZpY2UgYXBwb2ludG1lbnRzLlxyXG4gICovXHJcbiAgcHJlZmVycmVkYXBwb2ludG1lbnRkYXljb2RlPzogaW1wb3J0KFwiLi4vZW51bXMvY29udGFjdF9jb250YWN0X3ByZWZlcnJlZGFwcG9pbnRtZW50ZGF5Y29kZVwiKS5jb250YWN0X2NvbnRhY3RfcHJlZmVycmVkYXBwb2ludG1lbnRkYXljb2RlIHwgbnVsbDtcclxuICAvKlxyXG4gIFByZWZlcnJlZCBUaW1lIGNvbnRhY3RfY29udGFjdF9wcmVmZXJyZWRhcHBvaW50bWVudHRpbWVjb2RlIFNlbGVjdCB0aGUgcHJlZmVycmVkIHRpbWUgb2YgZGF5IGZvciBzZXJ2aWNlIGFwcG9pbnRtZW50cy5cclxuICAqL1xyXG4gIHByZWZlcnJlZGFwcG9pbnRtZW50dGltZWNvZGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9jb250YWN0X2NvbnRhY3RfcHJlZmVycmVkYXBwb2ludG1lbnR0aW1lY29kZVwiKS5jb250YWN0X2NvbnRhY3RfcHJlZmVycmVkYXBwb2ludG1lbnR0aW1lY29kZSB8IG51bGw7XHJcbiAgLypcclxuICBQcmVmZXJyZWQgTWV0aG9kIG9mIENvbnRhY3QgY29udGFjdF9jb250YWN0X3ByZWZlcnJlZGNvbnRhY3RtZXRob2Rjb2RlIFNlbGVjdCB0aGUgcHJlZmVycmVkIG1ldGhvZCBvZiBjb250YWN0LlxyXG4gICovXHJcbiAgcHJlZmVycmVkY29udGFjdG1ldGhvZGNvZGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9jb250YWN0X2NvbnRhY3RfcHJlZmVycmVkY29udGFjdG1ldGhvZGNvZGVcIikuY29udGFjdF9jb250YWN0X3ByZWZlcnJlZGNvbnRhY3RtZXRob2Rjb2RlIHwgbnVsbDtcclxuICAvKlxyXG4gIFByZWZlcnJlZCBGYWNpbGl0eS9FcXVpcG1lbnQgTG9va3VwVHlwZSBDaG9vc2UgdGhlIGNvbnRhY3QncyBwcmVmZXJyZWQgc2VydmljZSBmYWNpbGl0eSBvciBlcXVpcG1lbnQgdG8gbWFrZSBzdXJlIHNlcnZpY2VzIGFyZSBzY2hlZHVsZWQgY29ycmVjdGx5IGZvciB0aGUgY3VzdG9tZXIuXHJcbiAgKi9cclxuICBwcmVmZXJyZWRlcXVpcG1lbnRpZD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBwcmVmZXJyZWRlcXVpcG1lbnRpZG5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgUHJlZmVycmVkIFNlcnZpY2UgTG9va3VwVHlwZSBDaG9vc2UgdGhlIGNvbnRhY3QncyBwcmVmZXJyZWQgc2VydmljZSB0byBtYWtlIHN1cmUgc2VydmljZXMgYXJlIHNjaGVkdWxlZCBjb3JyZWN0bHkgZm9yIHRoZSBjdXN0b21lci5cclxuICAqL1xyXG4gIHByZWZlcnJlZHNlcnZpY2VpZD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBwcmVmZXJyZWRzZXJ2aWNlaWRuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIFByZWZlcnJlZCBVc2VyIExvb2t1cFR5cGUgQ2hvb3NlIHRoZSByZWd1bGFyIG9yIHByZWZlcnJlZCBjdXN0b21lciBzZXJ2aWNlIHJlcHJlc2VudGF0aXZlIGZvciByZWZlcmVuY2Ugd2hlbiBzY2hlZHVsaW5nIHNlcnZpY2UgYWN0aXZpdGllcyBmb3IgdGhlIGNvbnRhY3QuXHJcbiAgKi9cclxuICBwcmVmZXJyZWRzeXN0ZW11c2VyaWQ/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkVudGl0eVJlZmVyZW5jZSB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgcHJlZmVycmVkc3lzdGVtdXNlcmlkbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgcHJlZmVycmVkc3lzdGVtdXNlcmlkeW9taW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgUHJvY2VzcyBVbmlxdWVpZGVudGlmaWVyVHlwZSBTaG93cyB0aGUgSUQgb2YgdGhlIHByb2Nlc3MuXHJcbiAgKi9cclxuICBwcm9jZXNzaWQ/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkd1aWQgfCBudWxsO1xyXG4gIC8qXHJcbiAgU2FsdXRhdGlvbiBTdHJpbmdUeXBlIFR5cGUgdGhlIHNhbHV0YXRpb24gb2YgdGhlIGNvbnRhY3QgdG8gbWFrZSBzdXJlIHRoZSBjb250YWN0IGlzIGFkZHJlc3NlZCBjb3JyZWN0bHkgaW4gc2FsZXMgY2FsbHMsIGVtYWlsIG1lc3NhZ2VzLCBhbmQgbWFya2V0aW5nIGNhbXBhaWducy5cclxuICAqL1xyXG4gIHNhbHV0YXRpb24/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgU2hpcHBpbmcgTWV0aG9kIGNvbnRhY3RfY29udGFjdF9zaGlwcGluZ21ldGhvZGNvZGUgU2VsZWN0IGEgc2hpcHBpbmcgbWV0aG9kIGZvciBkZWxpdmVyaWVzIHNlbnQgdG8gdGhpcyBhZGRyZXNzLlxyXG4gICovXHJcbiAgc2hpcHBpbmdtZXRob2Rjb2RlPzogaW1wb3J0KFwiLi4vZW51bXMvY29udGFjdF9jb250YWN0X3NoaXBwaW5nbWV0aG9kY29kZVwiKS5jb250YWN0X2NvbnRhY3Rfc2hpcHBpbmdtZXRob2Rjb2RlIHwgbnVsbDtcclxuICAvKlxyXG4gIFNMQSBMb29rdXBUeXBlIENob29zZSB0aGUgc2VydmljZSBsZXZlbCBhZ3JlZW1lbnQgKFNMQSkgdGhhdCB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgQ29udGFjdCByZWNvcmQuXHJcbiAgKi9cclxuICBzbGFpZD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gIExhc3QgU0xBIGFwcGxpZWQgTG9va3VwVHlwZSBMYXN0IFNMQSB0aGF0IHdhcyBhcHBsaWVkIHRvIHRoaXMgY2FzZS4gVGhpcyBmaWVsZCBpcyBmb3IgaW50ZXJuYWwgdXNlIG9ubHkuXHJcbiAgKi9cclxuICBzbGFpbnZva2VkaWQ/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkVudGl0eVJlZmVyZW5jZSB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgc2xhaW52b2tlZGlkbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgc2xhbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBTcG91c2UvUGFydG5lciBOYW1lIFN0cmluZ1R5cGUgVHlwZSB0aGUgbmFtZSBvZiB0aGUgY29udGFjdCdzIHNwb3VzZSBvciBwYXJ0bmVyIGZvciByZWZlcmVuY2UgZHVyaW5nIGNhbGxzLCBldmVudHMsIG9yIG90aGVyIGNvbW11bmljYXRpb25zIHdpdGggdGhlIGNvbnRhY3QuXHJcbiAgKi9cclxuICBzcG91c2VzbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICAoRGVwcmVjYXRlZCkgUHJvY2VzcyBTdGFnZSBVbmlxdWVpZGVudGlmaWVyVHlwZSBTaG93cyB0aGUgSUQgb2YgdGhlIHN0YWdlLlxyXG4gICovXHJcbiAgc3RhZ2VpZD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuR3VpZCB8IG51bGw7XHJcbiAgLypcclxuICBTdGF0dXMgY29udGFjdF9jb250YWN0X3N0YXRlY29kZSBTaG93cyB3aGV0aGVyIHRoZSBjb250YWN0IGlzIGFjdGl2ZSBvciBpbmFjdGl2ZS4gSW5hY3RpdmUgY29udGFjdHMgYXJlIHJlYWQtb25seSBhbmQgY2FuJ3QgYmUgZWRpdGVkIHVubGVzcyB0aGV5IGFyZSByZWFjdGl2YXRlZC5cclxuICAqL1xyXG4gIHN0YXRlY29kZT86IGltcG9ydChcIi4uL2VudW1zL2NvbnRhY3RfY29udGFjdF9zdGF0ZWNvZGVcIikuY29udGFjdF9jb250YWN0X3N0YXRlY29kZSB8IG51bGw7XHJcbiAgLypcclxuICBTdGF0dXMgUmVhc29uIGNvbnRhY3RfY29udGFjdF9zdGF0dXNjb2RlIFNlbGVjdCB0aGUgY29udGFjdCdzIHN0YXR1cy5cclxuICAqL1xyXG4gIHN0YXR1c2NvZGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9jb250YWN0X2NvbnRhY3Rfc3RhdHVzY29kZVwiKS5jb250YWN0X2NvbnRhY3Rfc3RhdHVzY29kZSB8IG51bGw7XHJcbiAgLypcclxuICBTdWJzY3JpcHRpb24gVW5pcXVlaWRlbnRpZmllclR5cGUgRm9yIGludGVybmFsIHVzZSBvbmx5LlxyXG4gICovXHJcbiAgc3Vic2NyaXB0aW9uaWQ/OiBpbXBvcnQoXCJkYXRhdmVyc2UtaWZ5XCIpLkd1aWQgfCBudWxsO1xyXG4gIC8qXHJcbiAgU3VmZml4IFN0cmluZ1R5cGUgVHlwZSB0aGUgc3VmZml4IHVzZWQgaW4gdGhlIGNvbnRhY3QncyBuYW1lLCBzdWNoIGFzIEpyLiBvciBTci4gdG8gbWFrZSBzdXJlIHRoZSBjb250YWN0IGlzIGFkZHJlc3NlZCBjb3JyZWN0bHkgaW4gc2FsZXMgY2FsbHMsIGVtYWlsLCBhbmQgbWFya2V0aW5nIGNhbXBhaWducy5cclxuICAqL1xyXG4gIHN1ZmZpeD86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBUZWFtc0ZvbGxvd2VkIEludGVnZXJUeXBlIE51bWJlciBvZiB1c2VycyBvciBjb252ZXJzYXRpb25zIGZvbGxvd2VkIHRoZSByZWNvcmRcclxuICAqL1xyXG4gIHRlYW1zZm9sbG93ZWQ/OiBudW1iZXIgfCBudWxsO1xyXG4gIC8qXHJcbiAgQnVzaW5lc3MgUGhvbmUgU3RyaW5nVHlwZSBUeXBlIHRoZSBtYWluIHBob25lIG51bWJlciBmb3IgdGhpcyBjb250YWN0LlxyXG4gICovXHJcbiAgdGVsZXBob25lMT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBIb21lIFBob25lIFN0cmluZ1R5cGUgVHlwZSBhIHNlY29uZCBwaG9uZSBudW1iZXIgZm9yIHRoaXMgY29udGFjdC5cclxuICAqL1xyXG4gIHRlbGVwaG9uZTI/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgVGVsZXBob25lIDMgU3RyaW5nVHlwZSBUeXBlIGEgdGhpcmQgcGhvbmUgbnVtYmVyIGZvciB0aGlzIGNvbnRhY3QuXHJcbiAgKi9cclxuICB0ZWxlcGhvbmUzPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIFRlcnJpdG9yeSBjb250YWN0X2NvbnRhY3RfdGVycml0b3J5Y29kZSBTZWxlY3QgYSByZWdpb24gb3IgdGVycml0b3J5IGZvciB0aGUgY29udGFjdCBmb3IgdXNlIGluIHNlZ21lbnRhdGlvbiBhbmQgYW5hbHlzaXMuXHJcbiAgKi9cclxuICB0ZXJyaXRvcnljb2RlPzogaW1wb3J0KFwiLi4vZW51bXMvY29udGFjdF9jb250YWN0X3RlcnJpdG9yeWNvZGVcIikuY29udGFjdF9jb250YWN0X3RlcnJpdG9yeWNvZGUgfCBudWxsO1xyXG4gIC8qXHJcbiAgVGltZSBTcGVudCBieSBtZSBTdHJpbmdUeXBlIFRvdGFsIHRpbWUgc3BlbnQgZm9yIGVtYWlscyAocmVhZCBhbmQgd3JpdGUpIGFuZCBtZWV0aW5ncyBieSBtZSBpbiByZWxhdGlvbiB0byB0aGUgY29udGFjdCByZWNvcmQuXHJcbiAgKi9cclxuICB0aW1lc3BlbnRieW1lb25lbWFpbGFuZG1lZXRpbmdzPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIFRpbWUgWm9uZSBSdWxlIFZlcnNpb24gTnVtYmVyIEludGVnZXJUeXBlIEZvciBpbnRlcm5hbCB1c2Ugb25seS5cclxuICAqL1xyXG4gIHRpbWV6b25lcnVsZXZlcnNpb25udW1iZXI/OiBudW1iZXIgfCBudWxsO1xyXG4gIC8qXHJcbiAgQ3VycmVuY3kgTG9va3VwVHlwZSBDaG9vc2UgdGhlIGxvY2FsIGN1cnJlbmN5IGZvciB0aGUgcmVjb3JkIHRvIG1ha2Ugc3VyZSBidWRnZXRzIGFyZSByZXBvcnRlZCBpbiB0aGUgY29ycmVjdCBjdXJyZW5jeS5cclxuICAqL1xyXG4gIHRyYW5zYWN0aW9uY3VycmVuY3lpZD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICB0cmFuc2FjdGlvbmN1cnJlbmN5aWRuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIChEZXByZWNhdGVkKSBUcmF2ZXJzZWQgUGF0aCBTdHJpbmdUeXBlIEZvciBpbnRlcm5hbCB1c2Ugb25seS5cclxuICAqL1xyXG4gIHRyYXZlcnNlZHBhdGg/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgVVRDIENvbnZlcnNpb24gVGltZSBab25lIENvZGUgSW50ZWdlclR5cGUgVGltZSB6b25lIGNvZGUgdGhhdCB3YXMgaW4gdXNlIHdoZW4gdGhlIHJlY29yZCB3YXMgY3JlYXRlZC5cclxuICAqL1xyXG4gIHV0Y2NvbnZlcnNpb250aW1lem9uZWNvZGU/OiBudW1iZXIgfCBudWxsO1xyXG4gIC8qXHJcbiAgVmVyc2lvbiBOdW1iZXIgQmlnSW50VHlwZSBWZXJzaW9uIG51bWJlciBvZiB0aGUgY29udGFjdC5cclxuICAqL1xyXG4gIHZlcnNpb25udW1iZXI/OiBudW1iZXIgfCBudWxsO1xyXG4gIC8qXHJcbiAgV2Vic2l0ZSBTdHJpbmdUeXBlIFR5cGUgdGhlIGNvbnRhY3QncyBwcm9mZXNzaW9uYWwgb3IgcGVyc29uYWwgd2Vic2l0ZSBvciBibG9nIFVSTC5cclxuICAqL1xyXG4gIHdlYnNpdGV1cmw/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgWW9taSBGaXJzdCBOYW1lIFN0cmluZ1R5cGUgVHlwZSB0aGUgcGhvbmV0aWMgc3BlbGxpbmcgb2YgdGhlIGNvbnRhY3QncyBmaXJzdCBuYW1lLCBpZiB0aGUgbmFtZSBpcyBzcGVjaWZpZWQgaW4gSmFwYW5lc2UsIHRvIG1ha2Ugc3VyZSB0aGUgbmFtZSBpcyBwcm9ub3VuY2VkIGNvcnJlY3RseSBpbiBwaG9uZSBjYWxscyB3aXRoIHRoZSBjb250YWN0LlxyXG4gICovXHJcbiAgeW9taWZpcnN0bmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBZb21pIEZ1bGwgTmFtZSBTdHJpbmdUeXBlIFNob3dzIHRoZSBjb21iaW5lZCBZb21pIGZpcnN0IGFuZCBsYXN0IG5hbWVzIG9mIHRoZSBjb250YWN0IHNvIHRoYXQgdGhlIGZ1bGwgcGhvbmV0aWMgbmFtZSBjYW4gYmUgZGlzcGxheWVkIGluIHZpZXdzIGFuZCByZXBvcnRzLlxyXG4gICovXHJcbiAgeW9taWZ1bGxuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIFlvbWkgTGFzdCBOYW1lIFN0cmluZ1R5cGUgVHlwZSB0aGUgcGhvbmV0aWMgc3BlbGxpbmcgb2YgdGhlIGNvbnRhY3QncyBsYXN0IG5hbWUsIGlmIHRoZSBuYW1lIGlzIHNwZWNpZmllZCBpbiBKYXBhbmVzZSwgdG8gbWFrZSBzdXJlIHRoZSBuYW1lIGlzIHByb25vdW5jZWQgY29ycmVjdGx5IGluIHBob25lIGNhbGxzIHdpdGggdGhlIGNvbnRhY3QuXHJcbiAgKi9cclxuICB5b21pbGFzdG5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgWW9taSBNaWRkbGUgTmFtZSBTdHJpbmdUeXBlIFR5cGUgdGhlIHBob25ldGljIHNwZWxsaW5nIG9mIHRoZSBjb250YWN0J3MgbWlkZGxlIG5hbWUsIGlmIHRoZSBuYW1lIGlzIHNwZWNpZmllZCBpbiBKYXBhbmVzZSwgdG8gbWFrZSBzdXJlIHRoZSBuYW1lIGlzIHByb25vdW5jZWQgY29ycmVjdGx5IGluIHBob25lIGNhbGxzIHdpdGggdGhlIGNvbnRhY3QuXHJcbiAgKi9cclxuICB5b21pbWlkZGxlbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/dataverse-gen/entities/Contact.ts\n");

/***/ }),

/***/ "./src/dataverse-gen/entities/bis_address.ts":
/*!***************************************************!*\
  !*** ./src/dataverse-gen/entities/bis_address.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.bis_addressMetadata = void 0;\r\n// Entity bis_address\r\nexports.bis_addressMetadata = {\r\n    typeName: \"mscrm.bis_address\",\r\n    logicalName: \"bis_address\",\r\n    collectionName: \"bis_addresses\",\r\n    primaryIdAttribute: \"bis_addressid\",\r\n    attributeTypes: {\r\n        // Numeric Types\r\n        importsequencenumber: \"Integer\",\r\n        timezoneruleversionnumber: \"Integer\",\r\n        utcconversiontimezonecode: \"Integer\",\r\n        versionnumber: \"BigInt\",\r\n        // Optionsets\r\n        statecode: \"Optionset\",\r\n        statuscode: \"Optionset\",\r\n        // Date Formats\r\n        createdon: \"DateAndTime:UserLocal\",\r\n        modifiedon: \"DateAndTime:UserLocal\",\r\n        overriddencreatedon: \"DateOnly:UserLocal\",\r\n    },\r\n    navigation: {\r\n        bis_area: [\"mscrm.bis_area\"],\r\n        bis_city: [\"mscrm.bis_city\"],\r\n        bis_country: [\"mscrm.bis_country\"],\r\n        bis_state: [\"mscrm.bis_state\"],\r\n        createdby: [\"mscrm.systemuser\"],\r\n        createdonbehalfby: [\"mscrm.systemuser\"],\r\n        modifiedby: [\"mscrm.systemuser\"],\r\n        modifiedonbehalfby: [\"mscrm.systemuser\"],\r\n        ownerid: [\"mscrm.principal\"],\r\n        owningbusinessunit: [\"mscrm.businessunit\"],\r\n        owningteam: [\"mscrm.team\"],\r\n        owninguser: [\"mscrm.systemuser\"],\r\n    },\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/dataverse-gen/entities/bis_address.ts\n");

/***/ }),

/***/ "./src/dataverse-gen/entities/bis_addressbook.ts":
/*!*******************************************************!*\
  !*** ./src/dataverse-gen/entities/bis_addressbook.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.bis_addressbookMetadata = void 0;\r\n// Entity bis_addressbook\r\nexports.bis_addressbookMetadata = {\r\n    typeName: \"mscrm.bis_addressbook\",\r\n    logicalName: \"bis_addressbook\",\r\n    collectionName: \"bis_addressbooks\",\r\n    primaryIdAttribute: \"bis_addressbookid\",\r\n    attributeTypes: {\r\n        // Numeric Types\r\n        importsequencenumber: \"Integer\",\r\n        timezoneruleversionnumber: \"Integer\",\r\n        utcconversiontimezonecode: \"Integer\",\r\n        versionnumber: \"BigInt\",\r\n        // Optionsets\r\n        bis_type: \"Optionset\",\r\n        statecode: \"Optionset\",\r\n        statuscode: \"Optionset\",\r\n        // Date Formats\r\n        createdon: \"DateAndTime:UserLocal\",\r\n        modifiedon: \"DateAndTime:UserLocal\",\r\n        overriddencreatedon: \"DateOnly:UserLocal\",\r\n    },\r\n    navigation: {\r\n        bis_address: [\"mscrm.bis_address\"],\r\n        bis_city: [\"mscrm.bis_city\"],\r\n        bis_contact: [\"mscrm.contact\"],\r\n        bis_country: [\"mscrm.bis_country\"],\r\n        bis_institution: [\"mscrm.account\"],\r\n        bis_state: [\"mscrm.bis_state\"],\r\n        createdby: [\"mscrm.systemuser\"],\r\n        createdonbehalfby: [\"mscrm.systemuser\"],\r\n        modifiedby: [\"mscrm.systemuser\"],\r\n        modifiedonbehalfby: [\"mscrm.systemuser\"],\r\n        ownerid: [\"mscrm.principal\"],\r\n        owningbusinessunit: [\"mscrm.businessunit\"],\r\n        owningteam: [\"mscrm.team\"],\r\n        owninguser: [\"mscrm.systemuser\"],\r\n    },\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/dataverse-gen/entities/bis_addressbook.ts\n");

/***/ }),

/***/ "./src/dataverse-gen/entities/bis_city.ts":
/*!************************************************!*\
  !*** ./src/dataverse-gen/entities/bis_city.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.bis_cityMetadata = void 0;\r\n// Entity bis_city\r\nexports.bis_cityMetadata = {\r\n    typeName: \"mscrm.bis_city\",\r\n    logicalName: \"bis_city\",\r\n    collectionName: \"bis_cities\",\r\n    primaryIdAttribute: \"bis_cityid\",\r\n    attributeTypes: {\r\n        // Numeric Types\r\n        importsequencenumber: \"Integer\",\r\n        timezoneruleversionnumber: \"Integer\",\r\n        utcconversiontimezonecode: \"Integer\",\r\n        versionnumber: \"BigInt\",\r\n        // Optionsets\r\n        statecode: \"Optionset\",\r\n        statuscode: \"Optionset\",\r\n        // Date Formats\r\n        createdon: \"DateAndTime:UserLocal\",\r\n        modifiedon: \"DateAndTime:UserLocal\",\r\n        overriddencreatedon: \"DateOnly:UserLocal\",\r\n    },\r\n    navigation: {\r\n        bis_country: [\"mscrm.bis_country\"],\r\n        bis_state: [\"mscrm.bis_state\"],\r\n        createdby: [\"mscrm.systemuser\"],\r\n        createdonbehalfby: [\"mscrm.systemuser\"],\r\n        modifiedby: [\"mscrm.systemuser\"],\r\n        modifiedonbehalfby: [\"mscrm.systemuser\"],\r\n        ownerid: [\"mscrm.principal\"],\r\n        owningbusinessunit: [\"mscrm.businessunit\"],\r\n        owningteam: [\"mscrm.team\"],\r\n        owninguser: [\"mscrm.systemuser\"],\r\n    },\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/dataverse-gen/entities/bis_city.ts\n");

/***/ }),

/***/ "./src/dataverse-gen/entities/bis_systemsettings.ts":
/*!**********************************************************!*\
  !*** ./src/dataverse-gen/entities/bis_systemsettings.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.bis_systemsettingsMetadata = void 0;\r\n// Entity bis_systemsettings\r\nexports.bis_systemsettingsMetadata = {\r\n    typeName: \"mscrm.bis_systemsettings\",\r\n    logicalName: \"bis_systemsettings\",\r\n    collectionName: \"bis_systemsettingses\",\r\n    primaryIdAttribute: \"bis_systemsettingsid\",\r\n    attributeTypes: {\r\n        // Numeric Types\r\n        importsequencenumber: \"Integer\",\r\n        timezoneruleversionnumber: \"Integer\",\r\n        utcconversiontimezonecode: \"Integer\",\r\n        versionnumber: \"BigInt\",\r\n        // Optionsets\r\n        bis_systemsettingtype: \"Optionset\",\r\n        statecode: \"Optionset\",\r\n        statuscode: \"Optionset\",\r\n        // Date Formats\r\n        createdon: \"DateAndTime:UserLocal\",\r\n        modifiedon: \"DateAndTime:UserLocal\",\r\n        overriddencreatedon: \"DateOnly:UserLocal\",\r\n    },\r\n    navigation: {\r\n        createdby: [\"mscrm.systemuser\"],\r\n        createdonbehalfby: [\"mscrm.systemuser\"],\r\n        modifiedby: [\"mscrm.systemuser\"],\r\n        modifiedonbehalfby: [\"mscrm.systemuser\"],\r\n        ownerid: [\"mscrm.principal\"],\r\n        owningbusinessunit: [\"mscrm.businessunit\"],\r\n        owningteam: [\"mscrm.team\"],\r\n        owninguser: [\"mscrm.systemuser\"],\r\n    },\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/dataverse-gen/entities/bis_systemsettings.ts\n");

/***/ }),

/***/ "./src/dataverse-gen/entities/bis_validation.ts":
/*!******************************************************!*\
  !*** ./src/dataverse-gen/entities/bis_validation.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.bis_validationMetadata = void 0;\r\n// Entity bis_validation\r\nexports.bis_validationMetadata = {\r\n    typeName: \"mscrm.bis_validation\",\r\n    logicalName: \"bis_validation\",\r\n    collectionName: \"bis_validations\",\r\n    primaryIdAttribute: \"bis_validationid\",\r\n    attributeTypes: {\r\n        // Numeric Types\r\n        importsequencenumber: \"Integer\",\r\n        timezoneruleversionnumber: \"Integer\",\r\n        utcconversiontimezonecode: \"Integer\",\r\n        versionnumber: \"BigInt\",\r\n        // Optionsets\r\n        bis_relatedentity: \"Optionset\",\r\n        bis_relatedevent: \"Optionset\",\r\n        statecode: \"Optionset\",\r\n        statuscode: \"Optionset\",\r\n        // Date Formats\r\n        createdon: \"DateAndTime:UserLocal\",\r\n        modifiedon: \"DateAndTime:UserLocal\",\r\n        overriddencreatedon: \"DateOnly:UserLocal\",\r\n    },\r\n    navigation: {\r\n        bis_institutiontype: [\"mscrm.bis_institutiontype\"],\r\n        bis_relatedcontact: [\"mscrm.contact\"],\r\n        bis_relatedinstitution: [\"mscrm.account\"],\r\n        createdby: [\"mscrm.systemuser\"],\r\n        createdonbehalfby: [\"mscrm.systemuser\"],\r\n        modifiedby: [\"mscrm.systemuser\"],\r\n        modifiedonbehalfby: [\"mscrm.systemuser\"],\r\n        ownerid: [\"mscrm.principal\"],\r\n        owningbusinessunit: [\"mscrm.businessunit\"],\r\n        owningteam: [\"mscrm.team\"],\r\n        owninguser: [\"mscrm.systemuser\"],\r\n    },\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YXZlcnNlLWdlbi9lbnRpdGllcy9iaXNfdmFsaWRhdGlvbi50cy5qcyIsIm1hcHBpbmdzIjoiOzs7QUF3R0Esd0JBQXdCO0FBQ1gsOEJBQXNCLEdBQUc7SUFDcEMsUUFBUSxFQUFFLHNCQUFzQjtJQUNoQyxXQUFXLEVBQUUsZ0JBQWdCO0lBQzdCLGNBQWMsRUFBRSxpQkFBaUI7SUFDakMsa0JBQWtCLEVBQUUsa0JBQWtCO0lBQ3RDLGNBQWMsRUFBRTtRQUNkLGdCQUFnQjtRQUNoQixvQkFBb0IsRUFBRSxTQUFTO1FBQy9CLHlCQUF5QixFQUFFLFNBQVM7UUFDcEMseUJBQXlCLEVBQUUsU0FBUztRQUNwQyxhQUFhLEVBQUUsUUFBUTtRQUN2QixhQUFhO1FBQ2IsaUJBQWlCLEVBQUUsV0FBVztRQUM5QixnQkFBZ0IsRUFBRSxXQUFXO1FBQzdCLFNBQVMsRUFBRSxXQUFXO1FBQ3RCLFVBQVUsRUFBRSxXQUFXO1FBQ3ZCLGVBQWU7UUFDZixTQUFTLEVBQUUsdUJBQXVCO1FBQ2xDLFVBQVUsRUFBRSx1QkFBdUI7UUFDbkMsbUJBQW1CLEVBQUUsb0JBQW9CO0tBQzFDO0lBQ0QsVUFBVSxFQUFFO1FBQ1YsbUJBQW1CLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQztRQUNsRCxrQkFBa0IsRUFBRSxDQUFDLGVBQWUsQ0FBQztRQUNyQyxzQkFBc0IsRUFBRSxDQUFDLGVBQWUsQ0FBQztRQUN6QyxTQUFTLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztRQUMvQixpQkFBaUIsRUFBRSxDQUFDLGtCQUFrQixDQUFDO1FBQ3ZDLFVBQVUsRUFBRSxDQUFDLGtCQUFrQixDQUFDO1FBQ2hDLGtCQUFrQixFQUFFLENBQUMsa0JBQWtCLENBQUM7UUFDeEMsT0FBTyxFQUFFLENBQUMsaUJBQWlCLENBQUM7UUFDNUIsa0JBQWtCLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztRQUMxQyxVQUFVLEVBQUUsQ0FBQyxZQUFZLENBQUM7UUFDMUIsVUFBVSxFQUFFLENBQUMsa0JBQWtCLENBQUM7S0FDakM7Q0FDRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQmlzLkNvbW1vbi5DUk0vLi9zcmMvZGF0YXZlcnNlLWdlbi9lbnRpdGllcy9iaXNfdmFsaWRhdGlvbi50cz9lOGNhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlKi9cclxuaW1wb3J0IHsgSUVudGl0eSB9IGZyb20gXCJkYXRhdmVyc2UtaWZ5XCI7XHJcblxyXG4vLyBFbnRpdHkgYmlzX3ZhbGlkYXRpb24gRm9ybUNvbnRleHRcclxuZXhwb3J0IGludGVyZmFjZSBiaXNfdmFsaWRhdGlvbkZvcm1Db250ZXh0IGV4dGVuZHMgWHJtLkZvcm1Db250ZXh0IHtcclxuICAgIGdldEF0dHJpYnV0ZSgpOiBYcm0uQXR0cmlidXRlcy5BdHRyaWJ1dGVbXTtcclxuICAgIGdldEF0dHJpYnV0ZTxUIGV4dGVuZHMgWHJtLkF0dHJpYnV0ZXMuQXR0cmlidXRlPihhdHRyaWJ1dGVOYW1lOiBzdHJpbmcpOiBUO1xyXG4gICAgZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZU5hbWU6IHN0cmluZyk6IFhybS5BdHRyaWJ1dGVzLkF0dHJpYnV0ZTtcclxuICAgIGdldEF0dHJpYnV0ZShpbmRleDogbnVtYmVyKTogWHJtLkF0dHJpYnV0ZXMuQXR0cmlidXRlO1xyXG5cclxuICAgIGdldENvbnRyb2woKTogWHJtLkNvbnRyb2xzLkNvbnRyb2xbXTtcclxuICAgIGdldENvbnRyb2w8VCBleHRlbmRzIFhybS5Db250cm9scy5Db250cm9sPihjb250cm9sTmFtZTogc3RyaW5nKTogVDtcclxuICAgIGdldENvbnRyb2woY29udHJvbE5hbWU6IHN0cmluZyk6IFhybS5Db250cm9scy5Db250cm9sO1xyXG4gICAgZ2V0Q29udHJvbChpbmRleDogbnVtYmVyKTogWHJtLkNvbnRyb2xzLkNvbnRyb2w7XHJcblxyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYmlzX2R1cGxpY2F0ZWV4aXN0cycpOiBYcm0uQXR0cmlidXRlcy5Cb29sZWFuQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2Jpc19kdXBsaWNhdGVleGlzdHMnKTogWHJtLkNvbnRyb2xzLk9wdGlvblNldENvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdiaXNfaW5zdGl0dXRpb25uYW1lJyk6IFhybS5BdHRyaWJ1dGVzLlN0cmluZ0F0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBcclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdiaXNfaW5zdGl0dXRpb25uYW1lJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFRoZSBuYW1lIG9mIHRoZSBjdXN0b20gZW50aXR5LlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYmlzX25hbWUnKTogWHJtLkF0dHJpYnV0ZXMuU3RyaW5nQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFRoZSBuYW1lIG9mIHRoZSBjdXN0b20gZW50aXR5LlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2Jpc19uYW1lJyk6IFhybS5Db250cm9scy5TdHJpbmdDb250cm9sO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYmlzX3JlbGF0ZWRlbnRpdHknKTogWHJtLkF0dHJpYnV0ZXMuT3B0aW9uU2V0QXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2Jpc19yZWxhdGVkZW50aXR5Jyk6IFhybS5Db250cm9scy5PcHRpb25TZXRDb250cm9sO1xyXG4gICAgLypcclxuICAgIFxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnYmlzX3JlbGF0ZWRldmVudCcpOiBYcm0uQXR0cmlidXRlcy5PcHRpb25TZXRBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnYmlzX3JlbGF0ZWRldmVudCcpOiBYcm0uQ29udHJvbHMuT3B0aW9uU2V0Q29udHJvbDtcclxuICAgIC8qXHJcbiAgICBEYXRlIGFuZCB0aW1lIHdoZW4gdGhlIHJlY29yZCB3YXMgY3JlYXRlZC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ2NyZWF0ZWRvbicpOiBYcm0uQXR0cmlidXRlcy5EYXRlQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIERhdGUgYW5kIHRpbWUgd2hlbiB0aGUgcmVjb3JkIHdhcyBjcmVhdGVkLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ2NyZWF0ZWRvbicpOiBYcm0uQ29udHJvbHMuRGF0ZUNvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgU2VxdWVuY2UgbnVtYmVyIG9mIHRoZSBpbXBvcnQgdGhhdCBjcmVhdGVkIHRoaXMgcmVjb3JkLlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAnaW1wb3J0c2VxdWVuY2VudW1iZXInKTogWHJtLkF0dHJpYnV0ZXMuTnVtYmVyQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFNlcXVlbmNlIG51bWJlciBvZiB0aGUgaW1wb3J0IHRoYXQgY3JlYXRlZCB0aGlzIHJlY29yZC5cclxuICAgICovXHJcbiAgICBnZXRDb250cm9sKG5hbWU6ICdpbXBvcnRzZXF1ZW5jZW51bWJlcicpOiBYcm0uQ29udHJvbHMuTnVtYmVyQ29udHJvbDtcclxuICAgIC8qXHJcbiAgICBEYXRlIGFuZCB0aW1lIHdoZW4gdGhlIHJlY29yZCB3YXMgbW9kaWZpZWQuXHJcbiAgICAqL1xyXG4gICAgZ2V0QXR0cmlidXRlKG5hbWU6ICdtb2RpZmllZG9uJyk6IFhybS5BdHRyaWJ1dGVzLkRhdGVBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgRGF0ZSBhbmQgdGltZSB3aGVuIHRoZSByZWNvcmQgd2FzIG1vZGlmaWVkLlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ21vZGlmaWVkb24nKTogWHJtLkNvbnRyb2xzLkRhdGVDb250cm9sO1xyXG4gICAgLypcclxuICAgIERhdGUgYW5kIHRpbWUgdGhhdCB0aGUgcmVjb3JkIHdhcyBtaWdyYXRlZC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ292ZXJyaWRkZW5jcmVhdGVkb24nKTogWHJtLkF0dHJpYnV0ZXMuRGF0ZUF0dHJpYnV0ZTtcclxuICAgIC8qXHJcbiAgICBEYXRlIGFuZCB0aW1lIHRoYXQgdGhlIHJlY29yZCB3YXMgbWlncmF0ZWQuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAnb3ZlcnJpZGRlbmNyZWF0ZWRvbicpOiBYcm0uQ29udHJvbHMuRGF0ZUNvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgRm9yIGludGVybmFsIHVzZSBvbmx5LlxyXG4gICAgKi9cclxuICAgIGdldEF0dHJpYnV0ZShuYW1lOiAndGltZXpvbmVydWxldmVyc2lvbm51bWJlcicpOiBYcm0uQXR0cmlidXRlcy5OdW1iZXJBdHRyaWJ1dGU7XHJcbiAgICAvKlxyXG4gICAgRm9yIGludGVybmFsIHVzZSBvbmx5LlxyXG4gICAgKi9cclxuICAgIGdldENvbnRyb2wobmFtZTogJ3RpbWV6b25lcnVsZXZlcnNpb25udW1iZXInKTogWHJtLkNvbnRyb2xzLk51bWJlckNvbnRyb2w7XHJcbiAgICAvKlxyXG4gICAgVGltZSB6b25lIGNvZGUgdGhhdCB3YXMgaW4gdXNlIHdoZW4gdGhlIHJlY29yZCB3YXMgY3JlYXRlZC5cclxuICAgICovXHJcbiAgICBnZXRBdHRyaWJ1dGUobmFtZTogJ3V0Y2NvbnZlcnNpb250aW1lem9uZWNvZGUnKTogWHJtLkF0dHJpYnV0ZXMuTnVtYmVyQXR0cmlidXRlO1xyXG4gICAgLypcclxuICAgIFRpbWUgem9uZSBjb2RlIHRoYXQgd2FzIGluIHVzZSB3aGVuIHRoZSByZWNvcmQgd2FzIGNyZWF0ZWQuXHJcbiAgICAqL1xyXG4gICAgZ2V0Q29udHJvbChuYW1lOiAndXRjY29udmVyc2lvbnRpbWV6b25lY29kZScpOiBYcm0uQ29udHJvbHMuTnVtYmVyQ29udHJvbDtcclxufVxyXG4vLyBFbnRpdHkgYmlzX3ZhbGlkYXRpb25cclxuZXhwb3J0IGNvbnN0IGJpc192YWxpZGF0aW9uTWV0YWRhdGEgPSB7XHJcbiAgdHlwZU5hbWU6IFwibXNjcm0uYmlzX3ZhbGlkYXRpb25cIixcclxuICBsb2dpY2FsTmFtZTogXCJiaXNfdmFsaWRhdGlvblwiLFxyXG4gIGNvbGxlY3Rpb25OYW1lOiBcImJpc192YWxpZGF0aW9uc1wiLFxyXG4gIHByaW1hcnlJZEF0dHJpYnV0ZTogXCJiaXNfdmFsaWRhdGlvbmlkXCIsXHJcbiAgYXR0cmlidXRlVHlwZXM6IHtcclxuICAgIC8vIE51bWVyaWMgVHlwZXNcclxuICAgIGltcG9ydHNlcXVlbmNlbnVtYmVyOiBcIkludGVnZXJcIixcclxuICAgIHRpbWV6b25lcnVsZXZlcnNpb25udW1iZXI6IFwiSW50ZWdlclwiLFxyXG4gICAgdXRjY29udmVyc2lvbnRpbWV6b25lY29kZTogXCJJbnRlZ2VyXCIsXHJcbiAgICB2ZXJzaW9ubnVtYmVyOiBcIkJpZ0ludFwiLFxyXG4gICAgLy8gT3B0aW9uc2V0c1xyXG4gICAgYmlzX3JlbGF0ZWRlbnRpdHk6IFwiT3B0aW9uc2V0XCIsXHJcbiAgICBiaXNfcmVsYXRlZGV2ZW50OiBcIk9wdGlvbnNldFwiLFxyXG4gICAgc3RhdGVjb2RlOiBcIk9wdGlvbnNldFwiLFxyXG4gICAgc3RhdHVzY29kZTogXCJPcHRpb25zZXRcIixcclxuICAgIC8vIERhdGUgRm9ybWF0c1xyXG4gICAgY3JlYXRlZG9uOiBcIkRhdGVBbmRUaW1lOlVzZXJMb2NhbFwiLFxyXG4gICAgbW9kaWZpZWRvbjogXCJEYXRlQW5kVGltZTpVc2VyTG9jYWxcIixcclxuICAgIG92ZXJyaWRkZW5jcmVhdGVkb246IFwiRGF0ZU9ubHk6VXNlckxvY2FsXCIsXHJcbiAgfSxcclxuICBuYXZpZ2F0aW9uOiB7XHJcbiAgICBiaXNfaW5zdGl0dXRpb250eXBlOiBbXCJtc2NybS5iaXNfaW5zdGl0dXRpb250eXBlXCJdLFxyXG4gICAgYmlzX3JlbGF0ZWRjb250YWN0OiBbXCJtc2NybS5jb250YWN0XCJdLFxyXG4gICAgYmlzX3JlbGF0ZWRpbnN0aXR1dGlvbjogW1wibXNjcm0uYWNjb3VudFwiXSxcclxuICAgIGNyZWF0ZWRieTogW1wibXNjcm0uc3lzdGVtdXNlclwiXSxcclxuICAgIGNyZWF0ZWRvbmJlaGFsZmJ5OiBbXCJtc2NybS5zeXN0ZW11c2VyXCJdLFxyXG4gICAgbW9kaWZpZWRieTogW1wibXNjcm0uc3lzdGVtdXNlclwiXSxcclxuICAgIG1vZGlmaWVkb25iZWhhbGZieTogW1wibXNjcm0uc3lzdGVtdXNlclwiXSxcclxuICAgIG93bmVyaWQ6IFtcIm1zY3JtLnByaW5jaXBhbFwiXSxcclxuICAgIG93bmluZ2J1c2luZXNzdW5pdDogW1wibXNjcm0uYnVzaW5lc3N1bml0XCJdLFxyXG4gICAgb3duaW5ndGVhbTogW1wibXNjcm0udGVhbVwiXSxcclxuICAgIG93bmluZ3VzZXI6IFtcIm1zY3JtLnN5c3RlbXVzZXJcIl0sXHJcbiAgfSxcclxufTtcclxuXHJcbi8vIEF0dHJpYnV0ZSBjb25zdGFudHNcclxuZXhwb3J0IGNvbnN0IGVudW0gYmlzX3ZhbGlkYXRpb25BdHRyaWJ1dGVzIHtcclxuICBiaXNfZHVwbGljYXRlZXhpc3RzID0gXCJiaXNfZHVwbGljYXRlZXhpc3RzXCIsXHJcbiAgYmlzX2luc3RpdHV0aW9ubmFtZSA9IFwiYmlzX2luc3RpdHV0aW9ubmFtZVwiLFxyXG4gIGJpc19pbnN0aXR1dGlvbnR5cGUgPSBcImJpc19pbnN0aXR1dGlvbnR5cGVcIixcclxuICBiaXNfaW5zdGl0dXRpb250eXBlTmFtZSA9IFwiYmlzX2luc3RpdHV0aW9udHlwZW5hbWVcIixcclxuICBiaXNfbmFtZSA9IFwiYmlzX25hbWVcIixcclxuICBiaXNfcmVsYXRlZGNvbnRhY3QgPSBcImJpc19yZWxhdGVkY29udGFjdFwiLFxyXG4gIGJpc19yZWxhdGVkY29udGFjdE5hbWUgPSBcImJpc19yZWxhdGVkY29udGFjdG5hbWVcIixcclxuICBiaXNfcmVsYXRlZGNvbnRhY3RZb21pTmFtZSA9IFwiYmlzX3JlbGF0ZWRjb250YWN0eW9taW5hbWVcIixcclxuICBiaXNfcmVsYXRlZGVudGl0eSA9IFwiYmlzX3JlbGF0ZWRlbnRpdHlcIixcclxuICBiaXNfcmVsYXRlZGV2ZW50ID0gXCJiaXNfcmVsYXRlZGV2ZW50XCIsXHJcbiAgYmlzX3JlbGF0ZWRpbnN0aXR1dGlvbiA9IFwiYmlzX3JlbGF0ZWRpbnN0aXR1dGlvblwiLFxyXG4gIGJpc19yZWxhdGVkaW5zdGl0dXRpb25OYW1lID0gXCJiaXNfcmVsYXRlZGluc3RpdHV0aW9ubmFtZVwiLFxyXG4gIGJpc19yZWxhdGVkaW5zdGl0dXRpb25Zb21pTmFtZSA9IFwiYmlzX3JlbGF0ZWRpbnN0aXR1dGlvbnlvbWluYW1lXCIsXHJcbiAgYmlzX3ZhbGlkYXRpb25JZCA9IFwiYmlzX3ZhbGlkYXRpb25pZFwiLFxyXG4gIENyZWF0ZWRCeSA9IFwiY3JlYXRlZGJ5XCIsXHJcbiAgQ3JlYXRlZEJ5TmFtZSA9IFwiY3JlYXRlZGJ5bmFtZVwiLFxyXG4gIENyZWF0ZWRCeVlvbWlOYW1lID0gXCJjcmVhdGVkYnl5b21pbmFtZVwiLFxyXG4gIENyZWF0ZWRPbiA9IFwiY3JlYXRlZG9uXCIsXHJcbiAgQ3JlYXRlZE9uQmVoYWxmQnkgPSBcImNyZWF0ZWRvbmJlaGFsZmJ5XCIsXHJcbiAgQ3JlYXRlZE9uQmVoYWxmQnlOYW1lID0gXCJjcmVhdGVkb25iZWhhbGZieW5hbWVcIixcclxuICBDcmVhdGVkT25CZWhhbGZCeVlvbWlOYW1lID0gXCJjcmVhdGVkb25iZWhhbGZieXlvbWluYW1lXCIsXHJcbiAgSW1wb3J0U2VxdWVuY2VOdW1iZXIgPSBcImltcG9ydHNlcXVlbmNlbnVtYmVyXCIsXHJcbiAgTW9kaWZpZWRCeSA9IFwibW9kaWZpZWRieVwiLFxyXG4gIE1vZGlmaWVkQnlOYW1lID0gXCJtb2RpZmllZGJ5bmFtZVwiLFxyXG4gIE1vZGlmaWVkQnlZb21pTmFtZSA9IFwibW9kaWZpZWRieXlvbWluYW1lXCIsXHJcbiAgTW9kaWZpZWRPbiA9IFwibW9kaWZpZWRvblwiLFxyXG4gIE1vZGlmaWVkT25CZWhhbGZCeSA9IFwibW9kaWZpZWRvbmJlaGFsZmJ5XCIsXHJcbiAgTW9kaWZpZWRPbkJlaGFsZkJ5TmFtZSA9IFwibW9kaWZpZWRvbmJlaGFsZmJ5bmFtZVwiLFxyXG4gIE1vZGlmaWVkT25CZWhhbGZCeVlvbWlOYW1lID0gXCJtb2RpZmllZG9uYmVoYWxmYnl5b21pbmFtZVwiLFxyXG4gIE92ZXJyaWRkZW5DcmVhdGVkT24gPSBcIm92ZXJyaWRkZW5jcmVhdGVkb25cIixcclxuICBPd25lcklkID0gXCJvd25lcmlkXCIsXHJcbiAgT3duZXJJZE5hbWUgPSBcIm93bmVyaWRuYW1lXCIsXHJcbiAgT3duZXJJZFR5cGUgPSBcIm93bmVyaWR0eXBlXCIsXHJcbiAgT3duZXJJZFlvbWlOYW1lID0gXCJvd25lcmlkeW9taW5hbWVcIixcclxuICBPd25pbmdCdXNpbmVzc1VuaXQgPSBcIm93bmluZ2J1c2luZXNzdW5pdFwiLFxyXG4gIE93bmluZ0J1c2luZXNzVW5pdE5hbWUgPSBcIm93bmluZ2J1c2luZXNzdW5pdG5hbWVcIixcclxuICBPd25pbmdUZWFtID0gXCJvd25pbmd0ZWFtXCIsXHJcbiAgT3duaW5nVXNlciA9IFwib3duaW5ndXNlclwiLFxyXG4gIHN0YXRlY29kZSA9IFwic3RhdGVjb2RlXCIsXHJcbiAgc3RhdHVzY29kZSA9IFwic3RhdHVzY29kZVwiLFxyXG4gIFRpbWVab25lUnVsZVZlcnNpb25OdW1iZXIgPSBcInRpbWV6b25lcnVsZXZlcnNpb25udW1iZXJcIixcclxuICBVVENDb252ZXJzaW9uVGltZVpvbmVDb2RlID0gXCJ1dGNjb252ZXJzaW9udGltZXpvbmVjb2RlXCIsXHJcbiAgVmVyc2lvbk51bWJlciA9IFwidmVyc2lvbm51bWJlclwiLFxyXG59XHJcbi8vIEVhcmx5IEJvdW5kIEludGVyZmFjZVxyXG5leHBvcnQgaW50ZXJmYWNlIGJpc192YWxpZGF0aW9uIGV4dGVuZHMgSUVudGl0eSB7XHJcbiAgLypcclxuICBEdXBsaWNhdGUgRXhpc3RzIEJvb2xlYW5UeXBlXHJcbiAgKi9cclxuICBiaXNfZHVwbGljYXRlZXhpc3RzPzogYm9vbGVhbiB8IG51bGw7XHJcbiAgLypcclxuICBJbnN0aXR1dGlvbiBOYW1lIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGJpc19pbnN0aXR1dGlvbm5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgSW5zdGl0dXRpb24gVHlwZSBMb29rdXBUeXBlXHJcbiAgKi9cclxuICBiaXNfaW5zdGl0dXRpb250eXBlPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGJpc19pbnN0aXR1dGlvbnR5cGVuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIElEIFtSZXF1aXJlZF0gU3RyaW5nVHlwZSBUaGUgbmFtZSBvZiB0aGUgY3VzdG9tIGVudGl0eS5cclxuICAqL1xyXG4gIGJpc19uYW1lPzogc3RyaW5nO1xyXG4gIC8qXHJcbiAgUmVsYXRlZCBDb250YWN0IExvb2t1cFR5cGVcclxuICAqL1xyXG4gIGJpc19yZWxhdGVkY29udGFjdD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBiaXNfcmVsYXRlZGNvbnRhY3RuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBiaXNfcmVsYXRlZGNvbnRhY3R5b21pbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBSZWxhdGVkIEVudGl0eSBiaXNfdmFsaWRhdGlvbnJlbGF0ZWRlbnRpdHlcclxuICAqL1xyXG4gIGJpc19yZWxhdGVkZW50aXR5PzogaW1wb3J0KFwiLi4vZW51bXMvYmlzX3ZhbGlkYXRpb25yZWxhdGVkZW50aXR5XCIpLmJpc192YWxpZGF0aW9ucmVsYXRlZGVudGl0eSB8IG51bGw7XHJcbiAgLypcclxuICBSZWxhdGVkIEV2ZW50IGJpc192YWxpZGF0aW9ucmVsYXRlZGV2ZW50XHJcbiAgKi9cclxuICBiaXNfcmVsYXRlZGV2ZW50PzogaW1wb3J0KFwiLi4vZW51bXMvYmlzX3ZhbGlkYXRpb25yZWxhdGVkZXZlbnRcIikuYmlzX3ZhbGlkYXRpb25yZWxhdGVkZXZlbnQgfCBudWxsO1xyXG4gIC8qXHJcbiAgUmVsYXRlZCBJbnN0aXR1dGlvbiBMb29rdXBUeXBlXHJcbiAgKi9cclxuICBiaXNfcmVsYXRlZGluc3RpdHV0aW9uPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGJpc19yZWxhdGVkaW5zdGl0dXRpb25uYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBiaXNfcmVsYXRlZGluc3RpdHV0aW9ueW9taW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgVmFsaWRhdGlvbiBVbmlxdWVpZGVudGlmaWVyVHlwZSBVbmlxdWUgaWRlbnRpZmllciBmb3IgZW50aXR5IGluc3RhbmNlc1xyXG4gICovXHJcbiAgYmlzX3ZhbGlkYXRpb25pZD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuR3VpZCB8IG51bGw7XHJcbiAgLypcclxuICBDcmVhdGVkIEJ5IExvb2t1cFR5cGUgVW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIHVzZXIgd2hvIGNyZWF0ZWQgdGhlIHJlY29yZC5cclxuICAqL1xyXG4gIGNyZWF0ZWRieT86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBjcmVhdGVkYnluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBjcmVhdGVkYnl5b21pbmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICBDcmVhdGVkIE9uIERhdGVUaW1lVHlwZSBEYXRlIGFuZCB0aW1lIHdoZW4gdGhlIHJlY29yZCB3YXMgY3JlYXRlZC4gRGF0ZUFuZFRpbWU6VXNlckxvY2FsXHJcbiAgKi9cclxuICBjcmVhdGVkb24/OiBEYXRlIHwgbnVsbDtcclxuICAvKlxyXG4gIENyZWF0ZWQgQnkgKERlbGVnYXRlKSBMb29rdXBUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBkZWxlZ2F0ZSB1c2VyIHdobyBjcmVhdGVkIHRoZSByZWNvcmQuXHJcbiAgKi9cclxuICBjcmVhdGVkb25iZWhhbGZieT86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBjcmVhdGVkb25iZWhhbGZieW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIGNyZWF0ZWRvbmJlaGFsZmJ5eW9taW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgSW1wb3J0IFNlcXVlbmNlIE51bWJlciBJbnRlZ2VyVHlwZSBTZXF1ZW5jZSBudW1iZXIgb2YgdGhlIGltcG9ydCB0aGF0IGNyZWF0ZWQgdGhpcyByZWNvcmQuXHJcbiAgKi9cclxuICBpbXBvcnRzZXF1ZW5jZW51bWJlcj86IG51bWJlciB8IG51bGw7XHJcbiAgLypcclxuICBNb2RpZmllZCBCeSBMb29rdXBUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSB1c2VyIHdobyBtb2RpZmllZCB0aGUgcmVjb3JkLlxyXG4gICovXHJcbiAgbW9kaWZpZWRieT86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBtb2RpZmllZGJ5bmFtZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZVxyXG4gICovXHJcbiAgbW9kaWZpZWRieXlvbWluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIE1vZGlmaWVkIE9uIERhdGVUaW1lVHlwZSBEYXRlIGFuZCB0aW1lIHdoZW4gdGhlIHJlY29yZCB3YXMgbW9kaWZpZWQuIERhdGVBbmRUaW1lOlVzZXJMb2NhbFxyXG4gICovXHJcbiAgbW9kaWZpZWRvbj86IERhdGUgfCBudWxsO1xyXG4gIC8qXHJcbiAgTW9kaWZpZWQgQnkgKERlbGVnYXRlKSBMb29rdXBUeXBlIFVuaXF1ZSBpZGVudGlmaWVyIG9mIHRoZSBkZWxlZ2F0ZSB1c2VyIHdobyBtb2RpZmllZCB0aGUgcmVjb3JkLlxyXG4gICovXHJcbiAgbW9kaWZpZWRvbmJlaGFsZmJ5PzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIG1vZGlmaWVkb25iZWhhbGZieW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGVcclxuICAqL1xyXG4gIG1vZGlmaWVkb25iZWhhbGZieXlvbWluYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIFJlY29yZCBDcmVhdGVkIE9uIERhdGVUaW1lVHlwZSBEYXRlIGFuZCB0aW1lIHRoYXQgdGhlIHJlY29yZCB3YXMgbWlncmF0ZWQuIERhdGVPbmx5OlVzZXJMb2NhbFxyXG4gICovXHJcbiAgb3ZlcnJpZGRlbmNyZWF0ZWRvbj86IERhdGUgfCBudWxsO1xyXG4gIC8qXHJcbiAgT3duZXIgT3duZXJUeXBlIE93bmVyIElkXHJcbiAgKi9cclxuICBvd25lcmlkPzogaW1wb3J0KFwiZGF0YXZlcnNlLWlmeVwiKS5FbnRpdHlSZWZlcmVuY2UgfCBudWxsO1xyXG4gIC8qXHJcbiAgIFN0cmluZ1R5cGUgTmFtZSBvZiB0aGUgb3duZXJcclxuICAqL1xyXG4gIG93bmVyaWRuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gICBFbnRpdHlOYW1lVHlwZSBPd25lciBJZCBUeXBlXHJcbiAgKi9cclxuICBvd25lcmlkdHlwZT86IHN0cmluZyB8IG51bGw7XHJcbiAgLypcclxuICAgU3RyaW5nVHlwZSBZb21pIG5hbWUgb2YgdGhlIG93bmVyXHJcbiAgKi9cclxuICBvd25lcmlkeW9taW5hbWU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIC8qXHJcbiAgT3duaW5nIEJ1c2luZXNzIFVuaXQgTG9va3VwVHlwZSBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIGJ1c2luZXNzIHVuaXQgdGhhdCBvd25zIHRoZSByZWNvcmRcclxuICAqL1xyXG4gIG93bmluZ2J1c2luZXNzdW5pdD86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gICBTdHJpbmdUeXBlXHJcbiAgKi9cclxuICBvd25pbmdidXNpbmVzc3VuaXRuYW1lPzogc3RyaW5nIHwgbnVsbDtcclxuICAvKlxyXG4gIE93bmluZyBUZWFtIExvb2t1cFR5cGUgVW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSB0ZWFtIHRoYXQgb3ducyB0aGUgcmVjb3JkLlxyXG4gICovXHJcbiAgb3duaW5ndGVhbT86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gIE93bmluZyBVc2VyIExvb2t1cFR5cGUgVW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSB1c2VyIHRoYXQgb3ducyB0aGUgcmVjb3JkLlxyXG4gICovXHJcbiAgb3duaW5ndXNlcj86IGltcG9ydChcImRhdGF2ZXJzZS1pZnlcIikuRW50aXR5UmVmZXJlbmNlIHwgbnVsbDtcclxuICAvKlxyXG4gIFN0YXR1cyBiaXNfdmFsaWRhdGlvbl9iaXNfdmFsaWRhdGlvbl9zdGF0ZWNvZGUgU3RhdHVzIG9mIHRoZSBWYWxpZGF0aW9uXHJcbiAgKi9cclxuICBzdGF0ZWNvZGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9iaXNfdmFsaWRhdGlvbl9iaXNfdmFsaWRhdGlvbl9zdGF0ZWNvZGVcIikuYmlzX3ZhbGlkYXRpb25fYmlzX3ZhbGlkYXRpb25fc3RhdGVjb2RlIHwgbnVsbDtcclxuICAvKlxyXG4gIFN0YXR1cyBSZWFzb24gYmlzX3ZhbGlkYXRpb25fYmlzX3ZhbGlkYXRpb25fc3RhdHVzY29kZSBSZWFzb24gZm9yIHRoZSBzdGF0dXMgb2YgdGhlIFZhbGlkYXRpb25cclxuICAqL1xyXG4gIHN0YXR1c2NvZGU/OiBpbXBvcnQoXCIuLi9lbnVtcy9iaXNfdmFsaWRhdGlvbl9iaXNfdmFsaWRhdGlvbl9zdGF0dXNjb2RlXCIpLmJpc192YWxpZGF0aW9uX2Jpc192YWxpZGF0aW9uX3N0YXR1c2NvZGUgfCBudWxsO1xyXG4gIC8qXHJcbiAgVGltZSBab25lIFJ1bGUgVmVyc2lvbiBOdW1iZXIgSW50ZWdlclR5cGUgRm9yIGludGVybmFsIHVzZSBvbmx5LlxyXG4gICovXHJcbiAgdGltZXpvbmVydWxldmVyc2lvbm51bWJlcj86IG51bWJlciB8IG51bGw7XHJcbiAgLypcclxuICBVVEMgQ29udmVyc2lvbiBUaW1lIFpvbmUgQ29kZSBJbnRlZ2VyVHlwZSBUaW1lIHpvbmUgY29kZSB0aGF0IHdhcyBpbiB1c2Ugd2hlbiB0aGUgcmVjb3JkIHdhcyBjcmVhdGVkLlxyXG4gICovXHJcbiAgdXRjY29udmVyc2lvbnRpbWV6b25lY29kZT86IG51bWJlciB8IG51bGw7XHJcbiAgLypcclxuICBWZXJzaW9uIE51bWJlciBCaWdJbnRUeXBlIFZlcnNpb24gTnVtYmVyXHJcbiAgKi9cclxuICB2ZXJzaW9ubnVtYmVyPzogbnVtYmVyIHwgbnVsbDtcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/dataverse-gen/entities/bis_validation.ts\n");

/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_accountcategorycode.ts":
/*!************************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_accountcategorycode.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_accountclassificationcode.ts":
/*!******************************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_accountclassificationcode.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_accountratingcode.ts":
/*!**********************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_accountratingcode.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_address1_addresstypecode.ts":
/*!*****************************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_address1_addresstypecode.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_address1_freighttermscode.ts":
/*!******************************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_address1_freighttermscode.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_address1_shippingmethodcode.ts":
/*!********************************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_address1_shippingmethodcode.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_address2_addresstypecode.ts":
/*!*****************************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_address2_addresstypecode.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_address2_freighttermscode.ts":
/*!******************************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_address2_freighttermscode.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_address2_shippingmethodcode.ts":
/*!********************************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_address2_shippingmethodcode.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_businesstypecode.ts":
/*!*********************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_businesstypecode.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_customersizecode.ts":
/*!*********************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_customersizecode.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_customertypecode.ts":
/*!*********************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_customertypecode.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_industrycode.ts":
/*!*****************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_industrycode.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_ownershipcode.ts":
/*!******************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_ownershipcode.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_paymenttermscode.ts":
/*!*********************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_paymenttermscode.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_preferredappointmentdaycode.ts":
/*!********************************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_preferredappointmentdaycode.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_preferredappointmenttimecode.ts":
/*!*********************************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_preferredappointmenttimecode.ts ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_preferredcontactmethodcode.ts":
/*!*******************************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_preferredcontactmethodcode.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_shippingmethodcode.ts":
/*!***********************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_shippingmethodcode.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_statecode.ts":
/*!**************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_statecode.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_statuscode.ts":
/*!***************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_statuscode.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/account_account_territorycode.ts":
/*!******************************************************************!*\
  !*** ./src/dataverse-gen/enums/account_account_territorycode.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_address_bis_address_statecode.ts":
/*!**********************************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_address_bis_address_statecode.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_address_bis_address_statuscode.ts":
/*!***********************************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_address_bis_address_statuscode.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_addressbook_bis_addressbook_statecode.ts":
/*!******************************************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_addressbook_bis_addressbook_statecode.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_addressbook_bis_addressbook_statuscode.ts":
/*!*******************************************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_addressbook_bis_addressbook_statuscode.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_addresstype.ts":
/*!****************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_addresstype.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_city_bis_city_statecode.ts":
/*!****************************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_city_bis_city_statecode.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_city_bis_city_statuscode.ts":
/*!*****************************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_city_bis_city_statuscode.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_contactcpmifieldofexpertise.ts":
/*!********************************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_contactcpmifieldofexpertise.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_contacttype.ts":
/*!****************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_contacttype.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_creationsource.ts":
/*!*******************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_creationsource.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_institutionpartyfunction.ts":
/*!*****************************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_institutionpartyfunction.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_isrstatus.ts":
/*!**************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_isrstatus.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_languagespoken.ts":
/*!*******************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_languagespoken.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_prefix.ts":
/*!***********************************************!*\
  !*** ./src/dataverse-gen/enums/bis_prefix.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_salutation.ts":
/*!***************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_salutation.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_systemsettings_bis_systemsettings_statecode.ts":
/*!************************************************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_systemsettings_bis_systemsettings_statecode.ts ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_systemsettings_bis_systemsettings_statuscode.ts":
/*!*************************************************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_systemsettings_bis_systemsettings_statuscode.ts ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_systemsettingtype.ts":
/*!**********************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_systemsettingtype.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_validation_bis_validation_statecode.ts":
/*!****************************************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_validation_bis_validation_statecode.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_validation_bis_validation_statuscode.ts":
/*!*****************************************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_validation_bis_validation_statuscode.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_validationrelatedentity.ts":
/*!****************************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_validationrelatedentity.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/bis_validationrelatedevent.ts":
/*!***************************************************************!*\
  !*** ./src/dataverse-gen/enums/bis_validationrelatedevent.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_accountrolecode.ts":
/*!********************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_accountrolecode.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_address1_addresstypecode.ts":
/*!*****************************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_address1_addresstypecode.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_address1_freighttermscode.ts":
/*!******************************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_address1_freighttermscode.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_address1_shippingmethodcode.ts":
/*!********************************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_address1_shippingmethodcode.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_address2_addresstypecode.ts":
/*!*****************************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_address2_addresstypecode.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_address2_freighttermscode.ts":
/*!******************************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_address2_freighttermscode.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_address2_shippingmethodcode.ts":
/*!********************************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_address2_shippingmethodcode.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_address3_addresstypecode.ts":
/*!*****************************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_address3_addresstypecode.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_address3_freighttermscode.ts":
/*!******************************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_address3_freighttermscode.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_address3_shippingmethodcode.ts":
/*!********************************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_address3_shippingmethodcode.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_customersizecode.ts":
/*!*********************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_customersizecode.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_customertypecode.ts":
/*!*********************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_customertypecode.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_educationcode.ts":
/*!******************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_educationcode.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_familystatuscode.ts":
/*!*********************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_familystatuscode.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_gendercode.ts":
/*!***************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_gendercode.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_haschildrencode.ts":
/*!********************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_haschildrencode.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_leadsourcecode.ts":
/*!*******************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_leadsourcecode.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_msdyn_orgchangestatus.ts":
/*!**************************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_msdyn_orgchangestatus.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_paymenttermscode.ts":
/*!*********************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_paymenttermscode.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_preferredappointmentdaycode.ts":
/*!********************************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_preferredappointmentdaycode.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_preferredappointmenttimecode.ts":
/*!*********************************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_preferredappointmenttimecode.ts ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_preferredcontactmethodcode.ts":
/*!*******************************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_preferredcontactmethodcode.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_shippingmethodcode.ts":
/*!***********************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_shippingmethodcode.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_statecode.ts":
/*!**************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_statecode.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_statuscode.ts":
/*!***************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_statuscode.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/contact_contact_territorycode.ts":
/*!******************************************************************!*\
  !*** ./src/dataverse-gen/enums/contact_contact_territorycode.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/msevtmgt_nooryes.ts":
/*!*****************************************************!*\
  !*** ./src/dataverse-gen/enums/msevtmgt_nooryes.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/enums/msgdpr_gdpr_consent_option_set.ts":
/*!*******************************************************************!*\
  !*** ./src/dataverse-gen/enums/msgdpr_gdpr_consent_option_set.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/dataverse-gen/index.ts":
/*!************************************!*\
  !*** ./src/dataverse-gen/index.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n/* eslint-disable*/\r\n__exportStar(__webpack_require__(/*! ./entities/Account */ \"./src/dataverse-gen/entities/Account.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./entities/bis_address */ \"./src/dataverse-gen/entities/bis_address.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./entities/bis_addressbook */ \"./src/dataverse-gen/entities/bis_addressbook.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./entities/bis_city */ \"./src/dataverse-gen/entities/bis_city.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./entities/bis_systemsettings */ \"./src/dataverse-gen/entities/bis_systemsettings.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./entities/bis_validation */ \"./src/dataverse-gen/entities/bis_validation.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./entities/Contact */ \"./src/dataverse-gen/entities/Contact.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_accountcategorycode */ \"./src/dataverse-gen/enums/account_account_accountcategorycode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_accountclassificationcode */ \"./src/dataverse-gen/enums/account_account_accountclassificationcode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_accountratingcode */ \"./src/dataverse-gen/enums/account_account_accountratingcode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_address1_addresstypecode */ \"./src/dataverse-gen/enums/account_account_address1_addresstypecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_address1_freighttermscode */ \"./src/dataverse-gen/enums/account_account_address1_freighttermscode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_address1_shippingmethodcode */ \"./src/dataverse-gen/enums/account_account_address1_shippingmethodcode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_address2_addresstypecode */ \"./src/dataverse-gen/enums/account_account_address2_addresstypecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_address2_freighttermscode */ \"./src/dataverse-gen/enums/account_account_address2_freighttermscode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_address2_shippingmethodcode */ \"./src/dataverse-gen/enums/account_account_address2_shippingmethodcode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_creationsource */ \"./src/dataverse-gen/enums/bis_creationsource.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_isrstatus */ \"./src/dataverse-gen/enums/bis_isrstatus.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_institutionpartyfunction */ \"./src/dataverse-gen/enums/bis_institutionpartyfunction.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_businesstypecode */ \"./src/dataverse-gen/enums/account_account_businesstypecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_customersizecode */ \"./src/dataverse-gen/enums/account_account_customersizecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_customertypecode */ \"./src/dataverse-gen/enums/account_account_customertypecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_industrycode */ \"./src/dataverse-gen/enums/account_account_industrycode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/msevtmgt_nooryes */ \"./src/dataverse-gen/enums/msevtmgt_nooryes.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_ownershipcode */ \"./src/dataverse-gen/enums/account_account_ownershipcode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_paymenttermscode */ \"./src/dataverse-gen/enums/account_account_paymenttermscode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_preferredappointmentdaycode */ \"./src/dataverse-gen/enums/account_account_preferredappointmentdaycode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_preferredappointmenttimecode */ \"./src/dataverse-gen/enums/account_account_preferredappointmenttimecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_preferredcontactmethodcode */ \"./src/dataverse-gen/enums/account_account_preferredcontactmethodcode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_shippingmethodcode */ \"./src/dataverse-gen/enums/account_account_shippingmethodcode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_statecode */ \"./src/dataverse-gen/enums/account_account_statecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_statuscode */ \"./src/dataverse-gen/enums/account_account_statuscode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/account_account_territorycode */ \"./src/dataverse-gen/enums/account_account_territorycode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_address_bis_address_statecode */ \"./src/dataverse-gen/enums/bis_address_bis_address_statecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_address_bis_address_statuscode */ \"./src/dataverse-gen/enums/bis_address_bis_address_statuscode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_addresstype */ \"./src/dataverse-gen/enums/bis_addresstype.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_addressbook_bis_addressbook_statecode */ \"./src/dataverse-gen/enums/bis_addressbook_bis_addressbook_statecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_addressbook_bis_addressbook_statuscode */ \"./src/dataverse-gen/enums/bis_addressbook_bis_addressbook_statuscode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_city_bis_city_statecode */ \"./src/dataverse-gen/enums/bis_city_bis_city_statecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_city_bis_city_statuscode */ \"./src/dataverse-gen/enums/bis_city_bis_city_statuscode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_systemsettingtype */ \"./src/dataverse-gen/enums/bis_systemsettingtype.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_systemsettings_bis_systemsettings_statecode */ \"./src/dataverse-gen/enums/bis_systemsettings_bis_systemsettings_statecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_systemsettings_bis_systemsettings_statuscode */ \"./src/dataverse-gen/enums/bis_systemsettings_bis_systemsettings_statuscode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_validationrelatedentity */ \"./src/dataverse-gen/enums/bis_validationrelatedentity.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_validationrelatedevent */ \"./src/dataverse-gen/enums/bis_validationrelatedevent.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_validation_bis_validation_statecode */ \"./src/dataverse-gen/enums/bis_validation_bis_validation_statecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_validation_bis_validation_statuscode */ \"./src/dataverse-gen/enums/bis_validation_bis_validation_statuscode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_accountrolecode */ \"./src/dataverse-gen/enums/contact_contact_accountrolecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_address1_addresstypecode */ \"./src/dataverse-gen/enums/contact_contact_address1_addresstypecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_address1_freighttermscode */ \"./src/dataverse-gen/enums/contact_contact_address1_freighttermscode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_address1_shippingmethodcode */ \"./src/dataverse-gen/enums/contact_contact_address1_shippingmethodcode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_address2_addresstypecode */ \"./src/dataverse-gen/enums/contact_contact_address2_addresstypecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_address2_freighttermscode */ \"./src/dataverse-gen/enums/contact_contact_address2_freighttermscode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_address2_shippingmethodcode */ \"./src/dataverse-gen/enums/contact_contact_address2_shippingmethodcode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_address3_addresstypecode */ \"./src/dataverse-gen/enums/contact_contact_address3_addresstypecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_address3_freighttermscode */ \"./src/dataverse-gen/enums/contact_contact_address3_freighttermscode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_address3_shippingmethodcode */ \"./src/dataverse-gen/enums/contact_contact_address3_shippingmethodcode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_contacttype */ \"./src/dataverse-gen/enums/bis_contacttype.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_contactcpmifieldofexpertise */ \"./src/dataverse-gen/enums/bis_contactcpmifieldofexpertise.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_languagespoken */ \"./src/dataverse-gen/enums/bis_languagespoken.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_prefix */ \"./src/dataverse-gen/enums/bis_prefix.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/bis_salutation */ \"./src/dataverse-gen/enums/bis_salutation.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_customersizecode */ \"./src/dataverse-gen/enums/contact_contact_customersizecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_customertypecode */ \"./src/dataverse-gen/enums/contact_contact_customertypecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_educationcode */ \"./src/dataverse-gen/enums/contact_contact_educationcode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_familystatuscode */ \"./src/dataverse-gen/enums/contact_contact_familystatuscode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_gendercode */ \"./src/dataverse-gen/enums/contact_contact_gendercode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_haschildrencode */ \"./src/dataverse-gen/enums/contact_contact_haschildrencode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_leadsourcecode */ \"./src/dataverse-gen/enums/contact_contact_leadsourcecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_msdyn_orgchangestatus */ \"./src/dataverse-gen/enums/contact_contact_msdyn_orgchangestatus.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/msgdpr_gdpr_consent_option_set */ \"./src/dataverse-gen/enums/msgdpr_gdpr_consent_option_set.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_paymenttermscode */ \"./src/dataverse-gen/enums/contact_contact_paymenttermscode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_preferredappointmentdaycode */ \"./src/dataverse-gen/enums/contact_contact_preferredappointmentdaycode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_preferredappointmenttimecode */ \"./src/dataverse-gen/enums/contact_contact_preferredappointmenttimecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_preferredcontactmethodcode */ \"./src/dataverse-gen/enums/contact_contact_preferredcontactmethodcode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_shippingmethodcode */ \"./src/dataverse-gen/enums/contact_contact_shippingmethodcode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_statecode */ \"./src/dataverse-gen/enums/contact_contact_statecode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_statuscode */ \"./src/dataverse-gen/enums/contact_contact_statuscode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enums/contact_contact_territorycode */ \"./src/dataverse-gen/enums/contact_contact_territorycode.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./metadata */ \"./src/dataverse-gen/metadata.ts\"), exports);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/dataverse-gen/index.ts\n");

/***/ }),

/***/ "./src/dataverse-gen/metadata.ts":
/*!***************************************!*\
  !*** ./src/dataverse-gen/metadata.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.metadataCache = exports.Entities = void 0;\r\n/* eslint-disable*/\r\nvar Account_1 = __webpack_require__(/*! ./entities/Account */ \"./src/dataverse-gen/entities/Account.ts\");\r\nvar bis_address_1 = __webpack_require__(/*! ./entities/bis_address */ \"./src/dataverse-gen/entities/bis_address.ts\");\r\nvar bis_addressbook_1 = __webpack_require__(/*! ./entities/bis_addressbook */ \"./src/dataverse-gen/entities/bis_addressbook.ts\");\r\nvar bis_city_1 = __webpack_require__(/*! ./entities/bis_city */ \"./src/dataverse-gen/entities/bis_city.ts\");\r\nvar bis_systemsettings_1 = __webpack_require__(/*! ./entities/bis_systemsettings */ \"./src/dataverse-gen/entities/bis_systemsettings.ts\");\r\nvar bis_validation_1 = __webpack_require__(/*! ./entities/bis_validation */ \"./src/dataverse-gen/entities/bis_validation.ts\");\r\nvar Contact_1 = __webpack_require__(/*! ./entities/Contact */ \"./src/dataverse-gen/entities/Contact.ts\");\r\nexports.Entities = {\r\n    Account: \"account\",\r\n    bis_address: \"bis_address\",\r\n    bis_addressbook: \"bis_addressbook\",\r\n    bis_city: \"bis_city\",\r\n    bis_systemsettings: \"bis_systemsettings\",\r\n    bis_validation: \"bis_validation\",\r\n    Contact: \"contact\",\r\n};\r\n// Setup Metadata\r\n// Usage: setMetadataCache(metadataCache);\r\nexports.metadataCache = {\r\n    entities: {\r\n        account: Account_1.accountMetadata,\r\n        bis_address: bis_address_1.bis_addressMetadata,\r\n        bis_addressbook: bis_addressbook_1.bis_addressbookMetadata,\r\n        bis_city: bis_city_1.bis_cityMetadata,\r\n        bis_systemsettings: bis_systemsettings_1.bis_systemsettingsMetadata,\r\n        bis_validation: bis_validation_1.bis_validationMetadata,\r\n        contact: Contact_1.contactMetadata,\r\n    },\r\n    actions: {}\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YXZlcnNlLWdlbi9tZXRhZGF0YS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQSxtQkFBbUI7QUFDbkIseUdBQXFEO0FBQ3JELHFIQUE2RDtBQUM3RCxpSUFBcUU7QUFDckUsNEdBQXVEO0FBQ3ZELDBJQUEyRTtBQUMzRSw4SEFBbUU7QUFDbkUseUdBQXFEO0FBRXhDLGdCQUFRLEdBQUc7SUFDdEIsT0FBTyxFQUFFLFNBQVM7SUFDbEIsV0FBVyxFQUFFLGFBQWE7SUFDMUIsZUFBZSxFQUFFLGlCQUFpQjtJQUNsQyxRQUFRLEVBQUUsVUFBVTtJQUNwQixrQkFBa0IsRUFBRSxvQkFBb0I7SUFDeEMsY0FBYyxFQUFFLGdCQUFnQjtJQUNoQyxPQUFPLEVBQUUsU0FBUztDQUNuQixDQUFDO0FBRUYsaUJBQWlCO0FBQ2pCLDBDQUEwQztBQUM3QixxQkFBYSxHQUFHO0lBQzNCLFFBQVEsRUFBRTtRQUNSLE9BQU8sRUFBRSx5QkFBZTtRQUN4QixXQUFXLEVBQUUsaUNBQW1CO1FBQ2hDLGVBQWUsRUFBRSx5Q0FBdUI7UUFDeEMsUUFBUSxFQUFFLDJCQUFnQjtRQUMxQixrQkFBa0IsRUFBRSwrQ0FBMEI7UUFDOUMsY0FBYyxFQUFFLHVDQUFzQjtRQUN0QyxPQUFPLEVBQUUseUJBQWU7S0FDekI7SUFDRCxPQUFPLEVBQUUsRUFDUjtDQUNGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9CaXMuQ29tbW9uLkNSTS8uL3NyYy9kYXRhdmVyc2UtZ2VuL21ldGFkYXRhLnRzPzE4NjkiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUqL1xyXG5pbXBvcnQgeyBhY2NvdW50TWV0YWRhdGEgfSBmcm9tIFwiLi9lbnRpdGllcy9BY2NvdW50XCI7XHJcbmltcG9ydCB7IGJpc19hZGRyZXNzTWV0YWRhdGEgfSBmcm9tIFwiLi9lbnRpdGllcy9iaXNfYWRkcmVzc1wiO1xyXG5pbXBvcnQgeyBiaXNfYWRkcmVzc2Jvb2tNZXRhZGF0YSB9IGZyb20gXCIuL2VudGl0aWVzL2Jpc19hZGRyZXNzYm9va1wiO1xyXG5pbXBvcnQgeyBiaXNfY2l0eU1ldGFkYXRhIH0gZnJvbSBcIi4vZW50aXRpZXMvYmlzX2NpdHlcIjtcclxuaW1wb3J0IHsgYmlzX3N5c3RlbXNldHRpbmdzTWV0YWRhdGEgfSBmcm9tIFwiLi9lbnRpdGllcy9iaXNfc3lzdGVtc2V0dGluZ3NcIjtcclxuaW1wb3J0IHsgYmlzX3ZhbGlkYXRpb25NZXRhZGF0YSB9IGZyb20gXCIuL2VudGl0aWVzL2Jpc192YWxpZGF0aW9uXCI7XHJcbmltcG9ydCB7IGNvbnRhY3RNZXRhZGF0YSB9IGZyb20gXCIuL2VudGl0aWVzL0NvbnRhY3RcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBFbnRpdGllcyA9IHtcclxuICBBY2NvdW50OiBcImFjY291bnRcIixcclxuICBiaXNfYWRkcmVzczogXCJiaXNfYWRkcmVzc1wiLFxyXG4gIGJpc19hZGRyZXNzYm9vazogXCJiaXNfYWRkcmVzc2Jvb2tcIixcclxuICBiaXNfY2l0eTogXCJiaXNfY2l0eVwiLFxyXG4gIGJpc19zeXN0ZW1zZXR0aW5nczogXCJiaXNfc3lzdGVtc2V0dGluZ3NcIixcclxuICBiaXNfdmFsaWRhdGlvbjogXCJiaXNfdmFsaWRhdGlvblwiLFxyXG4gIENvbnRhY3Q6IFwiY29udGFjdFwiLFxyXG59O1xyXG5cclxuLy8gU2V0dXAgTWV0YWRhdGFcclxuLy8gVXNhZ2U6IHNldE1ldGFkYXRhQ2FjaGUobWV0YWRhdGFDYWNoZSk7XHJcbmV4cG9ydCBjb25zdCBtZXRhZGF0YUNhY2hlID0ge1xyXG4gIGVudGl0aWVzOiB7XHJcbiAgICBhY2NvdW50OiBhY2NvdW50TWV0YWRhdGEsXHJcbiAgICBiaXNfYWRkcmVzczogYmlzX2FkZHJlc3NNZXRhZGF0YSxcclxuICAgIGJpc19hZGRyZXNzYm9vazogYmlzX2FkZHJlc3Nib29rTWV0YWRhdGEsXHJcbiAgICBiaXNfY2l0eTogYmlzX2NpdHlNZXRhZGF0YSxcclxuICAgIGJpc19zeXN0ZW1zZXR0aW5nczogYmlzX3N5c3RlbXNldHRpbmdzTWV0YWRhdGEsXHJcbiAgICBiaXNfdmFsaWRhdGlvbjogYmlzX3ZhbGlkYXRpb25NZXRhZGF0YSxcclxuICAgIGNvbnRhY3Q6IGNvbnRhY3RNZXRhZGF0YSxcclxuICB9LFxyXG4gIGFjdGlvbnM6IHtcclxuICB9XHJcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/dataverse-gen/metadata.ts\n");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\n//Forms\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./Forms/AccountForm */ \"./src/Forms/AccountForm.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./Forms/ContactForm */ \"./src/Forms/ContactForm.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./Forms/bis_validationForm */ \"./src/Forms/bis_validationForm.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./Forms/bis_addressbookFormQC */ \"./src/Forms/bis_addressbookFormQC.ts\"), exports);\r\n//Ribbons\r\n__exportStar(__webpack_require__(/*! ./Ribbons/AccountRibbon */ \"./src/Ribbons/AccountRibbon.ts\"), exports);\r\n//export * from \"./Ribbons/ContactRibbon\";\r\n//Common\r\n__exportStar(__webpack_require__(/*! ./Common/Configuration/ConfigurationReader */ \"./src/Common/Configuration/ConfigurationReader.ts\"), exports);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU87Ozs7Ozs7Ozs7Ozs7Ozs7QUFFUCxvR0FBb0M7QUFDcEMsb0dBQW9DO0FBQ3BDLGtIQUEyQztBQUMzQyx3SEFBOEM7QUFFOUMsU0FBUztBQUNULDRHQUF3QztBQUN4QywwQ0FBMEM7QUFFMUMsUUFBUTtBQUVSLGtKQUEwRCIsInNvdXJjZXMiOlsid2VicGFjazovL0Jpcy5Db21tb24uQ1JNLy4vc3JjL2luZGV4LnRzP2ZmYjQiXSwic291cmNlc0NvbnRlbnQiOlsiLy9Gb3Jtc1xyXG5cclxuZXhwb3J0ICogZnJvbSBcIi4vRm9ybXMvQWNjb3VudEZvcm1cIjtcclxuZXhwb3J0ICogZnJvbSBcIi4vRm9ybXMvQ29udGFjdEZvcm1cIjtcclxuZXhwb3J0ICogZnJvbSBcIi4vRm9ybXMvYmlzX3ZhbGlkYXRpb25Gb3JtXCI7XHJcbmV4cG9ydCAqIGZyb20gXCIuL0Zvcm1zL2Jpc19hZGRyZXNzYm9va0Zvcm1RQ1wiO1xyXG5cclxuLy9SaWJib25zXHJcbmV4cG9ydCAqIGZyb20gXCIuL1JpYmJvbnMvQWNjb3VudFJpYmJvblwiO1xyXG4vL2V4cG9ydCAqIGZyb20gXCIuL1JpYmJvbnMvQ29udGFjdFJpYmJvblwiO1xyXG5cclxuLy9Db21tb25cclxuXHJcbmV4cG9ydCAqIGZyb20gXCIuL0NvbW1vbi9Db25maWd1cmF0aW9uL0NvbmZpZ3VyYXRpb25SZWFkZXJcIiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	((Bis = typeof Bis === "undefined" ? {} : Bis).Common = Bis.Common || {}).CRM = __webpack_exports__;
/******/ 	
/******/ })()
;